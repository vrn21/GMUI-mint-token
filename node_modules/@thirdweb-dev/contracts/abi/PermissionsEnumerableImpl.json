{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610d0c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b610096366004610ab2565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610acb565b610178565b005b6100c16100d1366004610acb565b61022e565b6100e96100e4366004610b07565b61029d565b6040516100a59190610b29565b610109610104366004610acb565b6103ad565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610acb565b6103e1565b61009b610142366004610ab2565b610444565b6100c1610155366004610acb565b6104e1565b60006101646104e8565b600092835260010160205250604090205490565b6101a36101836104e8565b6000848152600191909101602052604090205461019e6104f7565b610575565b6101ab6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff16156102205760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b61022a82826105fa565b5050565b806001600160a01b03166102406104f7565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610217565b61022a828261060e565b6000806102a8610622565b600085815260209190915260408120549150805b828110156103a35760006102ce610622565b60008881526020918252604080822085835260010190925220546001600160a01b031614610347578482141561033557610306610622565b600087815260209182526040808220938252600190930190915220546001600160a01b031692506103a7915050565b610340600183610b53565b9150610391565b6103528660006103ad565b801561037e5750610361610622565b600087815260209182526040808220828052600201909252205481145b156103915761038e600183610b53565b91505b61039c600182610b53565b90506102bc565b5050505b92915050565b60006103b76104e8565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b60006103eb6104e8565b600084815260209182526040808220828052909252205460ff1661043b576104116104e8565b6000848152602091825260408082206001600160a01b0386168352909252205460ff1690506103a7565b50600192915050565b60008061044f610622565b6000848152602091909152604081205491505b818110156104bc576000610474610622565b60008681526020918252604080822085835260010190925220546001600160a01b0316146104aa576104a7600184610b53565b92505b6104b5600182610b53565b9050610462565b506104c88360006103ad565b156104db576104d8600183610b53565b91505b50919050565b6102936101835b60006104f261062c565b905090565b60405163572b6c0560e01b8152600090309063572b6c059061051d903390600401610b29565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610b6b565b15610570575060131936013560601c90565b503390565b61057d6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff1661022a576105b8816001600160a01b0316601461068a565b6105c383602061068a565b6040516020016105d4929190610bbd565b60408051601f198184030181529082905262461bcd60e51b825261021791600401610c2a565b610604828261082d565b61022a82826108b1565b6106188282610970565b61022a82826109f5565b60006104f2610a84565b60008061065a60017fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5610c5d565b60405160200161066c91815260200190565b60408051601f19818403018152919052805160209091012092915050565b60606000610699836002610c74565b6106a4906002610b53565b67ffffffffffffffff8111156106bc576106bc610c93565b6040519080825280601f01601f1916602001820160405280156106e6576020820181803683370190505b509050600360fc1b8160008151811061070157610701610ca9565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061073057610730610ca9565b60200101906001600160f81b031916908160001a9053506000610754846002610c74565b61075f906001610b53565b90505b60018111156107d7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061079357610793610ca9565b1a60f81b8282815181106107a9576107a9610ca9565b60200101906001600160f81b031916908160001a90535060049490941c936107d081610cbf565b9050610762565b5083156108265760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610217565b9392505050565b60016108376104e8565b6000848152602091825260408082206001600160a01b038616835290925220805460ff191691151591909117905561086d6104f7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006108bb610622565b60008481526020919091526040902054905060016108d7610622565b60008581526020919091526040812080549091906108f6908490610b53565b90915550829050610905610622565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b039290921691909117905580610945610622565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b61097a8282610575565b6109826104e8565b6000838152602091825260408082206001600160a01b038516835290925220805460ff191690556109b16104f7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006109ff610622565b6000848152602091825260408082206001600160a01b038616835260020190925220549050610a2c610622565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055610a5b610622565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008061065a60017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c610c5d565b600060208284031215610ac457600080fd5b5035919050565b60008060408385031215610ade57600080fd5b8235915060208301356001600160a01b0381168114610afc57600080fd5b809150509250929050565b60008060408385031215610b1a57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b6657610b66610b3d565b500190565b600060208284031215610b7d57600080fd5b8151801515811461082657600080fd5b60005b83811015610ba8578181015183820152602001610b90565b83811115610bb7576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610bed816015850160208801610b8d565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610c1e816026840160208801610b8d565b01602601949350505050565b6020815260008251806020840152610c49816040850160208701610b8d565b601f01601f19169190910160400192915050565b600082821015610c6f57610c6f610b3d565b500390565b6000816000190483118215151615610c8e57610c8e610b3d565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610cce57610cce610b3d565b50600019019056fea264697066735822122095044598cd73666c88d58c205b7fa4db2ec0a2e4ec55eb69a159d7206f5d6bad64736f6c634300080c0033",
    "sourceMap": "172:750:191:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b610096366004610ab2565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610acb565b610178565b005b6100c16100d1366004610acb565b61022e565b6100e96100e4366004610b07565b61029d565b6040516100a59190610b29565b610109610104366004610acb565b6103ad565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610acb565b6103e1565b61009b610142366004610ab2565b610444565b6100c1610155366004610acb565b6104e1565b60006101646104e8565b600092835260010160205250604090205490565b6101a36101836104e8565b6000848152600191909101602052604090205461019e6104f7565b610575565b6101ab6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff16156102205760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b61022a82826105fa565b5050565b806001600160a01b03166102406104f7565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610217565b61022a828261060e565b6000806102a8610622565b600085815260209190915260408120549150805b828110156103a35760006102ce610622565b60008881526020918252604080822085835260010190925220546001600160a01b031614610347578482141561033557610306610622565b600087815260209182526040808220938252600190930190915220546001600160a01b031692506103a7915050565b610340600183610b53565b9150610391565b6103528660006103ad565b801561037e5750610361610622565b600087815260209182526040808220828052600201909252205481145b156103915761038e600183610b53565b91505b61039c600182610b53565b90506102bc565b5050505b92915050565b60006103b76104e8565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b60006103eb6104e8565b600084815260209182526040808220828052909252205460ff1661043b576104116104e8565b6000848152602091825260408082206001600160a01b0386168352909252205460ff1690506103a7565b50600192915050565b60008061044f610622565b6000848152602091909152604081205491505b818110156104bc576000610474610622565b60008681526020918252604080822085835260010190925220546001600160a01b0316146104aa576104a7600184610b53565b92505b6104b5600182610b53565b9050610462565b506104c88360006103ad565b156104db576104d8600183610b53565b91505b50919050565b6102936101835b60006104f261062c565b905090565b60405163572b6c0560e01b8152600090309063572b6c059061051d903390600401610b29565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610b6b565b15610570575060131936013560601c90565b503390565b61057d6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff1661022a576105b8816001600160a01b0316601461068a565b6105c383602061068a565b6040516020016105d4929190610bbd565b60408051601f198184030181529082905262461bcd60e51b825261021791600401610c2a565b610604828261082d565b61022a82826108b1565b6106188282610970565b61022a82826109f5565b60006104f2610a84565b60008061065a60017fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5610c5d565b60405160200161066c91815260200190565b60408051601f19818403018152919052805160209091012092915050565b60606000610699836002610c74565b6106a4906002610b53565b67ffffffffffffffff8111156106bc576106bc610c93565b6040519080825280601f01601f1916602001820160405280156106e6576020820181803683370190505b509050600360fc1b8160008151811061070157610701610ca9565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061073057610730610ca9565b60200101906001600160f81b031916908160001a9053506000610754846002610c74565b61075f906001610b53565b90505b60018111156107d7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061079357610793610ca9565b1a60f81b8282815181106107a9576107a9610ca9565b60200101906001600160f81b031916908160001a90535060049490941c936107d081610cbf565b9050610762565b5083156108265760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610217565b9392505050565b60016108376104e8565b6000848152602091825260408082206001600160a01b038616835290925220805460ff191691151591909117905561086d6104f7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006108bb610622565b60008481526020919091526040902054905060016108d7610622565b60008581526020919091526040812080549091906108f6908490610b53565b90915550829050610905610622565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b039290921691909117905580610945610622565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b61097a8282610575565b6109826104e8565b6000838152602091825260408082206001600160a01b038516835290925220805460ff191690556109b16104f7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006109ff610622565b6000848152602091825260408082206001600160a01b038616835260020190925220549050610a2c610622565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055610a5b610622565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008061065a60017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c610c5d565b600060208284031215610ac457600080fd5b5035919050565b60008060408385031215610ade57600080fd5b8235915060208301356001600160a01b0381168114610afc57600080fd5b809150509250929050565b60008060408385031215610b1a57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b6657610b66610b3d565b500190565b600060208284031215610b7d57600080fd5b8151801515811461082657600080fd5b60005b83811015610ba8578181015183820152602001610b90565b83811115610bb7576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610bed816015850160208801610b8d565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610c1e816026840160208801610b8d565b01602601949350505050565b6020815260008251806020840152610c49816040850160208701610b8d565b601f01601f19169190910160400192915050565b600082821015610c6f57610c6f610b3d565b500390565b6000816000190483118215151615610c8e57610c8e610b3d565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610cce57610cce610b3d565b50600019019056fea264697066735822122095044598cd73666c88d58c205b7fa4db2ec0a2e4ec55eb69a159d7206f5d6bad64736f6c634300080c0033",
    "sourceMap": "172:750:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:142:181;;;;;;:::i;:::-;;:::i;:::-;;;345:25:635;;;333:2;318:18;3265:142:181;;;;;;;;3802:317;;;;;;:::i;:::-;;:::i;:::-;;5083:219;;;;;;:::i;:::-;;:::i;2141:791:182:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1783:153:181:-;;;;;;:::i;:::-;;:::i;:::-;;;1366:14:635;;1359:22;1341:41;;1329:2;1314:18;1783:153:181;1201:187:635;1199:49:181;;1244:4;1199:49;;2687:255;;;;;;:::i;:::-;;:::i;3339:462:182:-;;;;;;:::i;:::-;;:::i;4490:195:181:-;;;;;;:::i;:::-;;:::i;3265:142::-;3333:7;3359:21;:19;:21::i;:::-;:41;;;;:35;;:41;;-1:-1:-1;3359:41:181;;;;;3265:142::o;3802:317::-;3886:67;3897:21;:19;:21::i;:::-;:41;;;;:35;;;;;:41;;;;;;3940:12;:10;:12::i;:::-;3886:10;:67::i;:::-;3967:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;3967:45:181;;;;;;;;;;;3963:115;;;4028:39;;-1:-1:-1;;;4028:39:181;;1777:2:635;4028:39:181;;;1759:21:635;1816:2;1796:18;;;1789:30;1855:31;1835:18;;;1828:59;1904:18;;4028:39:181;;;;;;;;3963:115;4087:25;4098:4;4104:7;4087:10;:25::i;:::-;3802:317;;:::o;5083:219::-;5190:7;-1:-1:-1;;;;;5174:23:181;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5174:23:181;;5170:90;;5213:36;;-1:-1:-1;;;5213:36:181;;2135:2:635;5213:36:181;;;2117:21:635;2174:2;2154:18;;;2147:30;-1:-1:-1;;;2193:18:635;;;2186:56;2259:18;;5213:36:181;1933:350:635;5170:90:181;5269:26;5281:4;5287:7;5269:11;:26::i;2141:791:182:-;2225:14;2251:20;2274:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;2274:43:182;2363:563;2387:12;2383:1;:16;2363:563;;;2499:1;2427:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;2427:60:182;:74;2423:493;;2534:5;2525;:14;2521:165;;;2572:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;;;:60;;;;;-1:-1:-1;;;;;2572:60:182;;-1:-1:-1;2654:13:182;;-1:-1:-1;;2654:13:182;2521:165;2703:10;2712:1;2703:10;;:::i;:::-;;;2423:493;;;2755:25;2763:4;2777:1;2755:7;:25::i;:::-;:103;;;;;2789:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:69;;;:57;;:69;;;;;2784:74;;2755:103;2734:182;;;2891:10;2900:1;2891:10;;:::i;:::-;;;2734:182;2401:6;2406:1;2401:6;;:::i;:::-;;;2363:563;;;;2241:691;;2141:791;;;;;:::o;1783:153:181:-;1861:4;1884:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;1884:45:181;;;;;;;;;-1:-1:-1;1884:45:181;;;;;;1783:153::o;2687:255::-;2766:4;2787:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;:48;;;;;;;;;;2782:132;;2858:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;2858:45:181;;;;;;;;;;;;-1:-1:-1;2851:52:181;;2782:132;-1:-1:-1;2931:4:181;2687:255;;;;:::o;3339:462:182:-;3413:13;3438:20;3461:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;3527:193:182;3551:12;3547:1;:16;3527:193;;;3663:1;3591:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;3591:60:182;:74;3587:123;;3685:10;3694:1;3685:10;;:::i;:::-;;;3587:123;3565:6;3570:1;3565:6;;:::i;:::-;;;3527:193;;;;3733:25;3741:4;3755:1;3733:7;:25::i;:::-;3729:66;;;3774:10;3783:1;3774:10;;:::i;:::-;;;3729:66;3428:373;3339:462;;;:::o;4490:195:181:-;4575:67;4586:21;7665:141;7719:36;7774:25;:23;:25::i;:::-;7767:32;;7665:141;:::o;238:416:191:-;322:61;;-1:-1:-1;;;322:61:191;;292:14;;346:4;;322:49;;:61;;372:10;;322:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;318:330;;;-1:-1:-1;;;555:14:191;551:23;538:37;534:2;530:46;238:416;:::o;318:330::-;-1:-1:-1;627:10:191;;238:416::o;6268:517:181:-;6356:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;6356:45:181;;;;;;;;;;;6351:428;;6560:43;6590:7;-1:-1:-1;;;;;6560:43:181;6600:2;6560:21;:43::i;:::-;6674:40;6704:4;6711:2;6674:21;:40::i;:::-;6469:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6469:267:181;;;;;;;;;;-1:-1:-1;;;6417:351:181;;;;;;;:::i;4203:160:182:-;4290:31;4307:4;4313:7;4290:16;:31::i;:::-;4331:25;4342:4;4348:7;4331:10;:25::i;3925:165::-;4013:32;4031:4;4037:7;4013:17;:32::i;:::-;4055:28;4069:4;4075:7;4055:13;:28::i;5260:171::-;5324:46;5389:35;:33;:35::i;859:187:181:-;898:18;;478:45;522:1;486:32;478:45;:::i;:::-;467:57;;;;;;345:25:635;;333:2;318:18;;199:177;467:57:181;;;;-1:-1:-1;;467:57:181;;;;;;;;;457:68;;467:57;457:68;;;;;859:187;-1:-1:-1;;859:187:181:o;1565:441:290:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;1687:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:290;;1665:47;;-1:-1:-1;;;1722:6:290;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:290;;;;;;;;;-1:-1:-1;;;1747:6:290;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:290;;;;;;;;-1:-1:-1;1777:9:290;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:290;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:290;;;;;;;;-1:-1:-1;1892:1:290;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:290;;1913:55;;;;-1:-1:-1;;;1913:55:290;;5185:2:635;1913:55:290;;;5167:21:635;;;5204:18;;;5197:30;5263:34;5243:18;;;5236:62;5315:18;;1913:55:290;4983:356:635;1913:55:290;1992:6;1565:441;-1:-1:-1;;;1565:441:290:o;5699:192:181:-;5825:4;5777:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;5777:45:181;;;;;;;;:52;;-1:-1:-1;;5777:52:181;;;;;;;;;;5871:12;:10;:12::i;:::-;-1:-1:-1;;;;;5844:40:181;5862:7;-1:-1:-1;;;;;5844:40:181;5856:4;5844:40;;;;;;;;;;5699:192;;:::o;4426:381:182:-;4496:11;4510:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4634:1:182;4575:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4711:7:182;;-1:-1:-1;4646:31:182;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4646:72:182;-1:-1:-1;;;;;4646:72:182;;;;;;;;;;:62;4728:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4728:66:182;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4426:381:182:o;5940:228:181:-;6019:25;6030:4;6036:7;6019:10;:25::i;:::-;6061:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;6061:45:181;;;;;;;;6054:52;;-1:-1:-1;;6054:52:181;;;6148:12;:10;:12::i;:::-;-1:-1:-1;;;;;6121:40:181;6139:7;-1:-1:-1;;;;;6121:40:181;6133:4;6121:40;;;;;;;;;;5940:228;;:::o;4875:323:182:-;4948:11;4962:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4962:66:182;;;;:57;;:66;;;;;;-1:-1:-1;5046:31:182;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;5039:69;;-1:-1:-1;;;;;;5039:69:182;;;5125:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;5125:66:182;;;;;:57;;;;:66;;-1:-1:-1;5125:66:182;;5118:73;4875:323::o;1328:198::-;1367:18;;619:56;674:1;627:43;619:56;:::i;14:180:635:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:635;;14:180;-1:-1:-1;14:180:635:o;381:354::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:23;;;-1:-1:-1;622:2:635;607:18;;594:32;-1:-1:-1;;;;;655:31:635;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;714:15;;;381:354;;;;;:::o;740:248::-;808:6;816;869:2;857:9;848:7;844:23;840:32;837:52;;;885:1;882;875:12;837:52;-1:-1:-1;;908:23:635;;;978:2;963:18;;;950:32;;-1:-1:-1;740:248:635:o;993:203::-;-1:-1:-1;;;;;1157:32:635;;;;1139:51;;1127:2;1112:18;;993:203::o;2288:127::-;2349:10;2344:3;2340:20;2337:1;2330:31;2380:4;2377:1;2370:15;2404:4;2401:1;2394:15;2420:128;2460:3;2491:1;2487:6;2484:1;2481:13;2478:39;;;2497:18;;:::i;:::-;-1:-1:-1;2533:9:635;;2420:128::o;2553:277::-;2620:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2721:9;2715:16;2774:5;2767:13;2760:21;2753:5;2750:32;2740:60;;2796:1;2793;2786:12;2835:258;2907:1;2917:113;2931:6;2928:1;2925:13;2917:113;;;3007:11;;;3001:18;2988:11;;;2981:39;2953:2;2946:10;2917:113;;;3048:6;3045:1;3042:13;3039:48;;;3083:1;3074:6;3069:3;3065:16;3058:27;3039:48;;2835:258;;;:::o;3098:784::-;-1:-1:-1;;;3504:3:635;3497:36;3479:3;3562:6;3556:13;3578:62;3633:6;3628:2;3623:3;3619:12;3612:4;3604:6;3600:17;3578:62;:::i;:::-;-1:-1:-1;;;3699:2:635;3659:16;;;3691:11;;;3684:40;3749:13;;3771:63;3749:13;3820:2;3812:11;;3805:4;3793:17;;3771:63;:::i;:::-;3854:17;3873:2;3850:26;;3098:784;-1:-1:-1;;;;3098:784:635:o;3887:383::-;4036:2;4025:9;4018:21;3999:4;4068:6;4062:13;4111:6;4106:2;4095:9;4091:18;4084:34;4127:66;4186:6;4181:2;4170:9;4166:18;4161:2;4153:6;4149:15;4127:66;:::i;:::-;4254:2;4233:15;-1:-1:-1;;4229:29:635;4214:45;;;;4261:2;4210:54;;3887:383;-1:-1:-1;;3887:383:635:o;4275:125::-;4315:4;4343:1;4340;4337:8;4334:34;;;4348:18;;:::i;:::-;-1:-1:-1;4385:9:635;;4275:125::o;4405:168::-;4445:7;4511:1;4507;4503:6;4499:14;4496:1;4493:21;4488:1;4481:9;4474:17;4470:45;4467:71;;;4518:18;;:::i;:::-;-1:-1:-1;4558:9:635;;4405:168::o;4578:127::-;4639:10;4634:3;4630:20;4627:1;4620:31;4670:4;4667:1;4660:15;4694:4;4691:1;4684:15;4710:127;4771:10;4766:3;4762:20;4759:1;4752:31;4802:4;4799:1;4792:15;4826:4;4823:1;4816:15;4842:136;4881:3;4909:5;4899:39;;4918:18;;:::i;:::-;-1:-1:-1;;;4954:18:635;;4842:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":\"PermissionsEnumerableImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60\",\"dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx\"]},\"contracts/extension/upgradeable/PermissionsEnumerable.sol\":{\"keccak256\":\"0x7018c88c67ed992590640a312c168943d696468a5bf976ea4735dc32f7b1e2a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e526c60a6bd7d1b4d74bb2e0fb5229fdd20903b9f139a7cb32de219b6a4ee861\",\"dweb:/ipfs/QmVUpmmfkEdRVGck8SN5gaUGeTVNjNMipra4qskyiTTamF\"]},\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":{\"keccak256\":\"0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435\",\"dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": "PermissionsEnumerableImpl"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6",
        "urls": [
          "bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60",
          "dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PermissionsEnumerable.sol": {
        "keccak256": "0x7018c88c67ed992590640a312c168943d696468a5bf976ea4735dc32f7b1e2a0",
        "urls": [
          "bzz-raw://e526c60a6bd7d1b4d74bb2e0fb5229fdd20903b9f139a7cb32de219b6a4ee861",
          "dweb:/ipfs/QmVUpmmfkEdRVGck8SN5gaUGeTVNjNMipra4qskyiTTamF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": {
        "keccak256": "0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f",
        "urls": [
          "bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435",
          "dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol",
    "id": 43943,
    "exportedSymbols": {
      "IERC2771Context": [
        33564
      ],
      "IPermissions": [
        34028
      ],
      "IPermissionsEnumerable": [
        34053
      ],
      "Permissions": [
        41968
      ],
      "PermissionsEnumerable": [
        42337
      ],
      "PermissionsEnumerableImpl": [
        43942
      ],
      "PermissionsEnumerableStorage": [
        42020
      ],
      "PermissionsStorage": [
        41582
      ],
      "TWStrings": [
        64717
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:884:191",
    "nodes": [
      {
        "id": 43881,
        "nodeType": "PragmaDirective",
        "src": "39:23:191",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 43882,
        "nodeType": "ImportDirective",
        "src": "86:45:191",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43943,
        "sourceUnit": 33565,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43883,
        "nodeType": "ImportDirective",
        "src": "132:38:191",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PermissionsEnumerable.sol",
        "file": "../PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43943,
        "sourceUnit": 42338,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43942,
        "nodeType": "ContractDefinition",
        "src": "172:750:191",
        "nodes": [
          {
            "id": 43909,
            "nodeType": "FunctionDefinition",
            "src": "238:416:191",
            "nodes": [],
            "body": {
              "id": 43908,
              "nodeType": "Block",
              "src": "308:346:191",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43898,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "372:3:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "372:10:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43894,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "346:4:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43942",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43942",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "338:7:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43892,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "338:7:191",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "338:13:191",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43891,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33564,
                          "src": "322:15:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33564_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "322:30:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$33564",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33563,
                      "src": "322:49:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:61:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 43906,
                    "nodeType": "Block",
                    "src": "606:42:191",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43903,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "627:3:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "627:10:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 43890,
                        "id": 43905,
                        "nodeType": "Return",
                        "src": "620:17:191"
                      }
                    ]
                  },
                  "id": 43907,
                  "nodeType": "IfStatement",
                  "src": "318:330:191",
                  "trueBody": {
                    "id": 43902,
                    "nodeType": "Block",
                    "src": "385:215:191",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "502:88:191",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "520:56:191",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "534:2:191",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "calldatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "555:12:191"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "555:14:191"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "571:2:191",
                                            "type": "",
                                            "value": "20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "551:3:191"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "551:23:191"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "538:12:191"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "538:37:191"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:3:191"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "530:46:191"
                              },
                              "variableNames": [
                                {
                                  "name": "sender",
                                  "nodeType": "YulIdentifier",
                                  "src": "520:6:191"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 43889,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "520:6:191",
                            "valueSize": 1
                          }
                        ],
                        "id": 43901,
                        "nodeType": "InlineAssembly",
                        "src": "493:97:191"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              41944
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "247:10:191",
            "overrides": {
              "id": 43887,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "274:8:191"
            },
            "parameters": {
              "id": 43886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:191"
            },
            "returnParameters": {
              "id": 43890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43889,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "300:6:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 43909,
                  "src": "292:14:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:191",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:16:191"
            },
            "scope": 43942,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 43941,
            "nodeType": "FunctionDefinition",
            "src": "660:260:191",
            "nodes": [],
            "body": {
              "id": 43940,
              "nodeType": "Block",
              "src": "728:192:191",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43922,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "792:3:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "792:10:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43918,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "766:4:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43942",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43942",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "758:7:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43916,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "758:7:191",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "758:13:191",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43915,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33564,
                          "src": "742:15:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33564_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "742:30:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$33564",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33563,
                      "src": "742:49:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:61:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 43938,
                    "nodeType": "Block",
                    "src": "874:40:191",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43935,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "895:3:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "895:8:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 43914,
                        "id": 43937,
                        "nodeType": "Return",
                        "src": "888:15:191"
                      }
                    ]
                  },
                  "id": 43939,
                  "nodeType": "IfStatement",
                  "src": "738:176:191",
                  "trueBody": {
                    "id": 43934,
                    "nodeType": "Block",
                    "src": "805:63:191",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 43925,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "826:3:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 43926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "826:8:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 43931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 43927,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "836:3:191",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 43928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "src": "836:8:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 43929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "836:15:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 43930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "854:2:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "836:20:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 43932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "826:31:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        "functionReturnParameters": 43914,
                        "id": 43933,
                        "nodeType": "Return",
                        "src": "819:38:191"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              41953
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "669:8:191",
            "overrides": {
              "id": 43911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "694:8:191"
            },
            "parameters": {
              "id": 43910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:191"
            },
            "returnParameters": {
              "id": 43914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43941,
                  "src": "712:14:191",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43912,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:5:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:16:191"
            },
            "scope": 43942,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43884,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42337,
              "src": "210:21:191"
            },
            "id": 43885,
            "nodeType": "InheritanceSpecifier",
            "src": "210:21:191"
          }
        ],
        "canonicalName": "PermissionsEnumerableImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43942,
          42337,
          41968,
          34053,
          34028
        ],
        "name": "PermissionsEnumerableImpl",
        "nameLocation": "181:25:191",
        "scope": 43943,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 191
}