{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct IRulesEngine.RuleWithId",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "RuleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "name": "RuleDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRulesEngine",
          "type": "address"
        }
      ],
      "name": "RulesEngineOverriden",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scorePerOwnedToken",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleMultiplicative",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeThreshold",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleThreshold",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ruleId",
          "type": "bytes32"
        }
      ],
      "name": "deleteRule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRules",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "internalType": "struct IRulesEngine.RuleWithId[]",
          "name": "rules",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRulesEngineOverride",
      "outputs": [
        {
          "internalType": "address",
          "name": "rulesEngineAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        }
      ],
      "name": "getScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rulesEngineAddress",
          "type": "address"
        }
      ],
      "name": "setRulesEngineOverride",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "257:850:383:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "257:850:383:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5478:296:187;;;;;;:::i;:::-;;:::i;:::-;;3164:475;;;;;;:::i;:::-;;:::i;:::-;;;1654:25:635;;;1642:2;1627:18;3164:475:187;;;;;;;;1825:339;;;:::i;:::-;;;;;;;:::i;2525:633::-;;;;;;:::i;:::-;;:::i;3645:149::-;;;;;;:::i;:::-;;:::i;2170:162::-;;;:::i;:::-;;;;;;;:::i;1261:558::-;;;;;;:::i;:::-;;:::i;5478:296::-;5566:25;:23;:25::i;:::-;5558:79;;;;-1:-1:-1;;;5558:79:187;;4767:2:635;5558:79:187;;;4749:21:635;4806:2;4786:18;;;4779:30;4845:34;4825:18;;;4818:62;-1:-1:-1;;;4896:18:635;;;4889:39;4945:19;;5558:79:187;;;;;;;;;5691:19;5647:21;:19;:21::i;:::-;:63;;-1:-1:-1;;;;;;5647:63:187;-1:-1:-1;;;;;5647:63:187;;;;;;5726:41;;;;;;;;-1:-1:-1;;5726:41:187;5478:296;:::o;3164:475::-;3242:14;3276;:12;:14::i;:::-;3268:56;;;;-1:-1:-1;;;3268:56:187;;;;;;;:::i;:::-;3384:10;;3396:14;;;;;3412:12;;;;;3426;;;;3440:10;;;;3367:104;;;;3384:10;3412:12;;3426;;3384:10;;3367:104;;:::i;:::-;;;;;;;;;;;;;3344:137;;;;;;3335:146;;3491:141;3516:106;;;;;;;;3527:6;3516:106;;;;3535:4;:10;;;-1:-1:-1;;;;;3516:106:187;;;;;3547:4;:14;;;3516:106;;;;;;;;:::i;:::-;;;;;3563:4;:12;;;3516:106;;;;3577:4;:12;;;3516:106;;;;3591:4;:10;;;3516:106;;;;3603:18;3516:106;;;;;;;;:::i;:::-;;;3491:11;:141::i;:::-;3164:475;;;:::o;1825:339::-;1871:25;1908:20;1931:34;:21;:19;:21::i;:::-;:25;;:32;:34::i;:::-;1989:10;;1908:57;;-1:-1:-1;1989:10:187;-1:-1:-1;;;;;2018:21:187;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2010:29;;2055:9;2050:108;2074:3;2070:1;:7;2050:108;;;2112:21;:19;:21::i;:::-;:27;;:35;2140:3;2144:1;2140:6;;;;;;;;:::i;:::-;;;;;;;;;;;;2112:35;;;;;;;;;;;;;-1:-1:-1;2112:35:187;2101:46;;;;;;;;;;;;;;;-1:-1:-1;;;;;2101:46:187;;;;;;;;;;2112:35;;2101:46;;;-1:-1:-1;;;2101:46:187;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:5;2107:1;2101:8;;;;;;;;:::i;:::-;;;;;;;;;;:46;2079:6;2084:1;2079:6;;:::i;:::-;;;2050:108;;;;1898:266;;1825:339;:::o;2525:633::-;2613:14;2647;:12;:14::i;:::-;2639:56;;;;-1:-1:-1;;;2639:56:187;;;;;;;:::i;:::-;2755:10;;2767:14;;;;;2783:12;;;;;2797:23;;;;2738:108;;;;2755:10;2783:12;;2797:23;2822;;2738:108;;:::i;:::-;;;;;;;;;;;;;2715:141;;;;;;2706:150;;2866:285;2891:250;;;;;;;;2919:6;2891:250;;;;2943:4;:10;;;-1:-1:-1;;;;;2891:250:187;;;;;2971:4;:14;;;2891:250;;;;;;;;:::i;:::-;;;3003:12;;;;;2891:250;;;;-1:-1:-1;2891:250:187;;;;;3063:23;;;;2891:250;;;;;;3104:23;2891:250;;3645:149;3709:14;:12;:14::i;:::-;3701:56;;;;-1:-1:-1;;;3701:56:187;;;;;;;:::i;:::-;3767:20;3779:7;3767:11;:20::i;:::-;3645:149;:::o;2170:162::-;2225:26;2284:21;:19;:21::i;:::-;:41;-1:-1:-1;;;;;2284:41:187;;2170:162;-1:-1:-1;2170:162:187:o;1261:558::-;1321:13;1346:22;1371:24;:22;:24::i;:::-;1346:49;-1:-1:-1;;;;;;1409:28:187;;;1405:116;;1460:50;;-1:-1:-1;;;1460:50:187;;-1:-1:-1;;;;;1460:37:187;;;;;:50;;1498:11;;1460:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1453:57;1261:558;-1:-1:-1;;;1261:558:187:o;1405:116::-;1531:20;1554:34;:21;:19;:21::i;:34::-;1612:10;;1531:57;;-1:-1:-1;1598:11:187;1633:180;1657:3;1653:1;:7;1633:180;;;1684:22;1709:21;:19;:21::i;:::-;:27;;:35;1737:3;1741:1;1737:6;;;;;;;;:::i;:::-;;;;;;;;;;;;1709:35;;;;;;;;;;;;;-1:-1:-1;1709:35:187;1684:60;;;;;;;;;;;;;;;-1:-1:-1;;;;;1684:60:187;;;;;;;;;;1709:35;;1684:60;;;-1:-1:-1;;;1684:60:187;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;1684:60:187;-1:-1:-1;1767:35:187;1784:11;1684:60;1767:16;:35::i;:::-;1758:44;;;;:::i;:::-;;-1:-1:-1;1662:6:187;;-1:-1:-1;1667:1:187;1662:6;;:::i;:::-;;;1633:180;;;;1336:483;;;1261:558;;;:::o;668:161:383:-;743:4;796:26;743:4;811:10;796:8;:26::i;:::-;789:33;;668:161;:::o;5780:141:187:-;5834:36;5889:25;:23;:25::i;406:140:383:-;470:4;493:46;502:24;528:10;493:8;:46::i;4962:266:187:-;5065:12;;5035:43;;:21;:19;:21::i;:::-;:25;;;:29;:43::i;:::-;5027:88;;;;-1:-1:-1;;;5027:88:187;;;;;;;:::i;:::-;5169:5;5125:21;:19;:21::i;:::-;5153:12;;5125:41;;;;:27;;;;;:41;;;;;;;;;:49;;;;;;;;;;;;;-1:-1:-1;;;;;5125:49:187;;;-1:-1:-1;;;;;;5125:49:187;;;;;;;;;;:41;;:49;;-1:-1:-1;;;;;;5125:49:187;;-1:-1:-1;;;5125:49:187;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5125:49:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5125:49:187;;;;;;;;;;;:::i;:::-;;;;;;;;;5201:5;:12;;;5189:32;5215:5;5189:32;;;;;;:::i;:::-;;;;;;;;4962:266;:::o;7664:124:244:-;7727:16;7762:19;7770:3;7762:7;:19::i;:::-;7755:26;7664:124;-1:-1:-1;;7664:124:244:o;5234:238:187:-;5299:41;5332:7;5299:21;:19;:21::i;:::-;:25;;;:32;:41::i;:::-;5291:86;;;;-1:-1:-1;;;5291:86:187;;;;;;;:::i;:::-;5394:21;:19;:21::i;:::-;:36;;;;:27;;;;:36;;;;;;5387:43;;;;;;;;-1:-1:-1;;;;;;5387:43:187;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5387:43:187;;;5445:20;;5422:7;;5445:20;;;5234:238;:::o;3987:969::-;4082:13;;;4141:5;:15;;;:34;;;;;;;;:::i;:::-;;4137:548;;;4277:12;4311:5;:11;;;-1:-1:-1;;;;;4296:36:187;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4292:42;;:2;:42;:::i;:::-;4277:57;;4403:4;4365:5;:11;;;-1:-1:-1;;;;;4358:29:187;;4388:11;4358:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;4348:59;;4177:241;4137:548;;;4447:16;4428:5;:15;;;:35;;;;;;;;:::i;:::-;;4424:261;;;4497:5;:11;;;-1:-1:-1;;;;;4489:30:187;;4520:11;4489:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:53;;4424:261;;;4572:17;4553:5;:15;;;:36;;;;;;;;:::i;:::-;;4549:136;;;4624:11;;;;4660:13;;;;4615:59;;-1:-1:-1;;;4615:59:187;;-1:-1:-1;;;;;10090:32:635;;;4615:59:187;;;10072:51:635;10139:18;;;10132:34;;;;4615:31:187;;;;;10045:18:635;;4615:59:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4605:69;;4549:136;4717:18;4699:5;:14;;;:36;;;;;;;;:::i;:::-;;4695:255;;;4766:5;:13;;;4755:7;:24;4751:82;;4807:5;:11;;;4799:19;;4751:82;4695:255;;;4871:23;4853:5;:14;;;:41;;;;;;;;:::i;:::-;;4849:101;;;4928:11;;;;4918:21;;:7;:21;:::i;:::-;4910:29;;4849:101;4097:859;3987:969;;;;:::o;897:208:383:-;971:4;987:36;1026:25;:23;:25::i;:::-;1068:13;:20;;;;;;;;;;;-1:-1:-1;;;;;1068:30:383;;;;;;;;;-1:-1:-1;;1068:30:383;;;;;;897:208::o;779:188:187:-;818:18;;565:46;610:1;573:33;565:46;:::i;:::-;554:58;;;;;;1654:25:635;;1642:2;1627:18;;1508:177;554:58:187;;;;-1:-1:-1;;554:58:187;;;;;;;;;544:69;;554:58;544:69;;;;;779:188;-1:-1:-1;;779:188:187:o;5818:123:244:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;5469:109::-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;6109:129::-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;859:187:181:-;898:18;;478:45;522:1;486:32;478:45;:::i;2113:404:244:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:244;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:244;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:244;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:173:635:-;82:20;;-1:-1:-1;;;;;131:31:635;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:150;590:20;;639:1;629:12;;619:40;;655:1;652;645:12;670:833;765:6;818:3;806:9;797:7;793:23;789:33;786:53;;;835:1;832;825:12;786:53;868:2;862:9;910:3;902:6;898:16;980:6;968:10;965:22;-1:-1:-1;;;;;932:10:635;929:34;926:62;923:185;;;1030:10;1025:3;1021:20;1018:1;1011:31;1065:4;1062:1;1055:15;1093:4;1090:1;1083:15;923:185;1124:2;1117:22;1163:29;1182:9;1163:29;:::i;:::-;1155:6;1148:45;1226;1267:2;1256:9;1252:18;1226:45;:::i;:::-;1221:2;1213:6;1209:15;1202:70;1333:2;1322:9;1318:18;1305:32;1300:2;1292:6;1288:15;1281:57;1399:2;1388:9;1384:18;1371:32;1366:2;1358:6;1354:15;1347:57;1466:3;1455:9;1451:19;1438:33;1432:3;1424:6;1420:16;1413:59;1491:6;1481:16;;;670:833;;;;:::o;1690:127::-;1751:10;1746:3;1742:20;1739:1;1732:31;1782:4;1779:1;1772:15;1806:4;1803:1;1796:15;1822:669;1898:12;;1886:25;;1964:4;1953:16;;;1947:23;-1:-1:-1;;;;;1943:49:635;1927:14;;;1920:73;2039:4;2028:16;;2022:23;2081:1;2064:19;;2054:53;;2087:18;;:::i;:::-;2139:12;2132:4;2127:3;2123:14;2116:36;;2201:4;2194:5;2190:16;2184:23;2177:4;2172:3;2168:14;2161:47;2257:4;2250:5;2246:16;2240:23;2233:4;2228:3;2224:14;2217:47;2313:4;2306:5;2302:16;2296:23;2289:4;2284:3;2280:14;2273:47;2368:4;2361:5;2357:16;2351:23;2412:1;2396:14;2393:21;2383:55;;2418:18;;:::i;:::-;2470:14;2463:4;2458:3;2454:14;2447:38;;1822:669;;:::o;2496:714::-;2725:2;2777:21;;;2847:13;;2750:18;;;2869:22;;;2696:4;;2725:2;2948:15;;;;2922:2;2907:18;;;2696:4;2991:193;3005:6;3002:1;2999:13;2991:193;;;3054:48;3098:3;3089:6;3083:13;3054:48;:::i;:::-;3159:15;;;;3131:4;3122:14;;;;;3027:1;3020:9;2991:193;;;-1:-1:-1;3201:3:635;;2496:714;-1:-1:-1;;;;;;2496:714:635:o;3215:770::-;3315:6;3368:3;3356:9;3347:7;3343:23;3339:33;3336:53;;;3385:1;3382;3375:12;3336:53;3418:2;3412:9;3460:3;3452:6;3448:16;3530:6;3518:10;3515:22;-1:-1:-1;;;;;3482:10:635;3479:34;3476:62;3473:185;;;3580:10;3575:3;3571:20;3568:1;3561:31;3615:4;3612:1;3605:15;3643:4;3640:1;3633:15;3473:185;3674:2;3667:22;3713:29;3732:9;3713:29;:::i;:::-;3705:6;3698:45;3776;3817:2;3806:9;3802:18;3776:45;:::i;:::-;3771:2;3763:6;3759:15;3752:70;3883:2;3872:9;3868:18;3855:32;3850:2;3842:6;3838:15;3831:57;3949:2;3938:9;3934:18;3921:32;3916:2;3908:6;3904:15;3897:57;3973:6;3963:16;;;3215:770;;;;:::o;3990:180::-;4049:6;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;-1:-1:-1;4141:23:635;;3990:180;-1:-1:-1;3990:180:635:o;4175:203::-;-1:-1:-1;;;;;4339:32:635;;;;4321:51;;4309:2;4294:18;;4175:203::o;4975:353::-;5177:2;5159:21;;;5216:2;5196:18;;;5189:30;5255:31;5250:2;5235:18;;5228:59;5319:2;5304:18;;4975:353::o;5333:150::-;5414:1;5407:5;5404:12;5394:46;;5420:18;;:::i;:::-;5465:3;5461:15;5449:28;;5333:150::o;5488:149::-;5568:1;5561:5;5558:12;5548:46;;5574:18;;:::i;5642:610::-;5981:2;5952:15;;;-1:-1:-1;;;;;;5948:45:635;5936:58;;6003:47;6046:2;6037:12;;6029:6;6003:47;:::i;:::-;6080:6;6075:2;6070:3;6066:12;6059:28;6117:6;6112:2;6107:3;6103:12;6096:28;6154:6;6149:2;6144:3;6140:12;6133:28;6170:47;6212:3;6207;6203:13;6195:6;6170:47;:::i;:::-;6242:3;6233:13;;5642:610;-1:-1:-1;;;;;;5642:610:635:o;6257:127::-;6318:10;6313:3;6309:20;6306:1;6299:31;6349:4;6346:1;6339:15;6373:4;6370:1;6363:15;6389:127;6450:10;6445:3;6441:20;6438:1;6431:31;6481:4;6478:1;6471:15;6505:4;6502:1;6495:15;6521:128;6561:3;6592:1;6588:6;6585:1;6582:13;6579:39;;;6598:18;;:::i;:::-;-1:-1:-1;6634:9:635;;6521:128::o;6654:543::-;6965:2;6936:15;;;-1:-1:-1;;;;;;6932:45:635;6920:58;;6987:47;7030:2;7021:12;;7013:6;6987:47;:::i;:::-;7064:6;7059:2;7054:3;7050:12;7043:28;7101:6;7096:2;7091:3;7087:12;7080:28;7117:46;7159:2;7154:3;7150:12;7142:6;7117:46;:::i;:::-;7188:2;7179:12;;6654:543;-1:-1:-1;;;;;6654:543:635:o;7202:184::-;7272:6;7325:2;7313:9;7304:7;7300:23;7296:32;7293:52;;;7341:1;7338;7331:12;7293:52;-1:-1:-1;7364:16:635;;7202:184;-1:-1:-1;7202:184:635:o;7391:356::-;7593:2;7575:21;;;7612:18;;;7605:30;7671:34;7666:2;7651:18;;7644:62;7738:2;7723:18;;7391:356::o;7752:258::-;7944:3;7929:19;;7957:47;7933:9;7986:6;7957:47;:::i;8015:273::-;8083:6;8136:2;8124:9;8115:7;8111:23;8107:32;8104:52;;;8152:1;8149;8142:12;8104:52;8184:9;8178:16;8234:4;8227:5;8223:16;8216:5;8213:27;8203:55;;8254:1;8251;8244:12;8293:422;8382:1;8425:5;8382:1;8439:270;8460:7;8450:8;8447:21;8439:270;;;8519:4;8515:1;8511:6;8507:17;8501:4;8498:27;8495:53;;;8528:18;;:::i;:::-;8578:7;8568:8;8564:22;8561:55;;;8598:16;;;;8561:55;8677:22;;;;8637:15;;;;8439:270;;;8443:3;8293:422;;;;;:::o;8720:806::-;8769:5;8799:8;8789:80;;-1:-1:-1;8840:1:635;8854:5;;8789:80;8888:4;8878:76;;-1:-1:-1;8925:1:635;8939:5;;8878:76;8970:4;8988:1;8983:59;;;;9056:1;9051:130;;;;8963:218;;8983:59;9013:1;9004:10;;9027:5;;;9051:130;9088:3;9078:8;9075:17;9072:43;;;9095:18;;:::i;:::-;-1:-1:-1;;9151:1:635;9137:16;;9166:5;;8963:218;;9265:2;9255:8;9252:16;9246:3;9240:4;9237:13;9233:36;9227:2;9217:8;9214:16;9209:2;9203:4;9200:12;9196:35;9193:77;9190:159;;;-1:-1:-1;9302:19:635;;;9334:5;;9190:159;9381:34;9406:8;9400:4;9381:34;:::i;:::-;9451:6;9447:1;9443:6;9439:19;9430:7;9427:32;9424:58;;;9462:18;;:::i;:::-;9500:20;;8720:806;-1:-1:-1;;;8720:806:635:o;9531:140::-;9589:5;9618:47;9659:4;9649:8;9645:19;9639:4;9618:47;:::i;9676:217::-;9716:1;9742;9732:132;;9786:10;9781:3;9777:20;9774:1;9767:31;9821:4;9818:1;9811:15;9849:4;9846:1;9839:15;9732:132;-1:-1:-1;9878:9:635;;9676:217::o;10177:168::-;10217:7;10283:1;10279;10275:6;10271:14;10268:1;10265:21;10260:1;10253:9;10246:17;10242:45;10239:71;;;10290:18;;:::i;:::-;-1:-1:-1;10330:9:635;;10177:168::o;10350:125::-;10390:4;10418:1;10415;10412:8;10409:34;;;10423:18;;:::i;:::-;-1:-1:-1;10460:9:635;;10350:125::o;10480:127::-;10541:10;10536:3;10532:20;10529:1;10522:31;10572:4;10569:1;10562:15;10596:4;10593:1;10586:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createRuleMultiplicative((address,uint8,uint256,uint256))": "1e2e9cb5",
    "createRuleThreshold((address,uint8,uint256,uint256,uint256))": "1022a25e",
    "deleteRule(bytes32)": "9d907761",
    "getAllRules()": "1184aef2",
    "getRulesEngineOverride()": "a7145eb4",
    "getScore(address)": "d47875d0",
    "setRulesEngineOverride(address)": "0eb0adb6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct IRulesEngine.RuleWithId\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"RuleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"name\":\"RuleDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRulesEngine\",\"type\":\"address\"}],\"name\":\"RulesEngineOverriden\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scorePerOwnedToken\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeMultiplicative\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleMultiplicative\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeThreshold\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleThreshold\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ruleId\",\"type\":\"bytes32\"}],\"name\":\"deleteRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRules\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"internalType\":\"struct IRulesEngine.RuleWithId[]\",\"name\":\"rules\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRulesEngineOverride\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rulesEngineAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rulesEngineAddress\",\"type\":\"address\"}],\"name\":\"setRulesEngineOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol\":\"RulesEngineExtension\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff\",\"dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60\",\"dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx\"]},\"contracts/extension/upgradeable/RulesEngine.sol\":{\"keccak256\":\"0xbe43bbec62ca3c78eca78d12cc470747bd6fce947784e36d3b38ac87c298fed4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ce38f54bb02708e833183564865609a5d33bef1d00ba318a9c62dbe6b558eee\",\"dweb:/ipfs/Qmc9eKmooz53UG8hxjfUqT3uExFwejuTWn1QLE6BNt9Gnw\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol\":{\"keccak256\":\"0x76bb3cf946f3a499c554259880879ff9acca3fd61be3e7cb5a843e6ecc086fa9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84218266e5024ffa3acd1eb095bc115fcb630bdb684cbb35300bbcaf1bd6f4c1\",\"dweb:/ipfs/QmNyUMK4j1Jvbukrntx3UozjbNKuhkEhEcA3tcLJSoKk2E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRulesEngine.RuleWithId",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RuleCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RuleDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRulesEngine",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RulesEngineOverriden",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scorePerOwnedToken",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleMultiplicative",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeThreshold",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleThreshold",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_ruleId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteRule"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllRules",
          "outputs": [
            {
              "internalType": "struct IRulesEngine.RuleWithId[]",
              "name": "rules",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRulesEngineOverride",
          "outputs": [
            {
              "internalType": "address",
              "name": "rulesEngineAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getScore",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rulesEngineAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRulesEngineOverride"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol": "RulesEngineExtension"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d",
        "urls": [
          "bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff",
          "dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6",
        "urls": [
          "bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60",
          "dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/RulesEngine.sol": {
        "keccak256": "0xbe43bbec62ca3c78eca78d12cc470747bd6fce947784e36d3b38ac87c298fed4",
        "urls": [
          "bzz-raw://5ce38f54bb02708e833183564865609a5d33bef1d00ba318a9c62dbe6b558eee",
          "dweb:/ipfs/Qmc9eKmooz53UG8hxjfUqT3uExFwejuTWn1QLE6BNt9Gnw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol": {
        "keccak256": "0x76bb3cf946f3a499c554259880879ff9acca3fd61be3e7cb5a843e6ecc086fa9",
        "urls": [
          "bzz-raw://84218266e5024ffa3acd1eb095bc115fcb630bdb684cbb35300bbcaf1bd6f4c1",
          "dweb:/ipfs/QmNyUMK4j1Jvbukrntx3UozjbNKuhkEhEcA3tcLJSoKk2E"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol",
    "id": 100552,
    "exportedSymbols": {
      "PermissionsStorage": [
        41582
      ],
      "RulesEngine": [
        43520
      ],
      "RulesEngineExtension": [
        100551
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1069:383",
    "nodes": [
      {
        "id": 100487,
        "nodeType": "PragmaDirective",
        "src": "39:24:383",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 100489,
        "nodeType": "ImportDirective",
        "src": "87:87:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100552,
        "sourceUnit": 41969,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100488,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41582,
              "src": "96:18:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41582_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100491,
        "nodeType": "ImportDirective",
        "src": "175:80:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/RulesEngine.sol",
        "file": "../../../../extension/upgradeable/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100552,
        "sourceUnit": 43521,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100490,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43520,
              "src": "184:11:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43520_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100551,
        "nodeType": "ContractDefinition",
        "src": "257:850:383",
        "nodes": [
          {
            "id": 100509,
            "nodeType": "FunctionDefinition",
            "src": "406:140:383",
            "nodes": [],
            "body": {
              "id": 100508,
              "nodeType": "Block",
              "src": "476:70:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 100502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "512:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 100501,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "502:9:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 100503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "502:24:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 100504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "528:3:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 100505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "528:10:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100500,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100550,
                      "src": "493:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:46:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100499,
                  "id": 100507,
                  "nodeType": "Return",
                  "src": "486:53:383"
                }
              ]
            },
            "baseFunctions": [
              43514
            ],
            "documentation": {
              "id": 100494,
              "nodeType": "StructuredDocumentation",
              "src": "308:93:383",
              "text": "@dev Returns whether the rules of the contract can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRules",
            "nameLocation": "415:12:383",
            "overrides": {
              "id": 100496,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "452:8:383"
            },
            "parameters": {
              "id": 100495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:383"
            },
            "returnParameters": {
              "id": 100499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100509,
                  "src": "470:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:6:383"
            },
            "scope": 100551,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100523,
            "nodeType": "FunctionDefinition",
            "src": "668:161:383",
            "nodes": [],
            "body": {
              "id": 100522,
              "nodeType": "Block",
              "src": "749:80:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30783030",
                        "id": 100517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x00"
                      },
                      {
                        "expression": {
                          "id": 100518,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "811:3:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 100519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "811:10:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100516,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100550,
                      "src": "796:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:26:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100515,
                  "id": 100521,
                  "nodeType": "Return",
                  "src": "789:33:383"
                }
              ]
            },
            "baseFunctions": [
              43519
            ],
            "documentation": {
              "id": 100510,
              "nodeType": "StructuredDocumentation",
              "src": "552:111:383",
              "text": "@dev Returns whether the rules engine used by the contract can be overriden in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canOverrideRulesEngine",
            "nameLocation": "677:23:383",
            "overrides": {
              "id": 100512,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "725:8:383"
            },
            "parameters": {
              "id": 100511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:2:383"
            },
            "returnParameters": {
              "id": 100515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100523,
                  "src": "743:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "742:6:383"
            },
            "scope": 100551,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100550,
            "nodeType": "FunctionDefinition",
            "src": "897:208:383",
            "nodes": [],
            "body": {
              "id": 100549,
              "nodeType": "Block",
              "src": "977:128:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100537,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1019:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100549,
                      "src": "987:36:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 100536,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100535,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41569,
                          "src": "987:23:383"
                        },
                        "referencedDeclaration": 41569,
                        "src": "987:23:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100541,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100538,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41582,
                        "src": "1026:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41582_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 100539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41581,
                      "src": "1026:23:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$41569_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 100540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:25:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "987:64:383"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 100542,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100537,
                          "src": "1068:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 100543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41563,
                        "src": "1068:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 100545,
                      "indexExpression": {
                        "id": 100544,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100526,
                        "src": "1082:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1068:20:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 100547,
                    "indexExpression": {
                      "id": 100546,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100528,
                      "src": "1089:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1068:30:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100532,
                  "id": 100548,
                  "nodeType": "Return",
                  "src": "1061:37:383"
                }
              ]
            },
            "documentation": {
              "id": 100524,
              "nodeType": "StructuredDocumentation",
              "src": "835:57:383",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "906:8:383",
            "parameters": {
              "id": 100529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100526,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "923:5:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100550,
                  "src": "915:13:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 100525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100528,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "938:8:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100550,
                  "src": "930:16:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "914:33:383"
            },
            "returnParameters": {
              "id": 100532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100550,
                  "src": "971:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:6:383"
            },
            "scope": 100551,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100492,
              "name": "RulesEngine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43520,
              "src": "290:11:383"
            },
            "id": 100493,
            "nodeType": "InheritanceSpecifier",
            "src": "290:11:383"
          }
        ],
        "canonicalName": "RulesEngineExtension",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100551,
          43520,
          34365
        ],
        "name": "RulesEngineExtension",
        "nameLocation": "266:20:383",
        "scope": 100552,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 383
}