{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropSinglePhase1155.AllowlistProof",
          "name": "allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "phase",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "57bc3d78",
    "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": "8affb89f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropSinglePhase1155.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"phase\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of the NFT to claim.\",\"receiver\":\"The receiver of the NFT to claim.\",\"tokenId\":\"The tokenId of the NFT to claim.\"}},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"params\":{\"phase\":\"Claim condition to set.\",\"resetClaimEligibility\":\"Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set.\",\"tokenId\":\"The tokenId for which to set the relevant claim condition.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionUpdated(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"notice\":\"The interface `IDropSinglePhase1155` is written for thirdweb's 'DropSinglePhase' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a claim condition for the distribution of the contract's tokens.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IDropSinglePhase1155.sol\":\"IDropSinglePhase1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IDropSinglePhase1155.sol\":{\"keccak256\":\"0xd8c9133efa89d8d8814d4dc17d1d9b5337c44bcd872c57433916b579d42d65d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0f43e78cb7029bf068251970a84d4c8a9f9c0edd768f198ff28471b84bd24dfa\",\"dweb:/ipfs/QmVhTgbFYV8Bzqav8Hzc8w1etunFe3Xo5Qiv23rthUKohF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase1155.AllowlistProof",
              "name": "allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "phase",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "params": {
              "allowlistProof": "The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.",
              "currency": "The currency in which to pay for the claim.",
              "data": "Arbitrary bytes data that can be leveraged in the implementation of this interface.",
              "pricePerToken": "The price per token to pay for the claim.",
              "quantity": "The quantity of the NFT to claim.",
              "receiver": "The receiver of the NFT to claim.",
              "tokenId": "The tokenId of the NFT to claim."
            }
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": {
            "params": {
              "phase": "Claim condition to set.",
              "resetClaimEligibility": "Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set.",
              "tokenId": "The tokenId for which to set the relevant claim condition."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "notice": "Lets an account claim a given quantity of NFTs."
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": {
            "notice": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/interface/IDropSinglePhase1155.sol": "IDropSinglePhase1155"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDropSinglePhase1155.sol": {
        "keccak256": "0xd8c9133efa89d8d8814d4dc17d1d9b5337c44bcd872c57433916b579d42d65d8",
        "urls": [
          "bzz-raw://0f43e78cb7029bf068251970a84d4c8a9f9c0edd768f198ff28471b84bd24dfa",
          "dweb:/ipfs/QmVhTgbFYV8Bzqav8Hzc8w1etunFe3Xo5Qiv23rthUKohF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/interface/IDropSinglePhase1155.sol",
    "id": 33555,
    "exportedSymbols": {
      "IClaimCondition": [
        33064
      ],
      "IDropSinglePhase1155": [
        33554
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3329:115",
    "nodes": [
      {
        "id": 33488,
        "nodeType": "PragmaDirective",
        "src": "39:23:115",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 33489,
        "nodeType": "ImportDirective",
        "src": "86:31:115",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IClaimCondition.sol",
        "file": "./IClaimCondition.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33555,
        "sourceUnit": 33065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33554,
        "nodeType": "ContractDefinition",
        "src": "580:2787:115",
        "nodes": [
          {
            "id": 33502,
            "nodeType": "StructDefinition",
            "src": "1057:151:115",
            "nodes": [],
            "canonicalName": "IDropSinglePhase1155.AllowlistProof",
            "members": [
              {
                "constant": false,
                "id": 33495,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "1099:5:115",
                "nodeType": "VariableDeclaration",
                "scope": 33502,
                "src": "1089:15:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 33493,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33494,
                  "nodeType": "ArrayTypeName",
                  "src": "1089:9:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33497,
                "mutability": "mutable",
                "name": "quantityLimitPerWallet",
                "nameLocation": "1122:22:115",
                "nodeType": "VariableDeclaration",
                "scope": 33502,
                "src": "1114:30:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33496,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1114:7:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33499,
                "mutability": "mutable",
                "name": "pricePerToken",
                "nameLocation": "1162:13:115",
                "nodeType": "VariableDeclaration",
                "scope": 33502,
                "src": "1154:21:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33498,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1154:7:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33501,
                "mutability": "mutable",
                "name": "currency",
                "nameLocation": "1193:8:115",
                "nodeType": "VariableDeclaration",
                "scope": 33502,
                "src": "1185:16:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33500,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1185:7:115",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllowlistProof",
            "nameLocation": "1064:14:115",
            "scope": 33554,
            "visibility": "public"
          },
          {
            "id": 33513,
            "nodeType": "EventDefinition",
            "src": "1275:159:115",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33503,
              "nodeType": "StructuredDocumentation",
              "src": "1214:56:115",
              "text": "@notice Emitted when tokens are claimed via `claim`."
            },
            "name": "TokensClaimed",
            "nameLocation": "1281:13:115",
            "parameters": {
              "id": 33512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33505,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1320:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33513,
                  "src": "1304:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33507,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1353:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33513,
                  "src": "1337:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33509,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1387:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33513,
                  "src": "1371:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33511,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantityClaimed",
                  "nameLocation": "1412:15:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33513,
                  "src": "1404:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1294:139:115"
            }
          },
          {
            "id": 33523,
            "nodeType": "EventDefinition",
            "src": "1514:102:115",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33514,
              "nodeType": "StructuredDocumentation",
              "src": "1440:69:115",
              "text": "@notice Emitted when the contract's claim conditions are updated."
            },
            "name": "ClaimConditionUpdated",
            "nameLocation": "1520:21:115",
            "parameters": {
              "id": 33522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33516,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1558:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33523,
                  "src": "1542:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33519,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "condition",
                  "nameLocation": "1582:9:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33523,
                  "src": "1567:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimCondition_$33063_memory_ptr",
                    "typeString": "struct IClaimCondition.ClaimCondition"
                  },
                  "typeName": {
                    "id": 33518,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33517,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33063,
                      "src": "1567:14:115"
                    },
                    "referencedDeclaration": 33063,
                    "src": "1567:14:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$33063_storage_ptr",
                      "typeString": "struct IClaimCondition.ClaimCondition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "resetEligibility",
                  "nameLocation": "1598:16:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33523,
                  "src": "1593:21:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33520,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1541:74:115"
            }
          },
          {
            "id": 33542,
            "nodeType": "FunctionDefinition",
            "src": "2450:247:115",
            "nodes": [],
            "documentation": {
              "id": 33524,
              "nodeType": "StructuredDocumentation",
              "src": "1622:823:115",
              "text": "  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFT to claim.\n  @param tokenId                        The tokenId of the NFT to claim.\n  @param quantity                       The quantity of the NFT to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."
            },
            "functionSelector": "57bc3d78",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "2459:5:115",
            "parameters": {
              "id": 33540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33526,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2482:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2474:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33528,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2508:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2500:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33530,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "2533:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2525:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33532,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "2559:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2551:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33534,
                  "mutability": "mutable",
                  "name": "pricePerToken",
                  "nameLocation": "2585:13:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2577:21:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33537,
                  "mutability": "mutable",
                  "name": "allowlistProof",
                  "nameLocation": "2632:14:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2608:38:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33502_calldata_ptr",
                    "typeString": "struct IDropSinglePhase1155.AllowlistProof"
                  },
                  "typeName": {
                    "id": 33536,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33535,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33502,
                      "src": "2608:14:115"
                    },
                    "referencedDeclaration": 33502,
                    "src": "2608:14:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33502_storage_ptr",
                      "typeString": "struct IDropSinglePhase1155.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33539,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2669:4:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33542,
                  "src": "2656:17:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33538,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2464:215:115"
            },
            "returnParameters": {
              "id": 33541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2696:0:115"
            },
            "scope": 33554,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33553,
            "nodeType": "FunctionDefinition",
            "src": "3222:143:115",
            "nodes": [],
            "documentation": {
              "id": 33543,
              "nodeType": "StructuredDocumentation",
              "src": "2703:514:115",
              "text": "  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phase                    Claim condition to set.\n  @param resetClaimEligibility    Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,\n                                  in the new claim conditions being set.\n  @param tokenId                  The tokenId for which to set the relevant claim condition."
            },
            "functionSelector": "8affb89f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setClaimConditions",
            "nameLocation": "3231:18:115",
            "parameters": {
              "id": 33551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33545,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3267:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33553,
                  "src": "3259:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33548,
                  "mutability": "mutable",
                  "name": "phase",
                  "nameLocation": "3308:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33553,
                  "src": "3284:29:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimCondition_$33063_calldata_ptr",
                    "typeString": "struct IClaimCondition.ClaimCondition"
                  },
                  "typeName": {
                    "id": 33547,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33546,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33063,
                      "src": "3284:14:115"
                    },
                    "referencedDeclaration": 33063,
                    "src": "3284:14:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$33063_storage_ptr",
                      "typeString": "struct IClaimCondition.ClaimCondition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33550,
                  "mutability": "mutable",
                  "name": "resetClaimEligibility",
                  "nameLocation": "3328:21:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 33553,
                  "src": "3323:26:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33549,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3323:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3249:106:115"
            },
            "returnParameters": {
              "id": 33552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:115"
            },
            "scope": 33554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33491,
              "name": "IClaimCondition",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33064,
              "src": "614:15:115"
            },
            "id": 33492,
            "nodeType": "InheritanceSpecifier",
            "src": "614:15:115"
          }
        ],
        "canonicalName": "IDropSinglePhase1155",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 33490,
          "nodeType": "StructuredDocumentation",
          "src": "119:459:115",
          "text": "  The interface `IDropSinglePhase1155` is written for thirdweb's 'DropSinglePhase' contracts, which are distribution mechanisms for tokens.\n  An authorized wallet can set a claim condition for the distribution of the contract's tokens.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          33554,
          33064
        ],
        "name": "IDropSinglePhase1155",
        "nameLocation": "590:20:115",
        "scope": 33555,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 115
}