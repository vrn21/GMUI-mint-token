{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "FactoryAddress",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initCode",
          "type": "bytes"
        }
      ],
      "name": "createSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610233806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e36600461011d565b610059565b604051610050919061018f565b60405180910390f35b60008061006960148285876101a3565b610072916101cd565b60601c90507f69164a0df9992ad714a1743f4bb075b0dcea5cd42298cf7d5abfc8e17799cf1a816040516100a6919061018f565b60405180910390a160006100bd84601481886101a3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af1905060005193508061011457600093505b50505092915050565b6000806020838503121561013057600080fd5b823567ffffffffffffffff8082111561014857600080fd5b818501915085601f83011261015c57600080fd5b81358181111561016b57600080fd5b86602082850101111561017d57600080fd5b60209290920196919550909350505050565b6001600160a01b0391909116815260200190565b600080858511156101b357600080fd5b838611156101c057600080fd5b5050820193919092039150565b6001600160601b031981358181169160148510156101f55780818660140360031b1b83161692505b50509291505056fea26469706673582212203b741102fe912f388a3df92643cf915e1d157676eeaa7ee75a0d545eadd9a96e64736f6c634300080c0033",
    "sourceMap": "205:920:319:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e36600461011d565b610059565b604051610050919061018f565b60405180910390f35b60008061006960148285876101a3565b610072916101cd565b60601c90507f69164a0df9992ad714a1743f4bb075b0dcea5cd42298cf7d5abfc8e17799cf1a816040516100a6919061018f565b60405180910390a160006100bd84601481886101a3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af1905060005193508061011457600093505b50505092915050565b6000806020838503121561013057600080fd5b823567ffffffffffffffff8082111561014857600080fd5b818501915085601f83011261015c57600080fd5b81358181111561016b57600080fd5b86602082850101111561017d57600080fd5b60209290920196919550909350505050565b6001600160a01b0391909116815260200190565b600080858511156101b357600080fd5b838611156101c057600080fd5b5050820193919092039150565b6001600160601b031981358181169160148510156101f55780818660140360031b1b83161692505b50509291505056fea26469706673582212203b741102fe912f388a3df92643cf915e1d157676eeaa7ee75a0d545eadd9a96e64736f6c634300080c0033",
    "sourceMap": "205:920:319:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:535;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;653:14;;713;724:2;653:14;713:8;;:14;:::i;:::-;705:23;;;:::i;:::-;697:32;;679:50;;744:23;759:7;744:23;;;;;;:::i;:::-;;;;;;;;777:25;805:13;:8;814:2;805:8;;:13;:::i;:::-;777:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;982:19:319;;777:41;;-1:-1:-1;777:41:319;1006:2;;-1:-1:-1;777:41:319;;-1:-1:-1;982:19:319;-1:-1:-1;957:23:319;;;777:41;945:7;938:5;933:76;922:87;;1038:1;1032:8;1022:18;;1064:7;1059:58;;1104:1;1087:19;;1059:58;669:454;;;588:535;;;;:::o;14:591:635:-;84:6;92;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;201:9;188:23;230:18;271:2;263:6;260:14;257:34;;;287:1;284;277:12;257:34;325:6;314:9;310:22;300:32;;370:7;363:4;359:2;355:13;351:27;341:55;;392:1;389;382:12;341:55;432:2;419:16;458:2;450:6;447:14;444:34;;;474:1;471;464:12;444:34;519:7;514:2;505:6;501:2;497:15;493:24;490:37;487:57;;;540:1;537;530:12;487:57;571:2;563:11;;;;;593:6;;-1:-1:-1;14:591:635;;-1:-1:-1;;;;14:591:635:o;610:203::-;-1:-1:-1;;;;;774:32:635;;;;756:51;;744:2;729:18;;610:203::o;818:331::-;923:9;934;976:8;964:10;961:24;958:44;;;998:1;995;988:12;958:44;1027:6;1017:8;1014:20;1011:40;;;1047:1;1044;1037:12;1011:40;-1:-1:-1;;1073:23:635;;;1118:25;;;;;-1:-1:-1;818:331:635:o;1154:329::-;-1:-1:-1;;;;;;1275:19:635;;1354:11;;;;1385:2;1377:11;;1374:103;;;1464:2;1458;1451:3;1447:2;1443:12;1440:1;1436:20;1432:29;1428:2;1424:38;1420:47;1411:56;;1374:103;;;1154:329;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createSender(bytes)": "570e1a36"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactoryAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"params\":{\"initCode\":\"the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\"},\"returns\":{\"sender\":\"the returned address of the created account, or zero address on failure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSender(bytes)\":{\"notice\":\"call the \\\"initCode\\\" factory to create and return the sender account address\"}},\"notice\":\"helper contract for EntryPoint, to call userOp.initCode from a \\\"neutral\\\" address, which is explicitly not the entryPoint itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/account/utils/SenderCreator.sol\":\"SenderCreator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/prebuilts/account/utils/SenderCreator.sol\":{\"keccak256\":\"0xd5db2a03ce89c3ac228911df32ff2d31aa2aa4d438c7f037b6553cb83c0a8776\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d55a923b71c2ffbd406b2e1dafc1ca3514f259b48d89309bbd6772501ff0aa15\",\"dweb:/ipfs/QmQiPjBQxzr96TAPh2ereCsGt4Byii43Tu9gxuZeQP8eVA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FactoryAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createSender(bytes)": {
            "params": {
              "initCode": "the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata"
            },
            "returns": {
              "sender": "the returned address of the created account, or zero address on failure."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createSender(bytes)": {
            "notice": "call the \"initCode\" factory to create and return the sender account address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/account/utils/SenderCreator.sol": "SenderCreator"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/prebuilts/account/utils/SenderCreator.sol": {
        "keccak256": "0xd5db2a03ce89c3ac228911df32ff2d31aa2aa4d438c7f037b6553cb83c0a8776",
        "urls": [
          "bzz-raw://d55a923b71c2ffbd406b2e1dafc1ca3514f259b48d89309bbd6772501ff0aa15",
          "dweb:/ipfs/QmQiPjBQxzr96TAPh2ereCsGt4Byii43Tu9gxuZeQP8eVA"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/account/utils/SenderCreator.sol",
    "id": 70989,
    "exportedSymbols": {
      "SenderCreator": [
        70988
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1090:319",
    "nodes": [
      {
        "id": 70935,
        "nodeType": "PragmaDirective",
        "src": "36:24:319",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 70988,
        "nodeType": "ContractDefinition",
        "src": "205:920:319",
        "nodes": [
          {
            "id": 70940,
            "nodeType": "EventDefinition",
            "src": "234:38:319",
            "nodes": [],
            "anonymous": false,
            "name": "FactoryAddress",
            "nameLocation": "240:14:319",
            "parameters": {
              "id": 70939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70938,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "263:7:319",
                  "nodeType": "VariableDeclaration",
                  "scope": 70940,
                  "src": "255:15:319",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:319",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "254:17:319"
            }
          },
          {
            "id": 70987,
            "nodeType": "FunctionDefinition",
            "src": "588:535:319",
            "nodes": [],
            "body": {
              "id": 70986,
              "nodeType": "Block",
              "src": "669:454:319",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70949,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "687:7:319",
                      "nodeType": "VariableDeclaration",
                      "scope": 70986,
                      "src": "679:15:319",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70948,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "679:7:319",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70960,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 70954,
                              "name": "initCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70943,
                              "src": "713:8:319",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "3230",
                              "id": 70956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:2:319",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "id": 70957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "713:14:319",
                            "startExpression": {
                              "hexValue": "30",
                              "id": 70955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "722:1:319",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 70953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "705:7:319",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 70952,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "705:7:319",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "705:23:319",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 70951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "697:7:319",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 70950,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "697:7:319",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 70959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:32:319",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "679:50:319"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 70962,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70949,
                        "src": "759:7:319",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 70961,
                      "name": "FactoryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70940,
                      "src": "744:14:319",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 70963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:23:319",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70964,
                  "nodeType": "EmitStatement",
                  "src": "739:28:319"
                },
                {
                  "assignments": [
                    70966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70966,
                      "mutability": "mutable",
                      "name": "initCallData",
                      "nameLocation": "790:12:319",
                      "nodeType": "VariableDeclaration",
                      "scope": 70986,
                      "src": "777:25:319",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 70965,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "777:5:319",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70970,
                  "initialValue": {
                    "baseExpression": {
                      "id": 70967,
                      "name": "initCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70943,
                      "src": "805:8:319",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "id": 70969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexRangeAccess",
                    "src": "805:13:319",
                    "startExpression": {
                      "hexValue": "3230",
                      "id": 70968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "814:2:319",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr_slice",
                      "typeString": "bytes calldata slice"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "777:41:319"
                },
                {
                  "assignments": [
                    70972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70972,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "833:7:319",
                      "nodeType": "VariableDeclaration",
                      "scope": 70986,
                      "src": "828:12:319",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 70971,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "828:4:319",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70973,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:12:319"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "908:142:319",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "922:87:319",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "938:3:319"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "938:5:319"
                            },
                            {
                              "name": "factory",
                              "nodeType": "YulIdentifier",
                              "src": "945:7:319"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "954:1:319",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "initCallData",
                                  "nodeType": "YulIdentifier",
                                  "src": "961:12:319"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "975:4:319",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "957:3:319"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "957:23:319"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "initCallData",
                                  "nodeType": "YulIdentifier",
                                  "src": "988:12:319"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "982:5:319"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "982:19:319"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1003:1:319",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1006:2:319",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "call",
                            "nodeType": "YulIdentifier",
                            "src": "933:4:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "933:76:319"
                        },
                        "variableNames": [
                          {
                            "name": "success",
                            "nodeType": "YulIdentifier",
                            "src": "922:7:319"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1022:18:319",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1038:1:319",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1032:5:319"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1032:8:319"
                        },
                        "variableNames": [
                          {
                            "name": "sender",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:319"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 70949,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "945:7:319",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70966,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "961:12:319",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70966,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "988:12:319",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70946,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1022:6:319",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70972,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "922:7:319",
                      "valueSize": 1
                    }
                  ],
                  "id": 70974,
                  "nodeType": "InlineAssembly",
                  "src": "899:151:319"
                },
                {
                  "condition": {
                    "id": 70976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1063:8:319",
                    "subExpression": {
                      "id": 70975,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70972,
                      "src": "1064:7:319",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70985,
                  "nodeType": "IfStatement",
                  "src": "1059:58:319",
                  "trueBody": {
                    "id": 70984,
                    "nodeType": "Block",
                    "src": "1073:44:319",
                    "statements": [
                      {
                        "expression": {
                          "id": 70982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70977,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70946,
                            "src": "1087:6:319",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 70980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1104:1:319",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 70979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1096:7:319",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 70978,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1096:7:319",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 70981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1096:10:319",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1087:19:319",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 70983,
                        "nodeType": "ExpressionStatement",
                        "src": "1087:19:319"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 70941,
              "nodeType": "StructuredDocumentation",
              "src": "278:305:319",
              "text": " call the \"initCode\" factory to create and return the sender account address\n @param initCode the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\n @return sender the returned address of the created account, or zero address on failure."
            },
            "functionSelector": "570e1a36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSender",
            "nameLocation": "597:12:319",
            "parameters": {
              "id": 70944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70943,
                  "mutability": "mutable",
                  "name": "initCode",
                  "nameLocation": "625:8:319",
                  "nodeType": "VariableDeclaration",
                  "scope": 70987,
                  "src": "610:23:319",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 70942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:5:319",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:25:319"
            },
            "returnParameters": {
              "id": 70947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70946,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "661:6:319",
                  "nodeType": "VariableDeclaration",
                  "scope": 70987,
                  "src": "653:14:319",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:319",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:16:319"
            },
            "scope": 70988,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SenderCreator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 70936,
          "nodeType": "StructuredDocumentation",
          "src": "62:142:319",
          "text": " helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n which is explicitly not the entryPoint itself."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70988
        ],
        "name": "SenderCreator",
        "nameLocation": "214:13:319",
        "scope": 70989,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 319
}