{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getRoyalty",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyView",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getRoyalty(address,uint256,uint256)": "f533b802",
    "getRoyaltyView(address,uint256,uint256)": "3e104014",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getRoyalty\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyView\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Lookup engine interface\",\"kind\":\"dev\",\"methods\":{\"getRoyalty(address,uint256,uint256)\":{\"params\":{\"tokenAddress\":\"- The address of the token\",\"tokenId\":\"- The id of the token\",\"value\":\"- The value you wish to get the royalty of returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get\"}},\"getRoyaltyView(address,uint256,uint256)\":{\"params\":{\"tokenAddress\":\"- The address of the token\",\"tokenId\":\"- The id of the token\",\"value\":\"- The value you wish to get the royalty of returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoyalty(address,uint256,uint256)\":{\"notice\":\"Get the royalty for a given token (address, id) and value amount.  Does not cache the bps/amounts.  Caches the spec for a given token address\"},\"getRoyaltyView(address,uint256,uint256)\":{\"notice\":\"View only version of getRoyalty\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IRoyaltyEngineV1.sol\":\"IRoyaltyEngineV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0xd234744fda99e69a40bcd0771a236d001a178b69c0db8ec7e9ddcf4610304568\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ab39c118f97caccab6bc70f36a4e85d636dc7b74cf5e57515e73eab52e453b4\",\"dweb:/ipfs/QmQvkmJvnBiUCvPW3fPKnmWwHxLv3YSGKXB6gdtRewN1XN\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getRoyalty",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyView",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoyalty(address,uint256,uint256)": {
            "params": {
              "tokenAddress": "- The address of the token",
              "tokenId": "- The id of the token",
              "value": "- The value you wish to get the royalty of returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get"
            }
          },
          "getRoyaltyView(address,uint256,uint256)": {
            "params": {
              "tokenAddress": "- The address of the token",
              "tokenId": "- The id of the token",
              "value": "- The value you wish to get the royalty of returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getRoyalty(address,uint256,uint256)": {
            "notice": "Get the royalty for a given token (address, id) and value amount.  Does not cache the bps/amounts.  Caches the spec for a given token address"
          },
          "getRoyaltyView(address,uint256,uint256)": {
            "notice": "View only version of getRoyalty"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/interface/IRoyaltyEngineV1.sol": "IRoyaltyEngineV1"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IRoyaltyEngineV1.sol": {
        "keccak256": "0xd234744fda99e69a40bcd0771a236d001a178b69c0db8ec7e9ddcf4610304568",
        "urls": [
          "bzz-raw://7ab39c118f97caccab6bc70f36a4e85d636dc7b74cf5e57515e73eab52e453b4",
          "dweb:/ipfs/QmQvkmJvnBiUCvPW3fPKnmWwHxLv3YSGKXB6gdtRewN1XN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/interface/IRoyaltyEngineV1.sol",
    "id": 34221,
    "exportedSymbols": {
      "IERC165": [
        167637
      ],
      "IRoyaltyEngineV1": [
        34220
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1419:132",
    "nodes": [
      {
        "id": 34183,
        "nodeType": "PragmaDirective",
        "src": "33:23:132",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 34184,
        "nodeType": "ImportDirective",
        "src": "85:65:132",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34221,
        "sourceUnit": 167638,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34220,
        "nodeType": "ContractDefinition",
        "src": "192:1259:132",
        "nodes": [
          {
            "id": 34203,
            "nodeType": "FunctionDefinition",
            "src": "705:185:132",
            "nodes": [],
            "documentation": {
              "id": 34188,
              "nodeType": "StructuredDocumentation",
              "src": "236:464:132",
              "text": " Get the royalty for a given token (address, id) and value amount.  Does not cache the bps/amounts.  Caches the spec for a given token address\n @param tokenAddress - The address of the token\n @param tokenId      - The id of the token\n @param value        - The value you wish to get the royalty of\n returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get"
            },
            "functionSelector": "f533b802",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoyalty",
            "nameLocation": "714:10:132",
            "parameters": {
              "id": 34195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34190,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "742:12:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34203,
                  "src": "734:20:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34192,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "772:7:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34203,
                  "src": "764:15:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34194,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "797:5:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34203,
                  "src": "789:13:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:84:132"
            },
            "returnParameters": {
              "id": 34202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34198,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "852:10:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34203,
                  "src": "827:35:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34196,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "827:15:132",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 34197,
                    "nodeType": "ArrayTypeName",
                    "src": "827:17:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34201,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "881:7:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34203,
                  "src": "864:24:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34199,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:7:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34200,
                    "nodeType": "ArrayTypeName",
                    "src": "864:9:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "826:63:132"
            },
            "scope": 34220,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34219,
            "nodeType": "FunctionDefinition",
            "src": "1255:194:132",
            "nodes": [],
            "documentation": {
              "id": 34204,
              "nodeType": "StructuredDocumentation",
              "src": "896:354:132",
              "text": " View only version of getRoyalty\n @param tokenAddress - The address of the token\n @param tokenId      - The id of the token\n @param value        - The value you wish to get the royalty of\n returns Two arrays of equal length, royalty recipients and the corresponding amount each recipient should get"
            },
            "functionSelector": "3e104014",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoyaltyView",
            "nameLocation": "1264:14:132",
            "parameters": {
              "id": 34211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34206,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1296:12:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34219,
                  "src": "1288:20:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34208,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1326:7:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34219,
                  "src": "1318:15:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34210,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1351:5:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34219,
                  "src": "1343:13:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:84:132"
            },
            "returnParameters": {
              "id": 34218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34214,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "1411:10:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34219,
                  "src": "1386:35:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34212,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1386:15:132",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 34213,
                    "nodeType": "ArrayTypeName",
                    "src": "1386:17:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34217,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1440:7:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 34219,
                  "src": "1423:24:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34215,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1423:7:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34216,
                    "nodeType": "ArrayTypeName",
                    "src": "1423:9:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:63:132"
            },
            "scope": 34220,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34186,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 167637,
              "src": "222:7:132"
            },
            "id": 34187,
            "nodeType": "InheritanceSpecifier",
            "src": "222:7:132"
          }
        ],
        "canonicalName": "IRoyaltyEngineV1",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 34185,
          "nodeType": "StructuredDocumentation",
          "src": "152:39:132",
          "text": " @dev Lookup engine interface"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          34220,
          167637
        ],
        "name": "IRoyaltyEngineV1",
        "nameLocation": "202:16:132",
        "scope": 34221,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 132
}