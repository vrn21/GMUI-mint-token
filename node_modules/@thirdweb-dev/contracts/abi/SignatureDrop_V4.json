{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantityInAllowlist",
              "type": "uint256"
            }
          ],
          "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxClaimableSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantityLimitPerTransaction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "waitTimeInSecondsBetweenClaims",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getClaimTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastClaimedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextValidClaimTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "_condition",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verifyMaxQuantityPerTransaction",
          "type": "bool"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantityInAllowlist",
              "type": "uint256"
            }
          ],
          "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaimMerkleProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validMerkleProof",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "merkleProofIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50615e2d80620000216000396000f3fe6080604052600436106102e35760003560e01c806391d148541161018257806391d148541461073d578063938e3d7b1461075d57806395d89b411461077d5780639bcf7a15146107925780639fc4d68f146107b2578063a05112fc146107d2578063a0a8e460146107f2578063a217fddf1461080e578063a22cb46514610823578063a2309ff814610843578063a32fa5b314610859578063a72e157d14610879578063ac9650d814610899578063b24f2d39146108c6578063b67875ce146108f1578063b6f10c7914610926578063b88d4fde14610946578063c87b56dd14610966578063ca15c87314610986578063cb2ef6f7146109a6578063ce805642146109c9578063d37c353b146109e9578063d45573f614610a09578063d547741f14610a1e578063d637ed5914610a3e578063e159163414610abe578063e57553da14610ade578063e715032214610b02578063e8a3d48514610b22578063e985e9c514610b37578063f28083c314610b81578063ffbb7a1314610ba857600080fd5b806301ffc9a7146102e857806306fdde031461031d578063079fe40e1461033f578063081812fc1461036c578063095ea7b31461038c57806313af4035146103ae57806318160ddd146103ce5780631e7ac488146103f357806323b872dd146104135780632419f51b14610433578063248a9ca314610453578063252e82e8146104805780632a55205a146104bf5780632f2ff15d146104ed57806336568abe1461050d5780633b1475a71461052d57806342842e0e1461054257806342966c6814610562578063439c7be514610582578063492e224b146105955780634cc157df146105b5578063572b6c05146105f75780635ab31c1a14610617578063600dd5ea1461062a5780636352211e1461064a57806363b45e2d1461066a5780636f4f28371461067f57806370a082311461069f57806377312a9e146106bf5780637e54523c146106df5780638da5cb5b146106ff5780639010d07c1461071d575b600080fd5b3480156102f457600080fd5b50610308610303366004614c9f565b610bdf565b60405190151581526020015b60405180910390f35b34801561032957600080fd5b50610332610c0b565b6040516103149190614d14565b34801561034b57600080fd5b50610354610c9e565b6040516001600160a01b039091168152602001610314565b34801561037857600080fd5b50610354610387366004614d34565b610cad565b34801561039857600080fd5b506103ac6103a7366004614d69565b610cf2565b005b3480156103ba57600080fd5b506103ac6103c9366004614d93565b610d8b565b3480156103da57600080fd5b506101185461011754035b604051908152602001610314565b3480156103ff57600080fd5b506103ac61040e366004614d69565b610dc4565b34801561041f57600080fd5b506103ac61042e366004614dae565b610df6565b34801561043f57600080fd5b506103e561044e366004614d34565b610e01565b34801561045f57600080fd5b506103e561046e366004614d34565b6000908152600d602052604090205490565b34801561048c57600080fd5b506104a061049b366004614e2b565b610e6f565b6040805192151583526001600160a01b03909116602083015201610314565b3480156104cb57600080fd5b506104df6104da366004614e9c565b610eb3565b604051610314929190614ebe565b3480156104f957600080fd5b506103ac610508366004614ed7565b610ef0565b34801561051957600080fd5b506103ac610528366004614ed7565b610f86565b34801561053957600080fd5b50600b546103e5565b34801561054e57600080fd5b506103ac61055d366004614dae565b610fe5565b34801561056e57600080fd5b506103ac61057d366004614d34565b611000565b610354610590366004614e2b565b61100b565b3480156105a157600080fd5b506103086105b0366004614d34565b611145565b3480156105c157600080fd5b506105d56105d0366004614d34565b61116b565b604080516001600160a01b03909316835261ffff909116602083015201610314565b34801561060357600080fd5b50610308610612366004614d93565b6111d6565b6103ac610625366004614fd8565b6111f4565b34801561063657600080fd5b506103ac610645366004614d69565b611372565b34801561065657600080fd5b50610354610665366004614d34565b6113a0565b34801561067657600080fd5b506009546103e5565b34801561068b57600080fd5b506103ac61069a366004614d93565b6113b2565b3480156106ab57600080fd5b506103e56106ba366004614d93565b6113df565b3480156106cb57600080fd5b506103ac6106da36600461507c565b61142e565b3480156106eb57600080fd5b506103ac6106fa366004614d69565b6115e0565b34801561070b57600080fd5b506007546001600160a01b0316610354565b34801561072957600080fd5b50610354610738366004614e9c565b61160e565b34801561074957600080fd5b50610308610758366004614ed7565b6116fd565b34801561076957600080fd5b506103ac6107783660046150bd565b611728565b34801561078957600080fd5b50610332611755565b34801561079e57600080fd5b506103ac6107ad3660046150f1565b611765565b3480156107be57600080fd5b506103326107cd366004615116565b611794565b3480156107de57600080fd5b506103326107ed366004614d34565b611915565b3480156107fe57600080fd5b5060405160048152602001610314565b34801561081a57600080fd5b506103e5600081565b34801561082f57600080fd5b506103ac61083e366004615154565b6119af565b34801561084f57600080fd5b50610117546103e5565b34801561086557600080fd5b50610308610874366004614ed7565b611a83565b34801561088557600080fd5b506103ac610894366004615180565b611ad9565b3480156108a557600080fd5b506108b96108b43660046151db565b611cb0565b604051610314919061524f565b3480156108d257600080fd5b506004546001600160a01b03811690600160a01b900461ffff166105d5565b3480156108fd57600080fd5b5061091161090c366004614d93565b611da4565b60408051928352602083019190915201610314565b34801561093257600080fd5b506103ac6109413660046152b1565b611de1565b34801561095257600080fd5b506103ac6109613660046152d2565b611e0e565b34801561097257600080fd5b50610332610981366004614d34565b611e5f565b34801561099257600080fd5b506103e56109a1366004614d34565b611ece565b3480156109b257600080fd5b506c05369676e617475726544726f7609c1b6103e5565b3480156109d557600080fd5b506103326109e4366004615116565b611f57565b3480156109f557600080fd5b506103e5610a04366004615339565b611fe5565b348015610a1557600080fd5b506105d561207d565b348015610a2a57600080fd5b506103ac610a39366004614ed7565b61209a565b348015610a4a57600080fd5b50600f54601054601154601254601354601454601554601654610a7a97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e082015261010001610314565b348015610aca57600080fd5b506103ac610ad9366004615444565b6120b3565b348015610aea57600080fd5b506104df6002546003546001600160a01b0390911691565b348015610b0e57600080fd5b50610332610b1d366004615556565b6122a6565b348015610b2e57600080fd5b5061033261231b565b348015610b4357600080fd5b50610308610b523660046155a4565b6001600160a01b03918216600090815261011e6020908152604080832093909416825291909152205460ff1690565b348015610b8d57600080fd5b50600254600160b01b900460ff1660405161031491906155e4565b348015610bb457600080fd5b50610bc8610bc336600461560c565b612328565b604080519215158352602083019190915201610314565b6000610bea8261250f565b80610c05575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101198054610c1b90615662565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4790615662565b8015610c945780601f10610c6957610100808354040283529160200191610c94565b820191906000526020600020905b815481529060010190602001808311610c7757829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610cb88261255f565b610cd5576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011d60205260409020546001600160a01b031690565b6000610cfd826113a0565b9050806001600160a01b0316836001600160a01b03161415610d325760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610d4461258d565b6001600160a01b031614610d7b57610d5e81610b5261258d565b610d7b576040516367d9dca160e11b815260040160405180910390fd5b610d8683838361259c565b505050565b610d936125f9565b610db85760405162461bcd60e51b8152600401610daf90615697565b60405180910390fd5b610dc181612607565b50565b610dcc6125f9565b610de85760405162461bcd60e51b8152600401610daf90615697565b610df28282612659565b5050565b610d868383836126e7565b6000610e0c60095490565b8210610e4a5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610daf565b60098281548110610e5d57610e5d6156bf565b90600052602060002001549050919050565b600080610e7d8585856128f3565b6101408601356000908152604e602052604090205490915060ff16158015610ea95750610ea981612959565b9150935093915050565b600080600080610ec28661116b565b90945084925061ffff169050612710610edb82876156eb565b610ee59190615720565b925050509250929050565b6000828152600d6020526040902054610f099033612968565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610f7c5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610daf565b610df282826129e8565b336001600160a01b03821614610fdb5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610daf565b610df282826129fc565b610d8683838360405180602001604052806000815250611e0e565b610dc1816001612a53565b61011754600b546000919061102460a087013583615734565b11156110425760405162461bcd60e51b8152600401610daf9061574c565b61104d858585612c37565b9150600061105e6020870187614d93565b90506110936110736080880160608901614d93565b60a08801356110896101008a0160e08b01614d93565b8960c00135612dc0565b60006110a56040880160208901614d93565b6001600160a01b0316141580156110bf5750604086013515155b156110e2576110e2826110d86040890160208a01614d93565b8860400135612ece565b6110f0818760a00135612f75565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161113491906157e5565b60405180910390a450509392505050565b6000818152600860205260408120805482919061116190615662565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156111b257805160208201516111cc565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b611202868686868686612f8f565b6017546000611219611212613022565b8886612328565b50905060006020850135158061122f5750601454155b905061124561123c613022565b89898985611ad9565b818015611256575060008560200135115b156112a0576112a0611266613022565b60008581526019602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b87600f60020160008282546112b59190615734565b9091555050600083815260186020526040812042916112d2613022565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506113036000898989612dc0565b600061130f8a8a61302c565b9050808a6001600160a01b0316611324613022565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68c60405161135e91815260200190565b60405180910390a450505050505050505050565b61137a6125f9565b6113965760405162461bcd60e51b8152600401610daf90615697565b610df2828261303a565b60006113ab826130b7565b5192915050565b6113ba6125f9565b6113d65760405162461bcd60e51b8152600401610daf90615697565b610dc1816131d4565b60006001600160a01b038216611408576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011c60205260409020546001600160401b031690565b6114366125f9565b6114525760405162461bcd60e51b8152600401610daf90615697565b601754601154821561149457506000611469613022565b4360405160200161147b9291906158f3565b6040516020818303038152906040528051906020012091505b83602001358111156114dd5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610daf565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e001602081019061153e9190614d93565b6001600160a01b039081169091528151600f5560208201516010556040808301516011556060830151601255608083015160135560a083015160145560c083015160155560e090920151601680546001600160a01b031916919092161790556017839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd79080906115d29086908690615910565b60405180910390a150505050565b6115e86125f9565b6116045760405162461bcd60e51b8152600401610daf90615697565b610df2828261321e565b6000828152600e602052604081205481805b828110156116f4576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561169d578482141561168b576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c05915050565b611696600183615734565b91506116e2565b6116a88660006116fd565b80156116cf57506000868152600e6020908152604080832083805260020190915290205481145b156116e2576116df600183615734565b91505b6116ed600182615734565b9050611620565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6117306125f9565b61174c5760405162461bcd60e51b8152600401610daf90615697565b610dc18161327c565b606061011a8054610c1b90615662565b61176d6125f9565b6117895760405162461bcd60e51b8152600401610daf90615697565b610d86838383612ece565b6000838152600860205260408120805460609291906117b290615662565b80601f01602080910402602001604051908101604052809291908181526020018280546117de90615662565b801561182b5780601f106118005761010080835404028352916020019161182b565b820191906000526020600020905b81548152906001019060200180831161180e57829003601f168201915b505050505090508051600014156118785760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610daf565b6000808280602001905181019061188f919061597e565b9150915061189e8287876122a6565b935080848787466040516020016118b894939291906159fe565b604051602081830303815290604052805190602001201461190b5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610daf565b5050509392505050565b6008602052600090815260409020805461192e90615662565b80601f016020809104026020016040519081016040528092919081815260200182805461195a90615662565b80156119a75780601f1061197c576101008083540402835291602001916119a7565b820191906000526020600020905b81548152906001019060200180831161198a57829003601f168201915b505050505081565b6119b761258d565b6001600160a01b0316826001600160a01b031614156119e95760405163b06307db60e01b815260040160405180910390fd5b8061011e60006119f761258d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611a3b61258d565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a77911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611ad057506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c05565b50600192915050565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a082015260155460c08201526016546001600160a01b0390811660e08301819052908516141580611b4457508060c001518314155b15611b8d5760405162461bcd60e51b8152602060048201526019602482015278496e76616c6964207072696365206f722063757272656e637960381b6044820152606401610daf565b841580611ba55750818015611ba55750806060015185115b15611be55760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610daf565b8060200151858260400151611bfa9190615734565b1115611c3d5760405162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b6044820152606401610daf565b600080611c4988611da4565b915091504283600001511180611c6857508115801590611c6857508042105b15611ca65760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610daf565b5050505050505050565b6060816001600160401b03811115611cca57611cca614f15565b604051908082528060200260200182016040528015611cfd57816020015b6060815260200190600190039081611ce85790505b50905060005b82811015611d9d57611d6d30858584818110611d2157611d216156bf565b9050602002810190611d339190615a27565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061335292505050565b828281518110611d7f57611d7f6156bf565b60200260200101819052508080611d9590615a6d565b915050611d03565b5092915050565b60175460009081526018602090815260408083206001600160a01b0385168452909152902054601354810181811015611ddc57506000195b915091565b611de96125f9565b611e055760405162461bcd60e51b8152600401610daf90615697565b610dc181613444565b611e198484846126e7565b611e2b836001600160a01b03166134a8565b15611e5957611e3c848484846134b7565b611e59576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611e6c836135a6565b5090506000611e7a846136ab565b9050611e8582611145565b15611eb35780604051602001611e9b9190615a88565b60405160208183030381529060405292505050919050565b80611ebd8561380c565b604051602001611e9b929190615aad565b6000818152600e6020526040812054815b81811015611f32576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611f2057611f1d600184615734565b92505b611f2b600182615734565b9050611edf565b50611f3e8360006116fd565b15611f5157611f4e600183615734565b91505b50919050565b606061014a54611f678133612968565b6000611f7286610e01565b9050611f7f818686611794565b9250611f9a8160405180602001604052806000815250613909565b611fa48184613928565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611fd49190614d14565b60405180910390a250509392505050565b6000811561206657600080611ffc84860186615adc565b91509150815160001415801561201157508015155b156120635761206388600b546120279190615734565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061390992505050565b50505b6120738686868686613947565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d6020526040902054610fdb9033612968565b600054610100900460ff16158080156120d35750600054600160ff909116105b806120f457506120e2306134a8565b1580156120f4575060005460ff166001145b6121575760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610daf565b6000805460ff19166001179055801561217a576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c610149557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661014a556121cd87613a51565b6121d78a8a613a89565b6121df613aba565b6121e88861327c565b6121f18b612607565b6121fc60008c6129e8565b61220961014a548c6129e8565b612216610149548c6129e8565b6122246101495460006129e8565b61223782846001600160801b0316612659565b61224a85856001600160801b031661303a565b612253866131d4565b8015612299576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b818110156123125760008585836040516020016122db93929190615b20565b60408051601f1981840301815291905280516020918201208884018201511885840182015261230b915082615734565b90506122bc565b50509392505050565b6001805461192e90615662565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a0820181905260155460c08301526016546001600160a01b031660e0830152600091829115612506576123fb6123948580615b32565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516123e0908a9060208a81013591016158f3565b60405160208183030381529060405280519060200120613b31565b9093509150826124405760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88185b1b1bdddb1a5cdd60821b6044820152606401610daf565b60175460009081526019602090815260408083206001600160981b0360088b901c168452909152902054600160ff88161b16156124af5760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610daf565b6020840135158015906124c55750836020013585115b156125065760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21038ba3c90383937b7b360791b6044820152606401610daf565b50935093915050565b60006001600160e01b031982166380ac58cd60e01b148061254057506001600160e01b03198216635b5e139f60e01b145b80610c0557506301ffc9a760e01b6001600160e01b0319831614610c05565b60006101175482108015610c05575050600090815261011b6020526040902054600160e01b900460ff161590565b6000612597613bff565b905090565b600082815261011d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006125978161075861258d565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561267b5760405162461bcd60e51b8152600401610daf90615b7b565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006126f2826130b7565b9050836001600160a01b031681600001516001600160a01b0316146127295760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b031661273d61258d565b6001600160a01b03161480612759575061275985610b5261258d565b80612784575061276761258d565b6001600160a01b031661277984610cad565b6001600160a01b0316145b9050806127a457604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127cb57604051633a954ecd60e21b815260040160405180910390fd5b6127d88585856001613c21565b6127e46000848761259c565b6001600160a01b03858116600090815261011c6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011b90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128ba576101175482146128ba57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615dd883398151915260405160405180910390a45050505050565b600061294f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612949925061293d9150889050613cbf565b80519060200120613e06565b90613e54565b90505b9392505050565b6000610c0561014a54836116fd565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610df2576129a6816001600160a01b03166014613e78565b6129b1836020613e78565b6040516020016129c2929190615ba4565b60408051601f198184030181529082905262461bcd60e51b8252610daf91600401614d14565b6129f28282614013565b610df2828261406e565b612a0682826140db565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612a5e836130b7565b80519091508215612ae6576000816001600160a01b0316612a7d61258d565b6001600160a01b03161480612a995750612a9982610b5261258d565b80612ac45750612aa761258d565b6001600160a01b0316612ab986610cad565b6001600160a01b0316145b905080612ae457604051632ce44b5f60e11b815260040160405180910390fd5b505b612af4816000866001613c21565b612b006000858361259c565b6001600160a01b03808216600081815261011c602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011b909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612bfd57610117548214612bfd57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615dd8833981519152908390a45050610118805460010190555050565b600080612c45858585610e6f565b9250905080612c845760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610daf565b42612c9761012087016101008801615c11565b6001600160801b03161180612cc55750612cb961014086016101208701615c11565b6001600160801b031642115b15612d005760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610daf565b6000612d0f6020870187614d93565b6001600160a01b03161415612d5c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610daf565b60008560a0013511612d985760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610daf565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b80612dca57611e59565b600080612dd561207d565b909250905060006001600160a01b03871615612df15786612df9565b612df9610c9e565b90506000612e0785886156eb565b90506000612710612e1c61ffff8616846156eb565b612e269190615720565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e9457813414612e945760405162461bcd60e51b81526020600482015260156024820152744d7573742073656e6420746f74616c20707269636560581b6044820152606401610daf565b612ea787612ea061258d565b878461413d565b612ec387612eb361258d565b85612ebe8587615c2c565b61413d565b505050505050505050565b612710811115612ef05760405162461bcd60e51b8152600401610daf90615b7b565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610df2828260405180602001604052806000815250614187565b6000612f9a336111d6565b80612fb4575032612fa961258d565b6001600160a01b0316145b905080612fe95760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610daf565b600b548661011754612ffb9190615734565b11156130195760405162461bcd60e51b8152600401610daf9061574c565b50505050505050565b600061259761258d565b61011754610c058383612f75565b61271081111561305c5760405162461bcd60e51b8152600401610daf90615b7b565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126db565b604080516060810182526000808252602082018190529181019190915281610117548110156131bb57600081815261011b6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131b95780516001600160a01b03161561314f579392505050565b5060001901600081815261011b6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156131b4579392505050565b61314f565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132709084908490614ebe565b60405180910390a15050565b60006001805461328b90615662565b80601f01602080910402602001604051908101604052809291908181526020018280546132b790615662565b80156133045780601f106132d957610100808354040283529160200191613304565b820191906000526020600020905b8154815290600101906020018083116132e757829003601f168201915b5050855193945061332093600193506020870192509050614bf0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613270929190615c43565b606061335d836134a8565b6133b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610daf565b600080846001600160a01b0316846040516133d39190615c68565b600060405180830381855af49150503d806000811461340e576040519150601f19603f3d011682016040523d82523d6000602084013e613413565b606091505b509150915061343b8282604051806060016040528060278152602001615db160279139614331565b95945050505050565b6002805482919060ff60b01b1916600160b01b836001811115613469576134696155ce565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161349d91906155e4565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134d061258d565b8786866040518563ffffffff1660e01b81526004016134f29493929190615c84565b6020604051808303816000875af192505050801561352d575060408051601f3d908101601f1916820190925261352a91810190615cb7565b60015b613588573d80801561355b576040519150601f19603f3d011682016040523d82523d6000602084013e613560565b606091505b508051613580576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006135b460095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561360457602002820191906000526020600020905b8154815260200190600101908083116135f0575b5050505050905060005b8281101561367057818181518110613628576136286156bf565b602002602001015186101561365e5780935081818151811061364c5761364c6156bf565b60200260200101519450505050915091565b613669600182615734565b905061360e565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610daf565b606060006136b860095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561370857602002820191906000526020600020905b8154815260200190600101908083116136f4575b5050505050905060005b828110156136705781818151811061372c5761372c6156bf565b60200260200101518510156137fa57600a6000838381518110613751576137516156bf565b60200260200101518152602001908152602001600020805461377290615662565b80601f016020809104026020016040519081016040528092919081815260200182805461379e90615662565b80156137eb5780601f106137c0576101008083540402835291602001916137eb565b820191906000526020600020905b8154815290600101906020018083116137ce57829003601f168201915b50505050509350505050919050565b613805600182615734565b9050613712565b6060816138305750506040805180820190915260018152600360fc1b602082015290565b8160005b811561385a578061384481615a6d565b91506138539050600a83615720565b9150613834565b6000816001600160401b0381111561387457613874614f15565b6040519080825280601f01601f19166020018201604052801561389e576020820181803683370190505b5090505b841561359e576138b3600183615c2c565b91506138c0600a86615cd4565b6138cb906030615734565b60f81b8183815181106138e0576138e06156bf565b60200101906001600160f81b031916908160001a905350613902600a86615720565b94506138a2565b60008281526008602090815260409091208251610d8692840190614bf0565b6000828152600a602090815260409091208251610d8692840190614bf0565b600061395161436a565b61396d5760405162461bcd60e51b8152600401610daf90615697565b856139a25760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610daf565b6000600b5490506139ea818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061437b92505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a208a84615734565b613a2a9190615c2c565b88888888604051613a3f959493929190615ce8565b60405180910390a25095945050505050565b600054610100900460ff16613a785760405162461bcd60e51b8152600401610daf90615d21565b613a806143df565b610dc181614406565b600054610100900460ff16613ab05760405162461bcd60e51b8152600401610daf90615d21565b610df28282614495565b600054610100900460ff16613ae15760405162461bcd60e51b8152600401610daf90615d21565b613b2f604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b8152506144f0565b565b6000808281805b8751811015613bf357613b4c6002836156eb565b91506000888281518110613b6257613b626156bf565b60200260200101519050808411613ba4576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613be0565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613bdd9190615734565b92505b5080613beb81615a6d565b915050613b38565b50941495939450505050565b6000613c0a336111d6565b15613c1c575060131936013560601c90565b503390565b613c2f6101495460006116fd565b158015613c4457506001600160a01b03841615155b8015613c5857506001600160a01b03831615155b15611e5957613c6a61014954856116fd565b158015613c815750613c7f61014954846116fd565b155b15611e595760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610daf565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613cef6020840184614d93565b613cff6040850160208601614d93565b6040850135613d146080870160608801614d93565b613d216080880188615a27565b604051613d2f929190615d6c565b60405190819003902060a088013560c0890135613d536101008b0160e08c01614d93565b613d656101208c016101008d01615c11565b613d776101408d016101208e01615c11565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610c05613e13614521565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613e63858561459c565b91509150613e70816145e2565b509392505050565b60606000613e878360026156eb565b613e92906002615734565b6001600160401b03811115613ea957613ea9614f15565b6040519080825280601f01601f191660200182016040528015613ed3576020820181803683370190505b509050600360fc1b81600081518110613eee57613eee6156bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f1d57613f1d6156bf565b60200101906001600160f81b031916908160001a9053506000613f418460026156eb565b613f4c906001615734565b90505b6001811115613fc4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613f8057613f806156bf565b1a60f81b828281518110613f9657613f966156bf565b60200101906001600160f81b031916908160001a90535060049490941c93613fbd81615d7c565b9050613f4f565b5083156129525760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610daf565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e602052604081208054916001919061408d8385615734565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6140e58282612968565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8061414757611e59565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561417b576141768282614798565b611e59565b611e598484848461483a565b610117546001600160a01b0384166141b157604051622e076360e81b815260040160405180910390fd5b826141cf5760405163b562e8dd60e01b815260040160405180910390fd5b6141dc6000858386613c21565b6001600160a01b038416600081815261011c6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011b90925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081850190614277906134a8565b156142ee575b60405182906001600160a01b03881690600090600080516020615dd8833981519152908290a46142b660008784806001019550876134b7565b6142d3576040516368d2bf6b60e11b815260040160405180910390fd5b80821061427d578261011754146142e957600080fd5b614321565b5b6040516001830192906001600160a01b03881690600090600080516020615dd8833981519152908290a48082106142ef575b5061011755611e59600085838684565b60608315614340575081612952565b8251156143505782518084602001fd5b8160405162461bcd60e51b8152600401610daf9190614d14565b600061259761014a5461075861258d565b6000806143888486615734565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350612506929091860190614bf0565b600054610100900460ff16613b2f5760405162461bcd60e51b8152600401610daf90615d21565b600054610100900460ff1661442d5760405162461bcd60e51b8152600401610daf90615d21565b60005b8151811015610df257600160816000848481518110614451576144516156bf565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061448d81615a6d565b915050614430565b600054610100900460ff166144bc5760405162461bcd60e51b8152600401610daf90615d21565b81516144d090610119906020850190614bf0565b5080516144e59061011a906020840190614bf0565b506000610117555050565b600054610100900460ff166145175760405162461bcd60e51b8152600401610daf90615d21565b610df28282614893565b60006125977f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f614550601a5490565b601b546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156145d35760208301516040840151606085015160001a6145c7878285856148d4565b945094505050506145db565b506000905060025b9250929050565b60008160048111156145f6576145f66155ce565b14156145ff5750565b6001816004811115614613576146136155ce565b141561465c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610daf565b6002816004811115614670576146706155ce565b14156146be5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610daf565b60038160048111156146d2576146d26155ce565b141561472b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610daf565b600481600481111561473f5761473f6155ce565b1415610dc15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610daf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146147e5576040519150601f19603f3d011682016040523d82523d6000602084013e6147ea565b606091505b5050905080610d865760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610daf565b816001600160a01b0316836001600160a01b0316141561485957611e59565b6001600160a01b03831630141561487e576141766001600160a01b03851683836149b7565b611e596001600160a01b038516848484614a0d565b600054610100900460ff166148ba5760405162461bcd60e51b8152600401610daf90615d21565b815160209283012081519190920120601a91909155601b55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561490157506000905060036149ae565b8460ff16601b1415801561491957508460ff16601c14155b1561492a57506000905060046149ae565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561497e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166149a7576000600192509250506149ae565b9150600090505b94509492505050565b610d868363a9059cbb60e01b84846040516024016149d6929190614ebe565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614a45565b6040516001600160a01b0380851660248301528316604482015260648101829052611e599085906323b872dd60e01b906084016149d6565b6000614a9a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614b179092919063ffffffff16565b805190915015610d865780806020019051810190614ab89190615d93565b610d865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610daf565b606061294f848460008585614b2b856134a8565b614b775760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610daf565b600080866001600160a01b03168587604051614b939190615c68565b60006040518083038185875af1925050503d8060008114614bd0576040519150601f19603f3d011682016040523d82523d6000602084013e614bd5565b606091505b5091509150614be5828286614331565b979650505050505050565b828054614bfc90615662565b90600052602060002090601f016020900481019282614c1e5760008555614c64565b82601f10614c3757805160ff1916838001178555614c64565b82800160010185558215614c64579182015b82811115614c64578251825591602001919060010190614c49565b50614c70929150614c74565b5090565b5b80821115614c705760008155600101614c75565b6001600160e01b031981168114610dc157600080fd5b600060208284031215614cb157600080fd5b813561295281614c89565b60005b83811015614cd7578181015183820152602001614cbf565b83811115611e595750506000910152565b60008151808452614d00816020860160208601614cbc565b601f01601f19169290920160200192915050565b6020815260006129526020830184614ce8565b6001600160a01b03169052565b600060208284031215614d4657600080fd5b5035919050565b80356001600160a01b0381168114614d6457600080fd5b919050565b60008060408385031215614d7c57600080fd5b614d8583614d4d565b946020939093013593505050565b600060208284031215614da557600080fd5b61295282614d4d565b600080600060608486031215614dc357600080fd5b614dcc84614d4d565b9250614dda60208501614d4d565b9150604084013590509250925092565b60008083601f840112614dfc57600080fd5b5081356001600160401b03811115614e1357600080fd5b6020830191508360208285010111156145db57600080fd5b600080600060408486031215614e4057600080fd5b83356001600160401b0380821115614e5757600080fd5b908501906101608288031215614e6c57600080fd5b90935060208501359080821115614e8257600080fd5b50614e8f86828701614dea565b9497909650939450505050565b60008060408385031215614eaf57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614eea57600080fd5b82359150614efa60208401614d4d565b90509250929050565b600060408284031215611f5157600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f5357614f53614f15565b604052919050565b60006001600160401b03821115614f7457614f74614f15565b50601f01601f191660200190565b600082601f830112614f9357600080fd5b8135614fa6614fa182614f5b565b614f2b565b818152846020838601011115614fbb57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614ff157600080fd5b614ffa87614d4d565b95506020870135945061500f60408801614d4d565b93506060870135925060808701356001600160401b038082111561503257600080fd5b61503e8a838b01614f03565b935060a089013591508082111561505457600080fd5b5061506189828a01614f82565b9150509295509295509295565b8015158114610dc157600080fd5b60008082840361012081121561509157600080fd5b610100808212156150a157600080fd5b84935083013590506150b28161506e565b809150509250929050565b6000602082840312156150cf57600080fd5b81356001600160401b038111156150e557600080fd5b61359e84828501614f82565b60008060006060848603121561510657600080fd5b83359250614dda60208501614d4d565b60008060006040848603121561512b57600080fd5b8335925060208401356001600160401b0381111561514857600080fd5b614e8f86828701614dea565b6000806040838503121561516757600080fd5b61517083614d4d565b915060208301356150b28161506e565b600080600080600060a0868803121561519857600080fd5b6151a186614d4d565b9450602086013593506151b660408701614d4d565b92506060860135915060808601356151cd8161506e565b809150509295509295909350565b600080602083850312156151ee57600080fd5b82356001600160401b038082111561520557600080fd5b818501915085601f83011261521957600080fd5b81358181111561522857600080fd5b8660208260051b850101111561523d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156152a457603f19888603018452615292858351614ce8565b94509285019290850190600101615276565b5092979650505050505050565b6000602082840312156152c357600080fd5b81356002811061295257600080fd5b600080600080608085870312156152e857600080fd5b6152f185614d4d565b93506152ff60208601614d4d565b92506040850135915060608501356001600160401b0381111561532157600080fd5b61532d87828801614f82565b91505092959194509250565b60008060008060006060868803121561535157600080fd5b8535945060208601356001600160401b038082111561536f57600080fd5b61537b89838a01614dea565b9096509450604088013591508082111561539457600080fd5b506153a188828901614dea565b969995985093965092949392505050565b600082601f8301126153c357600080fd5b813560206001600160401b038211156153de576153de614f15565b8160051b6153ed828201614f2b565b928352848101820192828101908785111561540757600080fd5b83870192505b84831015614be55761541e83614d4d565b8252918301919083019061540d565b80356001600160801b0381168114614d6457600080fd5b6000806000806000806000806000806101408b8d03121561546457600080fd5b61546d8b614d4d565b995060208b01356001600160401b038082111561548957600080fd5b6154958e838f01614f82565b9a5060408d01359150808211156154ab57600080fd5b6154b78e838f01614f82565b995060608d01359150808211156154cd57600080fd5b6154d98e838f01614f82565b985060808d01359150808211156154ef57600080fd5b506154fc8d828e016153b2565b96505061550b60a08c01614d4d565b945061551960c08c01614d4d565b935061552760e08c0161542d565b92506155366101008c0161542d565b91506155456101208c01614d4d565b90509295989b9194979a5092959850565b60008060006040848603121561556b57600080fd5b83356001600160401b038082111561558257600080fd5b61558e87838801614f82565b94506020860135915080821115614e8257600080fd5b600080604083850312156155b757600080fd5b6155c083614d4d565b9150614efa60208401614d4d565b634e487b7160e01b600052602160045260246000fd5b602081016002831061560657634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561562157600080fd5b61562a84614d4d565b92506020840135915060408401356001600160401b0381111561564c57600080fd5b61565886828701614f03565b9150509250925092565b600181811c9082168061567657607f821691505b60208210811415611f5157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615615705576157056156d5565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261572f5761572f61570a565b500490565b60008219821115615747576157476156d5565b500190565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6000808335601e1984360301811261578e57600080fd5b83016020810192503590506001600160401b038111156157ad57600080fd5b8036038313156145db57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526157fe602082016157f984614d4d565b614d27565b600061580c60208401614d4d565b6158196040840182614d27565b506040830135606083015261583060608401614d4d565b61583d6080840182614d27565b5061584b6080840184615777565b6101608060a0860152615863610180860183856157bc565b925060a086013560c086015260c086013560e086015261588560e08701614d4d565b915061010061589681870184614d27565b6158a181880161542d565b9250506101206158bb818701846001600160801b03169052565b6158c681880161542d565b9250506101406158e0818701846001600160801b03169052565b9590950135939094019290925250919050565b60609290921b6001600160601b0319168252601482015260340190565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0808401359082015261012081016001600160a01b0361596960e08601614d4d565b1660e083015291151561010090910152919050565b6000806040838503121561599157600080fd5b82516001600160401b038111156159a757600080fd5b8301601f810185136159b857600080fd5b80516159c6614fa182614f5b565b8181528660208385010111156159db57600080fd5b6159ec826020830160208601614cbc565b60209590950151949694955050505050565b60008551615a10818460208a01614cbc565b820184868237909301918252506020019392505050565b6000808335601e19843603018112615a3e57600080fd5b8301803591506001600160401b03821115615a5857600080fd5b6020019150368190038213156145db57600080fd5b6000600019821415615a8157615a816156d5565b5060010190565b60008251615a9a818460208701614cbc565b600360fc1b920191825250600101919050565b60008351615abf818460208801614cbc565b835190830190615ad3818360208801614cbc565b01949350505050565b60008060408385031215615aef57600080fd5b82356001600160401b03811115615b0557600080fd5b615b1185828601614f82565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615b4957600080fd5b8301803591506001600160401b03821115615b6357600080fd5b6020019150600581901b36038213156145db57600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bd4816015850160208801614cbc565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615c05816026840160208801614cbc565b01602601949350505050565b600060208284031215615c2357600080fd5b6129528261542d565b600082821015615c3e57615c3e6156d5565b500390565b604081526000615c566040830185614ce8565b828103602084015261343b8185614ce8565b60008251615c7a818460208701614cbc565b9190910192915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207390830184614ce8565b600060208284031215615cc957600080fd5b815161295281614c89565b600082615ce357615ce361570a565b500690565b858152606060208201526000615d026060830186886157bc565b8281036040840152615d158185876157bc565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615d8b57615d8b6156d5565b506000190190565b600060208284031215615da557600080fd5b81516129528161506e56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220122235efcf01dda4f0d908ccc3833c68d9e3c353bbb77b8b1123f3ef488bc12b64736f6c634300080c0033",
    "sourceMap": "1096:12007:280:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102e35760003560e01c806391d148541161018257806391d148541461073d578063938e3d7b1461075d57806395d89b411461077d5780639bcf7a15146107925780639fc4d68f146107b2578063a05112fc146107d2578063a0a8e460146107f2578063a217fddf1461080e578063a22cb46514610823578063a2309ff814610843578063a32fa5b314610859578063a72e157d14610879578063ac9650d814610899578063b24f2d39146108c6578063b67875ce146108f1578063b6f10c7914610926578063b88d4fde14610946578063c87b56dd14610966578063ca15c87314610986578063cb2ef6f7146109a6578063ce805642146109c9578063d37c353b146109e9578063d45573f614610a09578063d547741f14610a1e578063d637ed5914610a3e578063e159163414610abe578063e57553da14610ade578063e715032214610b02578063e8a3d48514610b22578063e985e9c514610b37578063f28083c314610b81578063ffbb7a1314610ba857600080fd5b806301ffc9a7146102e857806306fdde031461031d578063079fe40e1461033f578063081812fc1461036c578063095ea7b31461038c57806313af4035146103ae57806318160ddd146103ce5780631e7ac488146103f357806323b872dd146104135780632419f51b14610433578063248a9ca314610453578063252e82e8146104805780632a55205a146104bf5780632f2ff15d146104ed57806336568abe1461050d5780633b1475a71461052d57806342842e0e1461054257806342966c6814610562578063439c7be514610582578063492e224b146105955780634cc157df146105b5578063572b6c05146105f75780635ab31c1a14610617578063600dd5ea1461062a5780636352211e1461064a57806363b45e2d1461066a5780636f4f28371461067f57806370a082311461069f57806377312a9e146106bf5780637e54523c146106df5780638da5cb5b146106ff5780639010d07c1461071d575b600080fd5b3480156102f457600080fd5b50610308610303366004614c9f565b610bdf565b60405190151581526020015b60405180910390f35b34801561032957600080fd5b50610332610c0b565b6040516103149190614d14565b34801561034b57600080fd5b50610354610c9e565b6040516001600160a01b039091168152602001610314565b34801561037857600080fd5b50610354610387366004614d34565b610cad565b34801561039857600080fd5b506103ac6103a7366004614d69565b610cf2565b005b3480156103ba57600080fd5b506103ac6103c9366004614d93565b610d8b565b3480156103da57600080fd5b506101185461011754035b604051908152602001610314565b3480156103ff57600080fd5b506103ac61040e366004614d69565b610dc4565b34801561041f57600080fd5b506103ac61042e366004614dae565b610df6565b34801561043f57600080fd5b506103e561044e366004614d34565b610e01565b34801561045f57600080fd5b506103e561046e366004614d34565b6000908152600d602052604090205490565b34801561048c57600080fd5b506104a061049b366004614e2b565b610e6f565b6040805192151583526001600160a01b03909116602083015201610314565b3480156104cb57600080fd5b506104df6104da366004614e9c565b610eb3565b604051610314929190614ebe565b3480156104f957600080fd5b506103ac610508366004614ed7565b610ef0565b34801561051957600080fd5b506103ac610528366004614ed7565b610f86565b34801561053957600080fd5b50600b546103e5565b34801561054e57600080fd5b506103ac61055d366004614dae565b610fe5565b34801561056e57600080fd5b506103ac61057d366004614d34565b611000565b610354610590366004614e2b565b61100b565b3480156105a157600080fd5b506103086105b0366004614d34565b611145565b3480156105c157600080fd5b506105d56105d0366004614d34565b61116b565b604080516001600160a01b03909316835261ffff909116602083015201610314565b34801561060357600080fd5b50610308610612366004614d93565b6111d6565b6103ac610625366004614fd8565b6111f4565b34801561063657600080fd5b506103ac610645366004614d69565b611372565b34801561065657600080fd5b50610354610665366004614d34565b6113a0565b34801561067657600080fd5b506009546103e5565b34801561068b57600080fd5b506103ac61069a366004614d93565b6113b2565b3480156106ab57600080fd5b506103e56106ba366004614d93565b6113df565b3480156106cb57600080fd5b506103ac6106da36600461507c565b61142e565b3480156106eb57600080fd5b506103ac6106fa366004614d69565b6115e0565b34801561070b57600080fd5b506007546001600160a01b0316610354565b34801561072957600080fd5b50610354610738366004614e9c565b61160e565b34801561074957600080fd5b50610308610758366004614ed7565b6116fd565b34801561076957600080fd5b506103ac6107783660046150bd565b611728565b34801561078957600080fd5b50610332611755565b34801561079e57600080fd5b506103ac6107ad3660046150f1565b611765565b3480156107be57600080fd5b506103326107cd366004615116565b611794565b3480156107de57600080fd5b506103326107ed366004614d34565b611915565b3480156107fe57600080fd5b5060405160048152602001610314565b34801561081a57600080fd5b506103e5600081565b34801561082f57600080fd5b506103ac61083e366004615154565b6119af565b34801561084f57600080fd5b50610117546103e5565b34801561086557600080fd5b50610308610874366004614ed7565b611a83565b34801561088557600080fd5b506103ac610894366004615180565b611ad9565b3480156108a557600080fd5b506108b96108b43660046151db565b611cb0565b604051610314919061524f565b3480156108d257600080fd5b506004546001600160a01b03811690600160a01b900461ffff166105d5565b3480156108fd57600080fd5b5061091161090c366004614d93565b611da4565b60408051928352602083019190915201610314565b34801561093257600080fd5b506103ac6109413660046152b1565b611de1565b34801561095257600080fd5b506103ac6109613660046152d2565b611e0e565b34801561097257600080fd5b50610332610981366004614d34565b611e5f565b34801561099257600080fd5b506103e56109a1366004614d34565b611ece565b3480156109b257600080fd5b506c05369676e617475726544726f7609c1b6103e5565b3480156109d557600080fd5b506103326109e4366004615116565b611f57565b3480156109f557600080fd5b506103e5610a04366004615339565b611fe5565b348015610a1557600080fd5b506105d561207d565b348015610a2a57600080fd5b506103ac610a39366004614ed7565b61209a565b348015610a4a57600080fd5b50600f54601054601154601254601354601454601554601654610a7a97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e082015261010001610314565b348015610aca57600080fd5b506103ac610ad9366004615444565b6120b3565b348015610aea57600080fd5b506104df6002546003546001600160a01b0390911691565b348015610b0e57600080fd5b50610332610b1d366004615556565b6122a6565b348015610b2e57600080fd5b5061033261231b565b348015610b4357600080fd5b50610308610b523660046155a4565b6001600160a01b03918216600090815261011e6020908152604080832093909416825291909152205460ff1690565b348015610b8d57600080fd5b50600254600160b01b900460ff1660405161031491906155e4565b348015610bb457600080fd5b50610bc8610bc336600461560c565b612328565b604080519215158352602083019190915201610314565b6000610bea8261250f565b80610c05575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101198054610c1b90615662565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4790615662565b8015610c945780601f10610c6957610100808354040283529160200191610c94565b820191906000526020600020905b815481529060010190602001808311610c7757829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610cb88261255f565b610cd5576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011d60205260409020546001600160a01b031690565b6000610cfd826113a0565b9050806001600160a01b0316836001600160a01b03161415610d325760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610d4461258d565b6001600160a01b031614610d7b57610d5e81610b5261258d565b610d7b576040516367d9dca160e11b815260040160405180910390fd5b610d8683838361259c565b505050565b610d936125f9565b610db85760405162461bcd60e51b8152600401610daf90615697565b60405180910390fd5b610dc181612607565b50565b610dcc6125f9565b610de85760405162461bcd60e51b8152600401610daf90615697565b610df28282612659565b5050565b610d868383836126e7565b6000610e0c60095490565b8210610e4a5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610daf565b60098281548110610e5d57610e5d6156bf565b90600052602060002001549050919050565b600080610e7d8585856128f3565b6101408601356000908152604e602052604090205490915060ff16158015610ea95750610ea981612959565b9150935093915050565b600080600080610ec28661116b565b90945084925061ffff169050612710610edb82876156eb565b610ee59190615720565b925050509250929050565b6000828152600d6020526040902054610f099033612968565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610f7c5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610daf565b610df282826129e8565b336001600160a01b03821614610fdb5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610daf565b610df282826129fc565b610d8683838360405180602001604052806000815250611e0e565b610dc1816001612a53565b61011754600b546000919061102460a087013583615734565b11156110425760405162461bcd60e51b8152600401610daf9061574c565b61104d858585612c37565b9150600061105e6020870187614d93565b90506110936110736080880160608901614d93565b60a08801356110896101008a0160e08b01614d93565b8960c00135612dc0565b60006110a56040880160208901614d93565b6001600160a01b0316141580156110bf5750604086013515155b156110e2576110e2826110d86040890160208a01614d93565b8860400135612ece565b6110f0818760a00135612f75565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161113491906157e5565b60405180910390a450509392505050565b6000818152600860205260408120805482919061116190615662565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156111b257805160208201516111cc565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b611202868686868686612f8f565b6017546000611219611212613022565b8886612328565b50905060006020850135158061122f5750601454155b905061124561123c613022565b89898985611ad9565b818015611256575060008560200135115b156112a0576112a0611266613022565b60008581526019602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b87600f60020160008282546112b59190615734565b9091555050600083815260186020526040812042916112d2613022565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506113036000898989612dc0565b600061130f8a8a61302c565b9050808a6001600160a01b0316611324613022565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68c60405161135e91815260200190565b60405180910390a450505050505050505050565b61137a6125f9565b6113965760405162461bcd60e51b8152600401610daf90615697565b610df2828261303a565b60006113ab826130b7565b5192915050565b6113ba6125f9565b6113d65760405162461bcd60e51b8152600401610daf90615697565b610dc1816131d4565b60006001600160a01b038216611408576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011c60205260409020546001600160401b031690565b6114366125f9565b6114525760405162461bcd60e51b8152600401610daf90615697565b601754601154821561149457506000611469613022565b4360405160200161147b9291906158f3565b6040516020818303038152906040528051906020012091505b83602001358111156114dd5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610daf565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e001602081019061153e9190614d93565b6001600160a01b039081169091528151600f5560208201516010556040808301516011556060830151601255608083015160135560a083015160145560c083015160155560e090920151601680546001600160a01b031916919092161790556017839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd79080906115d29086908690615910565b60405180910390a150505050565b6115e86125f9565b6116045760405162461bcd60e51b8152600401610daf90615697565b610df2828261321e565b6000828152600e602052604081205481805b828110156116f4576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561169d578482141561168b576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c05915050565b611696600183615734565b91506116e2565b6116a88660006116fd565b80156116cf57506000868152600e6020908152604080832083805260020190915290205481145b156116e2576116df600183615734565b91505b6116ed600182615734565b9050611620565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6117306125f9565b61174c5760405162461bcd60e51b8152600401610daf90615697565b610dc18161327c565b606061011a8054610c1b90615662565b61176d6125f9565b6117895760405162461bcd60e51b8152600401610daf90615697565b610d86838383612ece565b6000838152600860205260408120805460609291906117b290615662565b80601f01602080910402602001604051908101604052809291908181526020018280546117de90615662565b801561182b5780601f106118005761010080835404028352916020019161182b565b820191906000526020600020905b81548152906001019060200180831161180e57829003601f168201915b505050505090508051600014156118785760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610daf565b6000808280602001905181019061188f919061597e565b9150915061189e8287876122a6565b935080848787466040516020016118b894939291906159fe565b604051602081830303815290604052805190602001201461190b5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610daf565b5050509392505050565b6008602052600090815260409020805461192e90615662565b80601f016020809104026020016040519081016040528092919081815260200182805461195a90615662565b80156119a75780601f1061197c576101008083540402835291602001916119a7565b820191906000526020600020905b81548152906001019060200180831161198a57829003601f168201915b505050505081565b6119b761258d565b6001600160a01b0316826001600160a01b031614156119e95760405163b06307db60e01b815260040160405180910390fd5b8061011e60006119f761258d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611a3b61258d565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a77911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611ad057506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c05565b50600192915050565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a082015260155460c08201526016546001600160a01b0390811660e08301819052908516141580611b4457508060c001518314155b15611b8d5760405162461bcd60e51b8152602060048201526019602482015278496e76616c6964207072696365206f722063757272656e637960381b6044820152606401610daf565b841580611ba55750818015611ba55750806060015185115b15611be55760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610daf565b8060200151858260400151611bfa9190615734565b1115611c3d5760405162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b6044820152606401610daf565b600080611c4988611da4565b915091504283600001511180611c6857508115801590611c6857508042105b15611ca65760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610daf565b5050505050505050565b6060816001600160401b03811115611cca57611cca614f15565b604051908082528060200260200182016040528015611cfd57816020015b6060815260200190600190039081611ce85790505b50905060005b82811015611d9d57611d6d30858584818110611d2157611d216156bf565b9050602002810190611d339190615a27565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061335292505050565b828281518110611d7f57611d7f6156bf565b60200260200101819052508080611d9590615a6d565b915050611d03565b5092915050565b60175460009081526018602090815260408083206001600160a01b0385168452909152902054601354810181811015611ddc57506000195b915091565b611de96125f9565b611e055760405162461bcd60e51b8152600401610daf90615697565b610dc181613444565b611e198484846126e7565b611e2b836001600160a01b03166134a8565b15611e5957611e3c848484846134b7565b611e59576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611e6c836135a6565b5090506000611e7a846136ab565b9050611e8582611145565b15611eb35780604051602001611e9b9190615a88565b60405160208183030381529060405292505050919050565b80611ebd8561380c565b604051602001611e9b929190615aad565b6000818152600e6020526040812054815b81811015611f32576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611f2057611f1d600184615734565b92505b611f2b600182615734565b9050611edf565b50611f3e8360006116fd565b15611f5157611f4e600183615734565b91505b50919050565b606061014a54611f678133612968565b6000611f7286610e01565b9050611f7f818686611794565b9250611f9a8160405180602001604052806000815250613909565b611fa48184613928565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611fd49190614d14565b60405180910390a250509392505050565b6000811561206657600080611ffc84860186615adc565b91509150815160001415801561201157508015155b156120635761206388600b546120279190615734565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061390992505050565b50505b6120738686868686613947565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d6020526040902054610fdb9033612968565b600054610100900460ff16158080156120d35750600054600160ff909116105b806120f457506120e2306134a8565b1580156120f4575060005460ff166001145b6121575760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610daf565b6000805460ff19166001179055801561217a576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c610149557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661014a556121cd87613a51565b6121d78a8a613a89565b6121df613aba565b6121e88861327c565b6121f18b612607565b6121fc60008c6129e8565b61220961014a548c6129e8565b612216610149548c6129e8565b6122246101495460006129e8565b61223782846001600160801b0316612659565b61224a85856001600160801b031661303a565b612253866131d4565b8015612299576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b818110156123125760008585836040516020016122db93929190615b20565b60408051601f1981840301815291905280516020918201208884018201511885840182015261230b915082615734565b90506122bc565b50509392505050565b6001805461192e90615662565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a0820181905260155460c08301526016546001600160a01b031660e0830152600091829115612506576123fb6123948580615b32565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516123e0908a9060208a81013591016158f3565b60405160208183030381529060405280519060200120613b31565b9093509150826124405760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88185b1b1bdddb1a5cdd60821b6044820152606401610daf565b60175460009081526019602090815260408083206001600160981b0360088b901c168452909152902054600160ff88161b16156124af5760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610daf565b6020840135158015906124c55750836020013585115b156125065760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21038ba3c90383937b7b360791b6044820152606401610daf565b50935093915050565b60006001600160e01b031982166380ac58cd60e01b148061254057506001600160e01b03198216635b5e139f60e01b145b80610c0557506301ffc9a760e01b6001600160e01b0319831614610c05565b60006101175482108015610c05575050600090815261011b6020526040902054600160e01b900460ff161590565b6000612597613bff565b905090565b600082815261011d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006125978161075861258d565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561267b5760405162461bcd60e51b8152600401610daf90615b7b565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006126f2826130b7565b9050836001600160a01b031681600001516001600160a01b0316146127295760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b031661273d61258d565b6001600160a01b03161480612759575061275985610b5261258d565b80612784575061276761258d565b6001600160a01b031661277984610cad565b6001600160a01b0316145b9050806127a457604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127cb57604051633a954ecd60e21b815260040160405180910390fd5b6127d88585856001613c21565b6127e46000848761259c565b6001600160a01b03858116600090815261011c6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011b90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128ba576101175482146128ba57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615dd883398151915260405160405180910390a45050505050565b600061294f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612949925061293d9150889050613cbf565b80519060200120613e06565b90613e54565b90505b9392505050565b6000610c0561014a54836116fd565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610df2576129a6816001600160a01b03166014613e78565b6129b1836020613e78565b6040516020016129c2929190615ba4565b60408051601f198184030181529082905262461bcd60e51b8252610daf91600401614d14565b6129f28282614013565b610df2828261406e565b612a0682826140db565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612a5e836130b7565b80519091508215612ae6576000816001600160a01b0316612a7d61258d565b6001600160a01b03161480612a995750612a9982610b5261258d565b80612ac45750612aa761258d565b6001600160a01b0316612ab986610cad565b6001600160a01b0316145b905080612ae457604051632ce44b5f60e11b815260040160405180910390fd5b505b612af4816000866001613c21565b612b006000858361259c565b6001600160a01b03808216600081815261011c602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011b909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612bfd57610117548214612bfd57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615dd8833981519152908390a45050610118805460010190555050565b600080612c45858585610e6f565b9250905080612c845760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610daf565b42612c9761012087016101008801615c11565b6001600160801b03161180612cc55750612cb961014086016101208701615c11565b6001600160801b031642115b15612d005760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610daf565b6000612d0f6020870187614d93565b6001600160a01b03161415612d5c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610daf565b60008560a0013511612d985760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610daf565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b80612dca57611e59565b600080612dd561207d565b909250905060006001600160a01b03871615612df15786612df9565b612df9610c9e565b90506000612e0785886156eb565b90506000612710612e1c61ffff8616846156eb565b612e269190615720565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e9457813414612e945760405162461bcd60e51b81526020600482015260156024820152744d7573742073656e6420746f74616c20707269636560581b6044820152606401610daf565b612ea787612ea061258d565b878461413d565b612ec387612eb361258d565b85612ebe8587615c2c565b61413d565b505050505050505050565b612710811115612ef05760405162461bcd60e51b8152600401610daf90615b7b565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610df2828260405180602001604052806000815250614187565b6000612f9a336111d6565b80612fb4575032612fa961258d565b6001600160a01b0316145b905080612fe95760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610daf565b600b548661011754612ffb9190615734565b11156130195760405162461bcd60e51b8152600401610daf9061574c565b50505050505050565b600061259761258d565b61011754610c058383612f75565b61271081111561305c5760405162461bcd60e51b8152600401610daf90615b7b565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126db565b604080516060810182526000808252602082018190529181019190915281610117548110156131bb57600081815261011b6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131b95780516001600160a01b03161561314f579392505050565b5060001901600081815261011b6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156131b4579392505050565b61314f565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132709084908490614ebe565b60405180910390a15050565b60006001805461328b90615662565b80601f01602080910402602001604051908101604052809291908181526020018280546132b790615662565b80156133045780601f106132d957610100808354040283529160200191613304565b820191906000526020600020905b8154815290600101906020018083116132e757829003601f168201915b5050855193945061332093600193506020870192509050614bf0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613270929190615c43565b606061335d836134a8565b6133b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610daf565b600080846001600160a01b0316846040516133d39190615c68565b600060405180830381855af49150503d806000811461340e576040519150601f19603f3d011682016040523d82523d6000602084013e613413565b606091505b509150915061343b8282604051806060016040528060278152602001615db160279139614331565b95945050505050565b6002805482919060ff60b01b1916600160b01b836001811115613469576134696155ce565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161349d91906155e4565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134d061258d565b8786866040518563ffffffff1660e01b81526004016134f29493929190615c84565b6020604051808303816000875af192505050801561352d575060408051601f3d908101601f1916820190925261352a91810190615cb7565b60015b613588573d80801561355b576040519150601f19603f3d011682016040523d82523d6000602084013e613560565b606091505b508051613580576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006135b460095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561360457602002820191906000526020600020905b8154815260200190600101908083116135f0575b5050505050905060005b8281101561367057818181518110613628576136286156bf565b602002602001015186101561365e5780935081818151811061364c5761364c6156bf565b60200260200101519450505050915091565b613669600182615734565b905061360e565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610daf565b606060006136b860095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561370857602002820191906000526020600020905b8154815260200190600101908083116136f4575b5050505050905060005b828110156136705781818151811061372c5761372c6156bf565b60200260200101518510156137fa57600a6000838381518110613751576137516156bf565b60200260200101518152602001908152602001600020805461377290615662565b80601f016020809104026020016040519081016040528092919081815260200182805461379e90615662565b80156137eb5780601f106137c0576101008083540402835291602001916137eb565b820191906000526020600020905b8154815290600101906020018083116137ce57829003601f168201915b50505050509350505050919050565b613805600182615734565b9050613712565b6060816138305750506040805180820190915260018152600360fc1b602082015290565b8160005b811561385a578061384481615a6d565b91506138539050600a83615720565b9150613834565b6000816001600160401b0381111561387457613874614f15565b6040519080825280601f01601f19166020018201604052801561389e576020820181803683370190505b5090505b841561359e576138b3600183615c2c565b91506138c0600a86615cd4565b6138cb906030615734565b60f81b8183815181106138e0576138e06156bf565b60200101906001600160f81b031916908160001a905350613902600a86615720565b94506138a2565b60008281526008602090815260409091208251610d8692840190614bf0565b6000828152600a602090815260409091208251610d8692840190614bf0565b600061395161436a565b61396d5760405162461bcd60e51b8152600401610daf90615697565b856139a25760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610daf565b6000600b5490506139ea818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061437b92505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a208a84615734565b613a2a9190615c2c565b88888888604051613a3f959493929190615ce8565b60405180910390a25095945050505050565b600054610100900460ff16613a785760405162461bcd60e51b8152600401610daf90615d21565b613a806143df565b610dc181614406565b600054610100900460ff16613ab05760405162461bcd60e51b8152600401610daf90615d21565b610df28282614495565b600054610100900460ff16613ae15760405162461bcd60e51b8152600401610daf90615d21565b613b2f604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b8152506144f0565b565b6000808281805b8751811015613bf357613b4c6002836156eb565b91506000888281518110613b6257613b626156bf565b60200260200101519050808411613ba4576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613be0565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613bdd9190615734565b92505b5080613beb81615a6d565b915050613b38565b50941495939450505050565b6000613c0a336111d6565b15613c1c575060131936013560601c90565b503390565b613c2f6101495460006116fd565b158015613c4457506001600160a01b03841615155b8015613c5857506001600160a01b03831615155b15611e5957613c6a61014954856116fd565b158015613c815750613c7f61014954846116fd565b155b15611e595760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610daf565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613cef6020840184614d93565b613cff6040850160208601614d93565b6040850135613d146080870160608801614d93565b613d216080880188615a27565b604051613d2f929190615d6c565b60405190819003902060a088013560c0890135613d536101008b0160e08c01614d93565b613d656101208c016101008d01615c11565b613d776101408d016101208e01615c11565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610c05613e13614521565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613e63858561459c565b91509150613e70816145e2565b509392505050565b60606000613e878360026156eb565b613e92906002615734565b6001600160401b03811115613ea957613ea9614f15565b6040519080825280601f01601f191660200182016040528015613ed3576020820181803683370190505b509050600360fc1b81600081518110613eee57613eee6156bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f1d57613f1d6156bf565b60200101906001600160f81b031916908160001a9053506000613f418460026156eb565b613f4c906001615734565b90505b6001811115613fc4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613f8057613f806156bf565b1a60f81b828281518110613f9657613f966156bf565b60200101906001600160f81b031916908160001a90535060049490941c93613fbd81615d7c565b9050613f4f565b5083156129525760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610daf565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e602052604081208054916001919061408d8385615734565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6140e58282612968565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8061414757611e59565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561417b576141768282614798565b611e59565b611e598484848461483a565b610117546001600160a01b0384166141b157604051622e076360e81b815260040160405180910390fd5b826141cf5760405163b562e8dd60e01b815260040160405180910390fd5b6141dc6000858386613c21565b6001600160a01b038416600081815261011c6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011b90925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081850190614277906134a8565b156142ee575b60405182906001600160a01b03881690600090600080516020615dd8833981519152908290a46142b660008784806001019550876134b7565b6142d3576040516368d2bf6b60e11b815260040160405180910390fd5b80821061427d578261011754146142e957600080fd5b614321565b5b6040516001830192906001600160a01b03881690600090600080516020615dd8833981519152908290a48082106142ef575b5061011755611e59600085838684565b60608315614340575081612952565b8251156143505782518084602001fd5b8160405162461bcd60e51b8152600401610daf9190614d14565b600061259761014a5461075861258d565b6000806143888486615734565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350612506929091860190614bf0565b600054610100900460ff16613b2f5760405162461bcd60e51b8152600401610daf90615d21565b600054610100900460ff1661442d5760405162461bcd60e51b8152600401610daf90615d21565b60005b8151811015610df257600160816000848481518110614451576144516156bf565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061448d81615a6d565b915050614430565b600054610100900460ff166144bc5760405162461bcd60e51b8152600401610daf90615d21565b81516144d090610119906020850190614bf0565b5080516144e59061011a906020840190614bf0565b506000610117555050565b600054610100900460ff166145175760405162461bcd60e51b8152600401610daf90615d21565b610df28282614893565b60006125977f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f614550601a5490565b601b546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156145d35760208301516040840151606085015160001a6145c7878285856148d4565b945094505050506145db565b506000905060025b9250929050565b60008160048111156145f6576145f66155ce565b14156145ff5750565b6001816004811115614613576146136155ce565b141561465c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610daf565b6002816004811115614670576146706155ce565b14156146be5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610daf565b60038160048111156146d2576146d26155ce565b141561472b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610daf565b600481600481111561473f5761473f6155ce565b1415610dc15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610daf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146147e5576040519150601f19603f3d011682016040523d82523d6000602084013e6147ea565b606091505b5050905080610d865760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610daf565b816001600160a01b0316836001600160a01b0316141561485957611e59565b6001600160a01b03831630141561487e576141766001600160a01b03851683836149b7565b611e596001600160a01b038516848484614a0d565b600054610100900460ff166148ba5760405162461bcd60e51b8152600401610daf90615d21565b815160209283012081519190920120601a91909155601b55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561490157506000905060036149ae565b8460ff16601b1415801561491957508460ff16601c14155b1561492a57506000905060046149ae565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561497e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166149a7576000600192509250506149ae565b9150600090505b94509492505050565b610d868363a9059cbb60e01b84846040516024016149d6929190614ebe565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614a45565b6040516001600160a01b0380851660248301528316604482015260648101829052611e599085906323b872dd60e01b906084016149d6565b6000614a9a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614b179092919063ffffffff16565b805190915015610d865780806020019051810190614ab89190615d93565b610d865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610daf565b606061294f848460008585614b2b856134a8565b614b775760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610daf565b600080866001600160a01b03168587604051614b939190615c68565b60006040518083038185875af1925050503d8060008114614bd0576040519150601f19603f3d011682016040523d82523d6000602084013e614bd5565b606091505b5091509150614be5828286614331565b979650505050505050565b828054614bfc90615662565b90600052602060002090601f016020900481019282614c1e5760008555614c64565b82601f10614c3757805160ff1916838001178555614c64565b82800160010185558215614c64579182015b82811115614c64578251825591602001919060010190614c49565b50614c70929150614c74565b5090565b5b80821115614c705760008155600101614c75565b6001600160e01b031981168114610dc157600080fd5b600060208284031215614cb157600080fd5b813561295281614c89565b60005b83811015614cd7578181015183820152602001614cbf565b83811115611e595750506000910152565b60008151808452614d00816020860160208601614cbc565b601f01601f19169290920160200192915050565b6020815260006129526020830184614ce8565b6001600160a01b03169052565b600060208284031215614d4657600080fd5b5035919050565b80356001600160a01b0381168114614d6457600080fd5b919050565b60008060408385031215614d7c57600080fd5b614d8583614d4d565b946020939093013593505050565b600060208284031215614da557600080fd5b61295282614d4d565b600080600060608486031215614dc357600080fd5b614dcc84614d4d565b9250614dda60208501614d4d565b9150604084013590509250925092565b60008083601f840112614dfc57600080fd5b5081356001600160401b03811115614e1357600080fd5b6020830191508360208285010111156145db57600080fd5b600080600060408486031215614e4057600080fd5b83356001600160401b0380821115614e5757600080fd5b908501906101608288031215614e6c57600080fd5b90935060208501359080821115614e8257600080fd5b50614e8f86828701614dea565b9497909650939450505050565b60008060408385031215614eaf57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614eea57600080fd5b82359150614efa60208401614d4d565b90509250929050565b600060408284031215611f5157600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f5357614f53614f15565b604052919050565b60006001600160401b03821115614f7457614f74614f15565b50601f01601f191660200190565b600082601f830112614f9357600080fd5b8135614fa6614fa182614f5b565b614f2b565b818152846020838601011115614fbb57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614ff157600080fd5b614ffa87614d4d565b95506020870135945061500f60408801614d4d565b93506060870135925060808701356001600160401b038082111561503257600080fd5b61503e8a838b01614f03565b935060a089013591508082111561505457600080fd5b5061506189828a01614f82565b9150509295509295509295565b8015158114610dc157600080fd5b60008082840361012081121561509157600080fd5b610100808212156150a157600080fd5b84935083013590506150b28161506e565b809150509250929050565b6000602082840312156150cf57600080fd5b81356001600160401b038111156150e557600080fd5b61359e84828501614f82565b60008060006060848603121561510657600080fd5b83359250614dda60208501614d4d565b60008060006040848603121561512b57600080fd5b8335925060208401356001600160401b0381111561514857600080fd5b614e8f86828701614dea565b6000806040838503121561516757600080fd5b61517083614d4d565b915060208301356150b28161506e565b600080600080600060a0868803121561519857600080fd5b6151a186614d4d565b9450602086013593506151b660408701614d4d565b92506060860135915060808601356151cd8161506e565b809150509295509295909350565b600080602083850312156151ee57600080fd5b82356001600160401b038082111561520557600080fd5b818501915085601f83011261521957600080fd5b81358181111561522857600080fd5b8660208260051b850101111561523d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156152a457603f19888603018452615292858351614ce8565b94509285019290850190600101615276565b5092979650505050505050565b6000602082840312156152c357600080fd5b81356002811061295257600080fd5b600080600080608085870312156152e857600080fd5b6152f185614d4d565b93506152ff60208601614d4d565b92506040850135915060608501356001600160401b0381111561532157600080fd5b61532d87828801614f82565b91505092959194509250565b60008060008060006060868803121561535157600080fd5b8535945060208601356001600160401b038082111561536f57600080fd5b61537b89838a01614dea565b9096509450604088013591508082111561539457600080fd5b506153a188828901614dea565b969995985093965092949392505050565b600082601f8301126153c357600080fd5b813560206001600160401b038211156153de576153de614f15565b8160051b6153ed828201614f2b565b928352848101820192828101908785111561540757600080fd5b83870192505b84831015614be55761541e83614d4d565b8252918301919083019061540d565b80356001600160801b0381168114614d6457600080fd5b6000806000806000806000806000806101408b8d03121561546457600080fd5b61546d8b614d4d565b995060208b01356001600160401b038082111561548957600080fd5b6154958e838f01614f82565b9a5060408d01359150808211156154ab57600080fd5b6154b78e838f01614f82565b995060608d01359150808211156154cd57600080fd5b6154d98e838f01614f82565b985060808d01359150808211156154ef57600080fd5b506154fc8d828e016153b2565b96505061550b60a08c01614d4d565b945061551960c08c01614d4d565b935061552760e08c0161542d565b92506155366101008c0161542d565b91506155456101208c01614d4d565b90509295989b9194979a5092959850565b60008060006040848603121561556b57600080fd5b83356001600160401b038082111561558257600080fd5b61558e87838801614f82565b94506020860135915080821115614e8257600080fd5b600080604083850312156155b757600080fd5b6155c083614d4d565b9150614efa60208401614d4d565b634e487b7160e01b600052602160045260246000fd5b602081016002831061560657634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561562157600080fd5b61562a84614d4d565b92506020840135915060408401356001600160401b0381111561564c57600080fd5b61565886828701614f03565b9150509250925092565b600181811c9082168061567657607f821691505b60208210811415611f5157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615615705576157056156d5565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261572f5761572f61570a565b500490565b60008219821115615747576157476156d5565b500190565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6000808335601e1984360301811261578e57600080fd5b83016020810192503590506001600160401b038111156157ad57600080fd5b8036038313156145db57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526157fe602082016157f984614d4d565b614d27565b600061580c60208401614d4d565b6158196040840182614d27565b506040830135606083015261583060608401614d4d565b61583d6080840182614d27565b5061584b6080840184615777565b6101608060a0860152615863610180860183856157bc565b925060a086013560c086015260c086013560e086015261588560e08701614d4d565b915061010061589681870184614d27565b6158a181880161542d565b9250506101206158bb818701846001600160801b03169052565b6158c681880161542d565b9250506101406158e0818701846001600160801b03169052565b9590950135939094019290925250919050565b60609290921b6001600160601b0319168252601482015260340190565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0808401359082015261012081016001600160a01b0361596960e08601614d4d565b1660e083015291151561010090910152919050565b6000806040838503121561599157600080fd5b82516001600160401b038111156159a757600080fd5b8301601f810185136159b857600080fd5b80516159c6614fa182614f5b565b8181528660208385010111156159db57600080fd5b6159ec826020830160208601614cbc565b60209590950151949694955050505050565b60008551615a10818460208a01614cbc565b820184868237909301918252506020019392505050565b6000808335601e19843603018112615a3e57600080fd5b8301803591506001600160401b03821115615a5857600080fd5b6020019150368190038213156145db57600080fd5b6000600019821415615a8157615a816156d5565b5060010190565b60008251615a9a818460208701614cbc565b600360fc1b920191825250600101919050565b60008351615abf818460208801614cbc565b835190830190615ad3818360208801614cbc565b01949350505050565b60008060408385031215615aef57600080fd5b82356001600160401b03811115615b0557600080fd5b615b1185828601614f82565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615b4957600080fd5b8301803591506001600160401b03821115615b6357600080fd5b6020019150600581901b36038213156145db57600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bd4816015850160208801614cbc565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615c05816026840160208801614cbc565b01602601949350505050565b600060208284031215615c2357600080fd5b6129528261542d565b600082821015615c3e57615c3e6156d5565b500390565b604081526000615c566040830185614ce8565b828103602084015261343b8185614ce8565b60008251615c7a818460208701614cbc565b9190910192915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207390830184614ce8565b600060208284031215615cc957600080fd5b815161295281614c89565b600082615ce357615ce361570a565b500690565b858152606060208201526000615d026060830186886157bc565b8281036040840152615d158185876157bc565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615d8b57615d8b6156d5565b506000190190565b600060208284031215615da557600080fd5b81516129528161506e56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220122235efcf01dda4f0d908ccc3833c68d9e3c353bbb77b8b1123f3ef488bc12b64736f6c634300080c0033",
    "sourceMap": "1096:12007:280:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:280;;;;;;;;;;-1:-1:-1;4107:280:280;;;;;:::i;:::-;;:::i;:::-;;;565:14:635;;558:22;540:41;;528:2;513:18;4107:280:280;;;;;;;;6619:98:386;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1616:32:635;;;1598:51;;1586:2;1571:18;676:104:74;1452:203:635;8087:200:386;;;;;;;;;;-1:-1:-1;8087:200:386;;;;;:::i;:::-;;:::i;7652:374::-;;;;;;;;;;-1:-1:-1;7652:374:386;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2807:306:386:-;;;;;;;;;;-1:-1:-1;3066:12:386;;3050:13;;:28;2807:306;;;2619:25:635;;;2607:2;2592:18;2807:306:386;2473:177:635;2043:269:73;;;;;;;;;;-1:-1:-1;2043:269:73;;;;;:::i;:::-;;:::i;8926:164:386:-;;;;;;;;;;-1:-1:-1;8926:164:386;;;;;:::i;:::-;;:::i;1277:203:52:-;;;;;;;;;;-1:-1:-1;1277:203:52;;;;;:::i;:::-;;:::i;2740:120:71:-;;;;;;;;;;-1:-1:-1;2740:120:71;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1252:293:86;;;;;;;;;;-1:-1:-1;1252:293:86;;;;;:::i;:::-;;:::i;:::-;;;;4605:14:635;;4598:22;4580:41;;-1:-1:-1;;;;;4657:32:635;;;4652:2;4637:18;;4630:60;4553:18;1252:293:86;4412:284:635;1421:347:77;;;;;;;;;;-1:-1:-1;1421:347:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:71:-;;;;;;;;;;-1:-1:-1;3255:271:71;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:71;;;;;:::i;:::-;;:::i;11541:106:280:-;;;;;;;;;;-1:-1:-1;11619:21:280;;11541:106;;9156:179:386;;;;;;;;;;-1:-1:-1;9156:179:386;;;;;:::i;:::-;;:::i;11703:184:280:-;;;;;;;;;;-1:-1:-1;11703:184:280;;;;;:::i;:::-;;:::i;6261:957::-;;;;;;:::i;:::-;;:::i;3937:129:57:-;;;;;;;;;;-1:-1:-1;3937:129:57;;;;;:::i;:::-;;:::i;2008:381:77:-;;;;;;;;;;-1:-1:-1;2008:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5682:32:635;;;5664:51;;5763:6;5751:19;;;5746:2;5731:18;;5724:47;5637:18;2008:381:77;5492:285:635;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;1591:2444:268:-;;;;;;:::i;:::-;;:::i;3087:256:77:-;;;;;;;;;;-1:-1:-1;3087:256:77;;;;;:::i;:::-;;:::i;6434:123:386:-;;;;;;;;;;-1:-1:-1;6434:123:386;;;;;:::i;:::-;;:::i;980:96:52:-;;;;;;;;;;-1:-1:-1;1054:8:52;:15;980:96;;1189:228:74;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;3948:203:386:-;;;;;;;;;;-1:-1:-1;3948:203:386;;;;;:::i;:::-;;:::i;4098:1273:268:-;;;;;;;;;;-1:-1:-1;4098:1273:268;;;;;:::i;:::-;;:::i;2821:255:73:-;;;;;;;;;;-1:-1:-1;2821:255:73;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1324:131:71:-;;;;;;;;;;-1:-1:-1;1324:131:71;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;6781:102:386:-;;;;;;;;;;;;;:::i;4281:288:77:-;;;;;;;;;;-1:-1:-1;4281:288:77;;;;;:::i;:::-;;:::i;1383:534:57:-;;;;;;;;;;-1:-1:-1;1383:534:57;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:57;;;;;:::i;:::-;;:::i;4503:89:280:-;;;;;;;;;;-1:-1:-1;4503:89:280;;4583:1;10196:36:635;;10184:2;10169:18;4503:89:280;10054:184:635;742:49:71;;;;;;;;;;-1:-1:-1;742:49:71;787:4;742:49;;8354:282:386;;;;;;;;;;-1:-1:-1;8354:282:386;;;;;:::i;:::-;;:::i;11315:144:280:-;;;;;;;;;;-1:-1:-1;11411:13:280;;11315:144;;2206:211:71;;;;;;;;;;-1:-1:-1;2206:211:71;;;;;:::i;:::-;;:::i;5468:1225:268:-;;;;;;;;;;-1:-1:-1;5468:1225:268;;;;;:::i;:::-;;:::i;632:301:461:-;;;;;;;;;;-1:-1:-1;632:301:461;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:77:-;;;;;;;;;;-1:-1:-1;2599:16:77;;-1:-1:-1;;;;;2599:16:77;;;-1:-1:-1;;;2624:10:77;;;;2499:144;;7909:491:268;;;;;;;;;;-1:-1:-1;7909:491:268;;;;;:::i;:::-;;:::i;:::-;;;;12706:25:635;;;12762:2;12747:18;;12740:34;;;;12679:18;7909:491:268;12532:248:635;3455:200:73;;;;;;;;;;-1:-1:-1;3455:200:73;;;;;:::i;:::-;;:::i;9401:360:386:-;;;;;;;;;;-1:-1:-1;9401:360:386;;;;;:::i;:::-;;:::i;3674:402:280:-;;;;;;;;;;-1:-1:-1;3674:402:280;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;4393:104:280:-;;;;;;;;;;-1:-1:-1;;;;4393:104:280;;5613:395;;;;;;;;;;-1:-1:-1;5613:395:280;;;;;:::i;:::-;;:::i;4966:540::-;;;;;;;;;;-1:-1:-1;4966:540:280;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;3897:171:71:-;;;;;;;;;;-1:-1:-1;3897:171:71;;;;;:::i;:::-;;:::i;552:36:268:-;;;;;;;;;;-1:-1:-1;552:36:268;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;552:36:268;;;;;;;14743:25:635;;;14799:2;14784:18;;14777:34;;;;14827:18;;;14820:34;;;;14885:2;14870:18;;14863:34;;;;14928:3;14913:19;;14906:35;14972:3;14957:19;;14950:35;15016:3;15001:19;;14994:35;-1:-1:-1;;;;;15066:32:635;15060:3;15045:19;;15038:61;14730:3;14715:19;552:36:268;14400:705:635;2264:1163:280;;;;;;;;;;-1:-1:-1;2264:1163:280;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;2409:1283:57;;;;;;;;;;-1:-1:-1;2409:1283:57;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;8702:162:386:-;;;;;;;;;;-1:-1:-1;8702:162:386;;;;;:::i;:::-;-1:-1:-1;;;;;8822:25:386;;;8799:4;8822:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8702:162;1467:107:73;;;;;;;;;;-1:-1:-1;1552:15:73;;-1:-1:-1;;;1552:15:73;;;;1467:107;;;;;;:::i;6785:1027:268:-;;;;;;;;;;-1:-1:-1;6785:1027:268;;;;;:::i;:::-;;:::i;:::-;;;;19528:14:635;;19521:22;19503:41;;19575:2;19560:18;;19553:34;;;;19476:18;6785:1027:268;19335:258:635;4107:280:280;4261:4;4288:36;4312:11;4288:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4328:52:280;;;4288:92;4281:99;4107:280;-1:-1:-1;;4107:280:280:o;6619:98:386:-;6673:13;6705:5;6698:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6619:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;8087:200:386:-;8155:7;8179:16;8187:7;8179;:16::i;:::-;8174:64;;8204:34;;-1:-1:-1;;;8204:34:386;;;;;;;;;;;8174:64;-1:-1:-1;8256:24:386;;;;:15;:24;;;;;;-1:-1:-1;;;;;8256:24:386;;8087:200::o;7652:374::-;7724:13;7740:35;7767:7;7740:26;:35::i;:::-;7724:51;;7795:5;-1:-1:-1;;;;;7789:11:386;:2;-1:-1:-1;;;;;7789:11:386;;7785:48;;;7809:24;;-1:-1:-1;;;7809:24:386;;;;;;;;;;;7785:48;7864:5;-1:-1:-1;;;;;7848:21:386;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7848:21:386;;7844:137;;7875:37;7892:5;7899:12;:10;:12::i;7875:37::-;7871:110;;7935:35;;-1:-1:-1;;;7935:35:386;;;;;;;;;;;7871:110;7991:28;8000:2;8004:7;8013:5;7991:8;:28::i;:::-;7714:312;7652:374;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2043:269:73:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:73;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;8926:164:386:-;9055:28;9065:4;9071:2;9075:7;9055:9;:28::i;1277:203:52:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:52;;20528:2:635;1407:23:52;;;20510:21:635;20567:2;20547:18;;;20540:30;-1:-1:-1;;;20586:18:635;;;20579:43;20639:18;;1407:23:52;20326:337:635;1360:81:52;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1252:293:86:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:86;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;1421:347:77:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:77;;-1:-1:-1;1613:66:77;;;-1:-1:-1;1755:6:77;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:71:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:71;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:71;;21564:2:635;3435:39:71;;;21546:21:635;21603:2;21583:18;;;21576:30;21642:31;21622:18;;;21615:59;21691:18;;3435:39:71;21362:353:635;3392:93:71;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:71;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:71;;21922:2:635;4594:36:71;;;21904:21:635;21961:2;21941:18;;;21934:30;-1:-1:-1;;;21980:18:635;;;21973:56;22046:18;;4594:36:71;21720:350:635;4553:88:71;4650:26;4662:4;4668:7;4650:11;:26::i;9156:179:386:-;9289:39;9306:4;9312:2;9316:7;9289:39;;;;;;;;;;;;:16;:39::i;11703:184:280:-;11860:20;11866:7;11875:4;11860:5;:20::i;6261:957::-;6446:13;;6505:21;;6392:14;;6446:13;6473:29;6489:13;;;;6446;6473:29;:::i;:::-;:53;6469:111;;;6542:27;;-1:-1:-1;;;6542:27:280;;;;;;;:::i;6469:111::-;6638:33;6654:4;6660:10;;6638:15;:33::i;:::-;6629:42;-1:-1:-1;6682:16:280;6701:7;;;;:4;:7;:::i;:::-;6682:26;-1:-1:-1;6744:97:280;6765:25;;;;;;;;:::i;:::-;6792:13;;;;6807;;;;;;;;:::i;:::-;6822:4;:18;;;6744:20;:97::i;:::-;6930:1;6897:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6897:35:280;;;:59;;;;-1:-1:-1;6936:15:280;;;;:20;;6897:59;6893:170;;;6972:80;6998:13;7013:21;;;;;;;;:::i;:::-;7036:4;:15;;;6972:25;:80::i;:::-;7097:34;7107:8;7117:4;:13;;;7097:9;:34::i;:::-;7191:13;7181:8;-1:-1:-1;;;;;7147:64:280;7173:6;-1:-1:-1;;;;;7147:64:280;;7206:4;7147:64;;;;;;:::i;:::-;;;;;;;;6412:806;;6261:957;;;;;:::o;3937:129:57:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;2008:381:77:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:77;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:77;;;-1:-1:-1;;;2295:10:77;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1591:2444:268:-;1844:85;1857:9;1868;1879;1890:14;1906:15;1923:5;1844:12;:85::i;:::-;1968:11;;1940:25;2417:68;2440:16;:14;:16::i;:::-;2458:9;2469:15;2417:22;:68::i;:::-;-1:-1:-1;2389:96:268;-1:-1:-1;2830:38:268;2871;;;;:43;;:98;;-1:-1:-1;2930:25:268;;:39;2871:98;2830:139;;2980:102;2992:16;:14;:16::i;:::-;3010:9;3021;3032:14;3048:33;2980:11;:102::i;:::-;3097:16;:62;;;;;3158:1;3117:15;:38;;;:42;3097:62;3093:338;;;3344:76;3401:16;:14;:16::i;:::-;3344:36;;;;:17;:36;;;;;;;;-1:-1:-1;;;;;1204:1:287;1195:10;;;;1259:20;;;;;;;:28;;1230:1;1244:4;1236:12;;;1230:19;;;;1259:28;;;;;1108:186;3344:76:268;3507:9;3475:14;:28;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;3526:37:268;;;;:18;:37;;;;;3584:15;;3564:16;:14;:16::i;:::-;-1:-1:-1;;;;;3526:55:268;-1:-1:-1;;;;;3526:55:268;;;;;;;;;;;;:73;;;;3656:70;3685:1;3689:9;3700;3711:14;3656:20;:70::i;:::-;3783:20;3806:44;3829:9;3840;3806:22;:44::i;:::-;3783:67;;3909:12;3898:9;-1:-1:-1;;;;;3866:67:268;3880:16;:14;:16::i;:::-;-1:-1:-1;;;;;3866:67:268;;3923:9;3866:67;;;;2619:25:635;;2607:2;2592:18;;2473:177;3866:67:268;;;;;;;;1834:2201;;;;1591:2444;;;;;;:::o;3087:256:77:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:77;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6434:123:386:-;6498:7;6524:21;6537:7;6524:12;:21::i;:::-;:26;;6434:123;-1:-1:-1;;6434:123:386:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3948:203:386:-;4012:7;-1:-1:-1;;;;;4035:19:386;;4031:60;;4063:28;;-1:-1:-1;;;4063:28:386;;;;;;;;;;;4031:60;-1:-1:-1;;;;;;4116:19:386;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4116:27:386;;3948:203::o;4098:1273:268:-;4224:24;:22;:24::i;:::-;4219:80;;4264:24;;-1:-1:-1;;;4264:24:268;;;;;;;:::i;4219:80::-;4337:11;;4389:28;;4428:170;;;;-1:-1:-1;4493:1:268;4555:16;:14;:16::i;:::-;4573:12;4538:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4528:59;;;;;;4508:79;;4428:170;4635:10;:29;;;4612:20;:52;4608:111;;;4680:28;;-1:-1:-1;;;4680:28:268;;25484:2:635;4680:28:268;;;25466:21:635;25523:2;25503:18;;;25496:30;-1:-1:-1;;;25542:18:635;;;25535:48;25600:18;;4680:28:268;25282:342:635;4608:111:268;4746:504;;;;;;;;4791:10;:25;;;4746:504;;;;4850:10;:29;;;4746:504;;;;4908:20;4746:504;;;;4971:10;:38;;;4746:504;;;;5055:10;:41;;;4746:504;;;;5122:10;:21;;;4746:504;;;;5172:10;:24;;;4746:504;;;;5220:10;:19;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4746:504:268;;;;;;4729:521;;:14;:521;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4729:521:268;;;;;;;;5260:11;:31;;;5307:57;;;;;5329:10;;5341:22;;5307:57;:::i;:::-;;;;;;;;4209:1162;;4098:1273;;:::o;2821:255:73:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:73;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:71:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:71;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6781:102:386:-;6837:13;6869:7;6862:14;;;;;:::i;4281:288:77:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:77;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;1383:534:57:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;;1591:27;;-1:-1:-1;;;1591:27:57;;26700:2:635;1591:27:57;;;26682:21:635;26739:2;26719:18;;;26712:30;-1:-1:-1;;;26758:18:635;;;26751:47;26815:18;;1591:27:57;26498:341:635;1555:74:57;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:57;;28284:2:635;1805:105:57;;;28266:21:635;28323:2;28303:18;;;28296:30;-1:-1:-1;;;28342:18:635;;;28335:43;28395:18;;1805:105:57;28082:337:635;1805:105:57;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8354:282:386:-;8464:12;:10;:12::i;:::-;-1:-1:-1;;;;;8452:24:386;:8;-1:-1:-1;;;;;8452:24:386;;8448:54;;;8485:17;;-1:-1:-1;;;8485:17:386;;;;;;;;;;;8448:54;8558:8;8513:18;:32;8532:12;:10;:12::i;:::-;-1:-1:-1;;;;;8513:32:386;;;;;;;;;;;;;;;;;-1:-1:-1;8513:32:386;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8513:53:386;;;;;;;;;;;8596:12;:10;:12::i;:::-;-1:-1:-1;;;;;8581:48:386;;8620:8;8581:48;;;;565:14:635;558:22;540:41;;528:2;513:18;;400:187;8581:48:386;;;;;;;;8354:282;;:::o;2206:211:71:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:71;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:71;2206:211;;;;:::o;5468:1225:268:-;5675:56;;;;;;;;5717:14;5675:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5675:56:268;;;;;;;;;5746:39;;;;;;:92;;;5807:17;:31;;;5789:14;:49;;5746:92;5742:158;;;5854:35;;-1:-1:-1;;;5854:35:268;;28626:2:635;5854:35:268;;;28608:21:635;28665:2;28645:18;;;28638:30;-1:-1:-1;;;28684:18:635;;;28677:55;28749:18;;5854:35:268;28424:349:635;5742:158:268;6036:14;;;:124;;;6067:31;:92;;;;;6114:17;:45;;;6102:9;:57;6067:92;6019:203;;;6185:26;;-1:-1:-1;;;6185:26:268;;28980:2:635;6185:26:268;;;28962:21:635;29019:2;28999:18;;;28992:30;-1:-1:-1;;;29038:18:635;;;29031:46;29094:18;;6185:26:268;28778:340:635;6019:203:268;6282:17;:36;;;6270:9;6236:17;:31;;;:43;;;;:::i;:::-;:82;6232:141;;;6334:28;;-1:-1:-1;;;6334:28:268;;29325:2:635;6334:28:268;;;29307:21:635;29364:2;29344:18;;;29337:30;-1:-1:-1;;;29383:18:635;;;29376:48;29441:18;;6334:28:268;29123:342:635;6232:141:268;6384:21;6407:31;6442:27;6460:8;6442:17;:27::i;:::-;6383:86;;;;6531:15;6496:17;:32;;;:50;:131;;;-1:-1:-1;6563:18:268;;;;;:63;;;6603:23;6585:15;:41;6563:63;6479:208;;;6652:24;;-1:-1:-1;;;6652:24:268;;29672:2:635;6652:24:268;;;29654:21:635;29711:2;29691:18;;;29684:30;-1:-1:-1;;;29730:18:635;;;29723:44;29784:18;;6652:24:268;29470:338:635;6479:208:268;5665:1028;;;5468:1225;;;;;:::o;632:301:461:-;700:22;756:4;-1:-1:-1;;;;;744:24:461;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:461;;-1:-1:-1;;;847:45:461:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;7909:491:268:-;8104:11;;7999:21;8085:31;;;:18;:31;;;;;;;;-1:-1:-1;;;;;8085:41:268;;;;;;;;;;8203:45;;8187:61;;8267:39;;;8263:121;;;-1:-1:-1;;;8263:121:268;7909:491;;;:::o;3455:200:73:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:73;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;9401:360:386:-;9562:28;9572:4;9578:2;9582:7;9562:9;:28::i;:::-;9604:15;:2;-1:-1:-1;;;;;9604:13:386;;:15::i;:::-;9600:155;;;9625:56;9656:4;9662:2;9666:7;9675:5;9625:30;:56::i;:::-;9621:134;;9704:40;;-1:-1:-1;;;9704:40:386;;;;;;;;;;;9621:134;9401:360;;;;:::o;3674:402:280:-;3740:13;3766:15;3787:21;3799:8;3787:11;:21::i;:::-;3765:43;;;3818:22;3843:21;3855:8;3843:11;:21::i;:::-;3818:46;;3879:25;3896:7;3879:16;:25::i;:::-;3875:195;;;3951:8;3934:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;3920:46;;;;3674:402;;;:::o;3875:195::-;4028:8;4038:19;:8;:17;:19::i;:::-;4011:47;;;;;;;;;:::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;5613:395:280:-;5729:25;5700:10;;931:28:71;942:4;948:10;931;:28::i;:::-;5770:15:280::1;5788:25;5806:6;5788:17;:25::i;:::-;5770:43;;5837:27;5850:7;5859:4;;5837:12;:27::i;:::-;5823:41;;5875:30;5893:7;5875:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;5915:33;5927:7;5936:11;5915;:33::i;:::-;5981:6;5964:37;5989:11;5964:37;;;;;;:::i;:::-;;;;;;;;5760:248;5613:395:::0;;;;;;:::o;4966:540::-;5113:15;5144:16;;5140:293;;5177:25;;5230:35;;;;5241:5;5230:35;:::i;:::-;5176:89;;;;5283:12;:19;5306:1;5283:24;;:48;;;;-1:-1:-1;5311:20:280;;;5283:48;5279:144;;;5351:57;5393:7;5369:21;;:31;;;;:::i;:::-;5402:5;;5351:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5351:17:280;;-1:-1:-1;;;5351:57:280:i;:::-;5162:271;;5140:293;5450:49;5465:7;5474:17;;5493:5;;5450:14;:49::i;:::-;5443:56;4966:540;-1:-1:-1;;;;;;4966:540:280:o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;3897:171:71:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;2264:1163:280:-;3111:19:431;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:431;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:431;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:431;;31993:2:635;3157:201:431;;;31975:21:635;32032:2;32012:18;;;32005:30;32071:34;32051:18;;;32044:62;-1:-1:-1;;;32122:18:635;;;32115:44;32176:19;;3157:201:431;31791:410:635;3157:201:431;3368:12;:16;;-1:-1:-1;;3368:16:431;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:431;;;;;3394:65;2676:26:280::1;2661:12;:41:::0;2725:24:::1;2712:10;:37:::0;2835:41:::1;2857:18:::0;2835:21:::1;:41::i;:::-;2886:30;2901:5;2908:7;2886:14;:30::i;:::-;2926:28;:26;:28::i;:::-;2965:31;2983:12;2965:17;:31::i;:::-;3006:26;3018:13;3006:11;:26::i;:::-;3043:45;787:4:71;3074:13:280::0;3043:10:::1;:45::i;:::-;3098:37;3109:10;;3121:13;3098:10;:37::i;:::-;3145:39;3156:12;;3170:13;3145:10;:39::i;:::-;3194:36;3205:12;;3227:1;3194:10;:36::i;:::-;3241:61;3263:21;3286:15;-1:-1:-1::0;;;;;3241:61:280::1;:21;:61::i;:::-;3312:56;3337:17;3356:11;-1:-1:-1::0;;;;;3312:56:280::1;:24;:56::i;:::-;3378:42;3405:14;3378:26;:42::i;:::-;3483:14:431::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:431;;;3553:14;;-1:-1:-1;10196:36:635;;3553:14:431;;10184:2:635;10169:18;3553:14:431;;;;;;;3479:99;3101:483;2264:1163:280;;;;;;;;;;:::o;2409:1283:57:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:57;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:57;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:54:-;;;;;;;:::i;6785:1027:268:-;7005:56;;;;;;;;7047:14;7005:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7005:56:268;;;;;6946:21;;;;7076:42;7072:734;;7173:212;7209:21;:15;;:21;:::i;:::-;7173:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7248:28:268;;;;7304:66;;;;7321:8;;7331:38;;;;;;7304:66;;:::i;:::-;;;;;;;;;;;;;7294:77;;;;;;7173:18;:212::i;:::-;7134:251;;-1:-1:-1;7134:251:268;-1:-1:-1;7134:251:268;7399:82;;7440:26;;-1:-1:-1;;;7440:26:268;;33497:2:635;7440:26:268;;;33479:21:635;33536:2;33516:18;;;33509:30;-1:-1:-1;;;33555:18:635;;;33548:46;33611:18;;7440:26:268;33295:340:635;7399:82:268;7517:11;;7499:30;;;;:17;:30;;;;;;;;-1:-1:-1;;;;;641:1:287;632:10;;;;703:20;;;;;;;;667:1;681:4;673:12;;667:19;703:27;:32;7495:124:268;;7581:23;;-1:-1:-1;;;7581:23:268;;33842:2:635;7581:23:268;;;33824:21:635;33881:2;33861:18;;;33854:30;-1:-1:-1;;;33900:18:635;;;33893:43;33953:18;;7581:23:268;33640:337:635;7495:124:268;7637:38;;;;:43;;;;:97;;;7696:15;:38;;;7684:9;:50;7637:97;7633:163;;;7754:27;;-1:-1:-1;;;7754:27:268;;34184:2:635;7754:27:268;;;34166:21:635;34223:2;34203:18;;;34196:30;-1:-1:-1;;;34242:18:635;;;34235:47;34299:18;;7754:27:268;33982:341:635;7633:163:268;6995:817;6785:1027;;;;;;:::o;3545:344:386:-;3669:4;-1:-1:-1;;;;;;3704:51:386;;-1:-1:-1;;;3704:51:386;;:126;;-1:-1:-1;;;;;;;3771:59:386;;-1:-1:-1;;;3771:59:386;3704:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:466;;;3846:36:386;1060:166:466;10007:172:386;10064:4;10127:13;;10117:7;:23;10087:85;;;;-1:-1:-1;;10145:20:386;;;;:11;:20;;;;;:27;-1:-1:-1;;;10145:27:386;;;;10144:28;;10007:172::o;12637:231:280:-;12786:14;12823:38;:36;:38::i;:::-;12816:45;;12637:231;:::o;18988:189:386:-;19098:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19098:29:386;-1:-1:-1;;;;;19098:29:386;;;;;;;;;19142:28;;19098:24;;19142:28;;;;;;;18988:189;;;:::o;10020:127:280:-;10076:4;10099:41;10076:4;10127:12;:10;:12::i;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:73:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:73;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:73;-1:-1:-1;;;2567:40:73;;;;-1:-1:-1;;;;;;2617:44:73;;-1:-1:-1;;;;;2617:44:73;;;;;;;;2677:62;;2619:25:635;;;2677:62:73;;2607:2:635;2592:18;2677:62:73;;;;;;;;2371:375;;:::o;14063:2082:386:-;14173:35;14211:21;14224:7;14211:12;:21::i;:::-;14173:59;;14269:4;-1:-1:-1;;;;;14247:26:386;:13;:18;;;-1:-1:-1;;;;;14247:26:386;;14243:67;;14282:28;;-1:-1:-1;;;14282:28:386;;;;;;;;;;;14243:67;14321:22;14363:4;-1:-1:-1;;;;;14347:20:386;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14347:20:386;;:72;;;;14383:36;14400:4;14406:12;:10;:12::i;14383:36::-;14347:124;;;;14459:12;:10;:12::i;:::-;-1:-1:-1;;;;;14435:36:386;:20;14447:7;14435:11;:20::i;:::-;-1:-1:-1;;;;;14435:36:386;;14347:124;14321:151;;14488:17;14483:66;;14514:35;;-1:-1:-1;;;14514:35:386;;;;;;;;;;;14483:66;-1:-1:-1;;;;;14563:16:386;;14559:52;;14588:23;;-1:-1:-1;;;14588:23:386;;;;;;;;;;;14559:52;14622:43;14644:4;14650:2;14654:7;14663:1;14622:21;:43::i;:::-;14727:35;14744:1;14748:7;14757:4;14727:8;:35::i;:::-;-1:-1:-1;;;;;15052:18:386;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15052:31:386;;;-1:-1:-1;;;;;15052:31:386;;;-1:-1:-1;;15052:31:386;;;;;;;15097:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15097:29:386;;;;;;;;;;;15175:20;;;:11;:20;;;;;;15209:18;;-1:-1:-1;;;;;;15241:49:386;;;;-1:-1:-1;;;15274:15:386;15241:49;;;;;;;;;;15560:11;;15619:24;;;;;15661:13;;15175:20;;15619:24;;15661:13;15657:377;;15868:13;;15853:11;:28;15849:171;;15905:20;;15973:28;;;;-1:-1:-1;;;;;15947:54:386;-1:-1:-1;;;15947:54:386;-1:-1:-1;;;;;;15947:54:386;;;-1:-1:-1;;;;;15905:20:386;;15947:54;;;;15849:171;15028:1016;;;16078:7;16074:2;-1:-1:-1;;;;;16059:27:386;16068:4;-1:-1:-1;;;;;16059:27:386;-1:-1:-1;;;;;;;;;;;16059:27:386;;;;;;;;;14163:1982;;14063:2082;;;:::o;2428:204:86:-;2530:7;2556:69;2614:10;;2556:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2556:49:86;;-1:-1:-1;2583:20:86;;-1:-1:-1;2598:4:86;;-1:-1:-1;2583:14:86;:20::i;:::-;2573:31;;;;;;2556:16;:49::i;:::-;:57;;:69::i;:::-;2549:76;;2428:204;;;;;;:::o;9327:136:280:-;9405:4;9428:28;9436:10;;9448:7;9428;:28::i;5557:495:71:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:71;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:71;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:71;;;;;;;;;;-1:-1:-1;;;5684:351:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2043:269:73;;:::o;16522:2355:386:-;16601:35;16639:21;16652:7;16639:12;:21::i;:::-;16686:18;;16601:59;;-1:-1:-1;16715:284:386;;;;16748:22;16790:4;-1:-1:-1;;;;;16774:20:386;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16774:20:386;;:76;;;;16814:36;16831:4;16837:12;:10;:12::i;16814:36::-;16774:132;;;;16894:12;:10;:12::i;:::-;-1:-1:-1;;;;;16870:36:386;:20;16882:7;16870:11;:20::i;:::-;-1:-1:-1;;;;;16870:36:386;;16774:132;16748:159;;16927:17;16922:66;;16953:35;;-1:-1:-1;;;16953:35:386;;;;;;;;;;;16922:66;16734:265;16715:284;17009:51;17031:4;17045:1;17049:7;17058:1;17009:21;:51::i;:::-;17122:35;17139:1;17143:7;17152:4;17122:8;:35::i;:::-;-1:-1:-1;;;;;17481:18:386;;;17447:31;17481:18;;;:12;:18;;;;;;;;17513:24;;-1:-1:-1;;;;;;;;;;17513:24:386;;;;;;;;;-1:-1:-1;;;;;;17513:24:386;;;;17551:29;;;;;17536:1;17551:29;;;;;;;;-1:-1:-1;;;;;;17551:29:386;;;;;;;;;;17710:20;;;:11;:20;;;;;;17744;;-1:-1:-1;;;;17811:15:386;17778:49;;;-1:-1:-1;;;17778:49:386;-1:-1:-1;;;;;;17778:49:386;;;;;;;;;;17841:22;-1:-1:-1;;;17841:22:386;;;18129:11;;;18188:24;;;;;18230:13;;17481:18;;18188:24;;18230:13;18226:377;;18437:13;;18422:11;:28;18418:171;;18474:20;;18542:28;;;;-1:-1:-1;;;;;18516:54:386;-1:-1:-1;;;18516:54:386;-1:-1:-1;;;;;;18516:54:386;;;-1:-1:-1;;;;;18474:20:386;;18516:54;;;;18418:171;-1:-1:-1;;18628:35:386;;18655:7;;-1:-1:-1;18651:1:386;;-1:-1:-1;;;;;;18628:35:386;;;-1:-1:-1;;;;;;;;;;;18628:35:386;18651:1;;18628:35;-1:-1:-1;;18846:12:386;:14;;;;;;-1:-1:-1;;16522:2355:386:o;1792:562:86:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:86;-1:-1:-1;1937:44:86;1992:60;;2020:21;;-1:-1:-1;;;2020:21:86;;35663:2:635;2020:21:86;;;35645::635;35702:2;35682:18;;;35675:30;-1:-1:-1;;;35721:18:635;;;35714:41;35772:18;;2020:21:86;35461:335:635;1992:60:86;2096:15;2066:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2066:45:86;;:92;;;-1:-1:-1;2133:25:86;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2115:43:86;:15;:43;2066:92;2062:144;;;2174:21;;-1:-1:-1;;;2174:21:86;;36194:2:635;2174:21:86;;;36176::635;36233:2;36213:18;;;36206:30;-1:-1:-1;;;36252:18:635;;;36245:41;36303:18;;2174:21:86;35992:335:635;2062:144:86;2242:1;2223:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2223:21:86;;;2215:53;;;;-1:-1:-1;;;2215:53:86;;36534:2:635;2215:53:86;;;36516:21:635;36573:2;36553:18;;;36546:30;-1:-1:-1;;;36592:18:635;;;36585:49;36651:18;;2215:53:86;36332:343:635;2215:53:86;2302:1;2286:4;:13;;;:17;2278:35;;;;-1:-1:-1;;;2278:35:86;;36882:2:635;2278:35:86;;;36864:21:635;36921:1;36901:18;;;36894:29;-1:-1:-1;;;36939:18:635;;;36932:35;36984:18;;2278:35:86;36680:328:635;2278:35:86;-1:-1:-1;2331:8:86;;;;;2324:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2324:23:86;2343:4;2324:23;;;-1:-1:-1;1792:562:86;;;-1:-1:-1;1792:562:86:o;7941:1000:280:-;8141:19;8137:56;;8176:7;;8137:56;8204:28;8234:21;8259:20;:18;:20::i;:::-;8203:76;;-1:-1:-1;8203:76:280;-1:-1:-1;8290:21:280;-1:-1:-1;;;;;8314:35:280;;;:84;;8377:21;8314:84;;;8352:22;:20;:22::i;:::-;8290:108;-1:-1:-1;8409:18:280;8430:33;8449:14;8430:16;:33;:::i;:::-;8409:54;-1:-1:-1;8473:20:280;2000:6;8497:27;;;;8409:54;8497:27;:::i;:::-;8496:39;;;;:::i;:::-;8473:62;-1:-1:-1;;;;;;8550:45:280;;408:42:282;8550:45:280;8546:168;;;8628:10;8615:9;:23;8611:93;;8658:31;;-1:-1:-1;;;8658:31:280;;37215:2:635;8658:31:280;;;37197:21:635;37254:2;37234:18;;;37227:30;-1:-1:-1;;;37273:18:635;;;37266:51;37334:18;;8658:31:280;37013:345:635;8611:93:280;8724:97;8761:9;8772:12;:10;:12::i;:::-;8786:20;8808:12;8724:36;:97::i;:::-;8831:103;8868:9;8879:12;:10;:12::i;:::-;8893:13;8908:25;8921:12;8908:10;:25;:::i;:::-;8831:36;:103::i;:::-;8127:814;;;;;7941:1000;;;;:::o;4671:362:77:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:77;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:77;;;;;;;;;;;;;-1:-1:-1;4886:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:77;;;;;;;;;;;-1:-1:-1;4886:81:77;;;;;;;4983:43;;2619:25:635;;;4918:49:77;;4886:29;;4983:43;;2592:18:635;4983:43:77;;;;;;;4671:362;;;:::o;10258:102:386:-;10326:27;10336:2;10340:8;10326:27;;;;;;;;;;;;:9;:27::i;7461:390:280:-;7655:8;7666:30;7685:10;7666:18;:30::i;:::-;:59;;;-1:-1:-1;7716:9:280;7700:12;:10;:12::i;:::-;-1:-1:-1;;;;;7700:25:280;;7666:59;7655:70;;7743:3;7735:19;;;;-1:-1:-1;;;7735:19:280;;37695:2:635;7735:19:280;;;37677:21:635;37734:1;37714:18;;;37707:29;-1:-1:-1;;;37752:18:635;;;37745:33;37795:18;;7735:19:280;37493:326:635;7735:19:280;7801:21;;7788:9;7772:13;;:25;;;;:::i;:::-;:50;;7764:80;;;;-1:-1:-1;;;7764:80:280;;;;;;;:::i;:::-;7645:206;7461:390;;;;;;:::o;12520:111::-;12586:7;12612:12;:10;:12::i;8994:245::-;9172:13;;9195:37;9205:3;9210:21;9195:9;:37::i;3430:334:77:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:77;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:77;;-1:-1:-1;;;;;;3663:32:77;;;;;-1:-1:-1;;;3663:32:77;;;;;;;;3711:46;;2619:25:635;;;3711:46:77;;2607:2:635;2592:18;3711:46:77;2473:177:635;5291:1086:386;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5401:7:386;5483:13;;5476:4;:20;5472:841;;;5516:31;5550:17;;;:11;:17;;;;;;;;;5516:51;;;;;;;;;-1:-1:-1;;;;;5516:51:386;;;;-1:-1:-1;;;5516:51:386;;-1:-1:-1;;;;;5516:51:386;;;;;;;;-1:-1:-1;;;5516:51:386;;;;;;;;;;;;;;5585:714;;5634:14;;-1:-1:-1;;;;;5634:28:386;;5630:99;;5697:9;5291:1086;-1:-1:-1;;;5291:1086:386:o;5630:99::-;-1:-1:-1;;;6065:6:386;6109:17;;;;:11;:17;;;;;;;;;6097:29;;;;;;;;;-1:-1:-1;;;;;6097:29:386;;;;;-1:-1:-1;;;6097:29:386;;-1:-1:-1;;;;;6097:29:386;;;;;;;;-1:-1:-1;;;6097:29:386;;;;;;;;;;;;;6156:28;6152:107;;6223:9;5291:1086;-1:-1:-1;;;5291:1086:386:o;6152:107::-;6026:255;;;5498:815;5472:841;6339:31;;-1:-1:-1;;;6339:31:386;;;;;;;;;;;1499:170:74;1578:9;:26;;-1:-1:-1;;;;;;1578:26:74;-1:-1:-1;;;;;1578:26:74;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:74;1499:170;:::o;3129:261:73:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:73;-1:-1:-1;;;;;3268:44:73;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;:::-;;;;;;;;3129:261;;:::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1119:455:461:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:461;;38414:2:635;1226:88:461;;;38396:21:635;38453:2;38433:18;;;38426:30;38492:34;38472:18;;;38465:62;-1:-1:-1;;;38543:18:635;;;38536:36;38589:19;;1226:88:461;38212:402:635;1226:88:461;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:461;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:461:o;3698:157:73:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:73;-1:-1:-1;;;3792:8:73;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;1186:320:457:-;-1:-1:-1;;;;;1476:19:457;;:23;;;1186:320::o;19658:672:386:-;19816:4;19863:2;-1:-1:-1;;;;;19836:47:386;;19884:12;:10;:12::i;:::-;19898:4;19904:7;19913:5;19836:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19836:83:386;;;;;;;;-1:-1:-1;;19836:83:386;;;;;;;;;;;;:::i;:::-;;;19832:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20089:13:386;;20085:229;;20134:40;;-1:-1:-1;;;20134:40:386;;;;;;;;;;;20085:229;20274:6;20268:13;20259:6;20255:2;20251:15;20244:38;19832:492;-1:-1:-1;;;;;;19965:66:386;-1:-1:-1;;;19965:66:386;;-1:-1:-1;19832:492:386;19658:672;;;;;;:::o;1568:471:52:-;1630:15;1647:13;1672:25;1700:17;1054:8;:15;;980:96;1700:17;1672:45;;1727:24;1754:8;1727:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:9;1773:224;1797:17;1793:1;:21;1773:224;;;1853:7;1861:1;1853:10;;;;;;;;:::i;:::-;;;;;;;1842:8;:21;1838:149;;;1891:1;1883:9;;1920:7;1928:1;1920:10;;;;;;;;:::i;:::-;;;;;;;1910:20;;1949:23;;;1568:471;;;:::o;1838:149::-;1816:6;1821:1;1816:6;;:::i;:::-;;;1773:224;;;-1:-1:-1;2007:25:52;;-1:-1:-1;;;2007:25:52;;39848:2:635;2007:25:52;;;39830:21:635;39887:2;39867:18;;;39860:30;-1:-1:-1;;;39906:18:635;;;39899:45;39961:18;;2007:25:52;39646:339:635;2153:390:52;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;403:703:462;459:13;676:10;672:51;;-1:-1:-1;;702:10:462;;;;;;;;;;;;-1:-1:-1;;;702:10:462;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:462;;-1:-1:-1;848:2:462;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:462;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:462;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:462;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:462;;;;;;;;-1:-1:-1;1047:11:462;1056:2;1047:11;;:::i;:::-;;;919:150;;678:140:57;771:23;;;;:13;:23;;;;;;;;:40;;;;;;;;:::i;2628:117:52:-;2710:17;;;;:7;:17;;;;;;;;:28;;;;;;;;:::i;1254:592:63:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:63;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:63;;40309:2:635;1548:15:63;;;40291:21:635;40348:1;40328:18;;;40321:29;-1:-1:-1;;;40366:18:635;;;40359:35;40411:18;;1548:15:63;40107:328:635;1516:58:63;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:63;;-1:-1:-1;;;1669:55:63:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:63;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;470:194:211:-;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2137:151:386:-:0;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;2241:40:386::1;2266:5;2273:7;2241:24;:40::i;920:122:86:-:0;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;994:41:86::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;:13:::1;:41::i;:::-;920:122::o:0;898:906:284:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;41520:19:635;;;41555:12;;;41548:28;;;41592:12;;1391:44:284;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;41520:19:635;;;41555:12;;;41548:28;;;41592:12;;1578:44:284;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:284;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:284;;;;;-1:-1:-1;;;;898:906:284:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:459;;12637:231:280:o;11941:573::-;12286:33;12294:12;;12316:1;12286:7;:33::i;:::-;12285:34;:56;;;;-1:-1:-1;;;;;;12323:18:280;;;;12285:56;:76;;;;-1:-1:-1;;;;;;12345:16:280;;;;12285:76;12281:227;;;12382:27;12390:12;;12404:4;12382:7;:27::i;:::-;12381:28;:58;;;;;12414:25;12422:12;;12436:2;12414:7;:25::i;:::-;12413:26;12381:58;12377:121;;;12459:24;;-1:-1:-1;;;12459:24:280;;41817:2:635;12459:24:280;;;41799:21:635;41856:2;41836:18;;;41829:30;-1:-1:-1;;;41875:18:635;;;41868:44;41929:18;;12459:24:280;41615:338:635;2704:570:86;2778:12;512:270;2875:7;;;;:4;:7;:::i;:::-;2900:21;;;;;;;;:::i;:::-;2939:15;;;;2972:25;;;;;;;;:::i;:::-;3031:8;;;;:4;:8;:::i;:::-;3015:26;;;;;;;:::i;:::-;;;;;;;;;3059:13;;;;3090:18;;;;3126:13;;;;;;;;:::i;:::-;3157:27;;;;;;;;:::i;:::-;3202:25;;;;;;;;:::i;:::-;2821:446;;;;;;43218:25:635;;;;-1:-1:-1;;;;;43317:15:635;;;43297:18;;;43290:43;43369:15;;;43349:18;;;43342:43;43401:18;;;43394:34;;;;43465:15;;;43444:19;;;43437:44;43497:19;;;43490:35;;;;43541:19;;;43534:35;43585:19;;;43578:35;43650:15;;;43629:19;;;43622:44;-1:-1:-1;;;;;43741:15:635;;;3245:8:86;43720:19:635;;;43713:44;;;;43794:16;;43773:19;;;43766:45;3245:8:86;;;43827:19:635;;;43820:36;43190:19;;2821:446:86;;;;;;;;;;;;2802:465;;2704:570;;;:::o;3890:176:465:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:464;;-1:-1:-1;;;8710:57:464;;;44627:27:635;44670:11;;;44663:27;;;44706:12;;;44699:28;;;8674:7:464;;44743:12:635;;8710:57:464;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:464;3781:227;-1:-1:-1;;;3781:227:464:o;1565:441:290:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:290;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:290;;1665:47;;-1:-1:-1;;;1722:6:290;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:290;;;;;;;;;-1:-1:-1;;;1747:6:290;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:290;;;;;;;;-1:-1:-1;1777:9:290;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:290;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:290;;;;;;;;-1:-1:-1;1892:1:290;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:290;;1913:55;;;;-1:-1:-1;;;1913:55:290;;44210:2:635;1913:55:290;;;44192:21:635;;;44229:18;;;44222:30;44288:34;44268:18;;;44261:62;44340:18;;1913:55:290;44008:356:635;5036:168:71;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:71;;;;;;;;;;:30;;-1:-1:-1;;5114:30:71;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:71:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:71;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:71;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;508:385:282:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:282;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;:::-;714:173;;;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;10720:1708:386:-;10861:13;;-1:-1:-1;;;;;10888:16:386;;10884:48;;10913:19;;-1:-1:-1;;;10913:19:386;;;;;;;;;;;10884:48;10946:13;10942:44;;10968:18;;-1:-1:-1;;;10968:18:386;;;;;;;;;;;10942:44;10997:61;11027:1;11031:2;11035:12;11049:8;10997:21;:61::i;:::-;-1:-1:-1;;;;;11329:16:386;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11387:49:386;;-1:-1:-1;;;;;11329:44:386;;;;;;;11387:49;;;-1:-1:-1;;;;;;;;;11329:44:386;;;;;;11387:49;;;;;;;;;;;;;;;;11451:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11500:66:386;;;-1:-1:-1;;;11550:15:386;11500:66;;;;;;;;;;;;;11451:25;;11644:23;;;;11686:15;;:13;:15::i;:::-;11682:618;;;11721:308;11751:38;;11776:12;;-1:-1:-1;;;;;11751:38:386;;;11768:1;;-1:-1:-1;;;;;;;;;;;11751:38:386;11768:1;;11751:38;11816:69;11855:1;11859:2;11863:14;;;;;;11879:5;11816:30;:69::i;:::-;11811:172;;11920:40;;-1:-1:-1;;;11920:40:386;;;;;;;;;;;11811:172;12024:3;12009:12;:18;11721:308;;12108:12;12091:13;;:29;12087:43;;12122:8;;;12087:43;11682:618;;;12169:117;12199:40;;12224:14;;;;;-1:-1:-1;;;;;12199:40:386;;;12216:1;;-1:-1:-1;;;;;;;;;;;12199:40:386;12216:1;;12199:40;12281:3;12266:12;:18;12169:117;;11682:618;-1:-1:-1;12313:13:386;:28;12361:60;12390:1;12394:2;12398:12;12412:8;12361:60;:::i;6622:742:457:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:457;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:457;;;;;;;;:::i;10922:127:280:-;10986:4;11009:33;11017:10;;11029:12;:10;:12::i;2840:362:52:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:52;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:52;;-1:-1:-1;3159:36:52;;:16;;:36;;;;:::i;776:69:459:-;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;670:242:211:-;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2294:202:386::0;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;2408:13:386;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2431:17:386;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2644:7:386;2458:13:::1;:31:::0;-1:-1:-1;;2294:202:386:o;2306:147:465:-;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;2408:38:465::1;2432:4;2438:7;2408:23;:38::i;2842:160::-:0;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;47111:25:635;;;47152:18;;;47145:34;;;47195:18;;;47188:34;;;3228:13:465;47238:18:635;;;47231:34;3251:4:465;47281:19:635;;;47274:61;3148:7:465;;47083:19:635;;3184:73:465;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:464;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:464;;-1:-1:-1;2942:35:464;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:464;;44968:2:635;788:34:464;;;44950:21:635;45007:2;44987:18;;;44980:30;-1:-1:-1;;;45026:18:635;;;45019:54;45090:18;;788:34:464;44766:348:635;730:465:464;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:464;;45321:2:635;903:41:464;;;45303:21:635;45360:2;45340:18;;;45333:30;45399:33;45379:18;;;45372:61;45450:18;;903:41:464;45119:355:635;839:356:464;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:464;;45681:2:635;1020:44:464;;;45663:21:635;45720:2;45700:18;;;45693:30;45759:34;45739:18;;;45732:62;-1:-1:-1;;;45810:18:635;;;45803:32;45852:19;;1020:44:464;45479:398:635;961:234:464;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:464;;46084:2:635;1140:44:464;;;46066:21:635;46123:2;46103:18;;;46096:30;46162:34;46142:18;;;46135:62;-1:-1:-1;;;46213:18:635;;;46206:32;46255:19;;1140:44:464;45882:398:635;2532:292:282;2714:12;2732:2;-1:-1:-1;;;;;2732:7:282;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:282;;46697:2:635;2769:48:282;;;46679:21:635;46736:2;46716:18;;;46709:30;-1:-1:-1;;;46755:18:635;;;46748:58;46823:18;;2769:48:282;46495:352:635;2073:396:282;2234:3;-1:-1:-1;;;;;2225:12:282;:5;-1:-1:-1;;;;;2225:12:282;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:282;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:282;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:282;;2432:5;2439:3;2444:7;2397:34;:55::i;2459:297:465:-;4910:13:431;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:431;;;;;;;:::i;:::-;2592:22:465;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:464:-;5315:7;;-1:-1:-1;;;;;6226:79:464;;6222:161;;;-1:-1:-1;6337:1:464;;-1:-1:-1;6341:30:464;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:464;;-1:-1:-1;6450:30:464;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;47573:25:635;;;47646:4;47634:17;;47614:18;;;47607:45;;;;47668:18;;;47661:34;;;47711:18;;;47704:34;;;6603:24:464;;47545:19:635;;6603:24:464;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:464;;-1:-1:-1;;6603:24:464;;;-1:-1:-1;;;;;;;6641:20:464;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:464;;-1:-1:-1;5189:1603:464;;;;;;;;:::o;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;48007:15:635;;;1111:68:228;;;47989:34:635;48059:15;;48039:18;;;48032:43;48091:18;;;48084:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;47924:18:635;;1111:68:228;47749:375:635;3241:706:228;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;48581:2:635;3845:85:228;;;48563:21:635;48620:2;48600:18;;;48593:30;48659:34;48639:18;;;48632:62;-1:-1:-1;;;48710:18:635;;;48703:40;48760:19;;3845:85:228;48379:406:635;3827:223:286;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:286;;49399:2:635;5194:60:286;;;49381:21:635;49438:2;49418:18;;;49411:30;49477:31;49457:18;;;49450:59;49526:18;;5194:60:286;49197:353:635;5194:60:286;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:286;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:286:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:635;-1:-1:-1;;;;;;88:32:635;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:635;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:635;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:635:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:104::-;-1:-1:-1;;;;;1409:31:635;1397:44;;1343:104::o;1660:180::-;1719:6;1772:2;1760:9;1751:7;1747:23;1743:32;1740:52;;;1788:1;1785;1778:12;1740:52;-1:-1:-1;1811:23:635;;1660:180;-1:-1:-1;1660:180:635:o;1845:173::-;1913:20;;-1:-1:-1;;;;;1962:31:635;;1952:42;;1942:70;;2008:1;2005;1998:12;1942:70;1845:173;;;:::o;2023:254::-;2091:6;2099;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2191:29;2210:9;2191:29;:::i;:::-;2181:39;2267:2;2252:18;;;;2239:32;;-1:-1:-1;;;2023:254:635:o;2282:186::-;2341:6;2394:2;2382:9;2373:7;2369:23;2365:32;2362:52;;;2410:1;2407;2400:12;2362:52;2433:29;2452:9;2433:29;:::i;2655:328::-;2732:6;2740;2748;2801:2;2789:9;2780:7;2776:23;2772:32;2769:52;;;2817:1;2814;2807:12;2769:52;2840:29;2859:9;2840:29;:::i;:::-;2830:39;;2888:38;2922:2;2911:9;2907:18;2888:38;:::i;:::-;2878:48;;2973:2;2962:9;2958:18;2945:32;2935:42;;2655:328;;;;;:::o;3355:347::-;3406:8;3416:6;3470:3;3463:4;3455:6;3451:17;3447:27;3437:55;;3488:1;3485;3478:12;3437:55;-1:-1:-1;3511:20:635;;-1:-1:-1;;;;;3543:30:635;;3540:50;;;3586:1;3583;3576:12;3540:50;3623:4;3615:6;3611:17;3599:29;;3675:3;3668:4;3659:6;3651;3647:19;3643:30;3640:39;3637:59;;;3692:1;3689;3682:12;3707:700;3818:6;3826;3834;3887:2;3875:9;3866:7;3862:23;3858:32;3855:52;;;3903:1;3900;3893:12;3855:52;3943:9;3930:23;-1:-1:-1;;;;;4013:2:635;4005:6;4002:14;3999:34;;;4029:1;4026;4019:12;3999:34;4052:22;;;;4108:3;4090:16;;;4086:26;4083:46;;;4125:1;4122;4115:12;4083:46;4148:2;;-1:-1:-1;4203:2:635;4188:18;;4175:32;;4219:16;;;4216:36;;;4248:1;4245;4238:12;4216:36;;4287:60;4339:7;4328:8;4317:9;4313:24;4287:60;:::i;:::-;3707:700;;4366:8;;-1:-1:-1;4261:86:635;;-1:-1:-1;;;;3707:700:635:o;4701:248::-;4769:6;4777;4830:2;4818:9;4809:7;4805:23;4801:32;4798:52;;;4846:1;4843;4836:12;4798:52;-1:-1:-1;;4869:23:635;;;4939:2;4924:18;;;4911:32;;-1:-1:-1;4701:248:635:o;4954:274::-;-1:-1:-1;;;;;5146:32:635;;;;5128:51;;5210:2;5195:18;;5188:34;5116:2;5101:18;;4954:274::o;5233:254::-;5301:6;5309;5362:2;5350:9;5341:7;5337:23;5333:32;5330:52;;;5378:1;5375;5368:12;5330:52;5414:9;5401:23;5391:33;;5443:38;5477:2;5466:9;5462:18;5443:38;:::i;:::-;5433:48;;5233:254;;;;;:::o;5782:162::-;5849:5;5894:2;5885:6;5880:3;5876:16;5872:25;5869:45;;;5910:1;5907;5900:12;5949:127;6010:10;6005:3;6001:20;5998:1;5991:31;6041:4;6038:1;6031:15;6065:4;6062:1;6055:15;6081:275;6152:2;6146:9;6217:2;6198:13;;-1:-1:-1;;6194:27:635;6182:40;;-1:-1:-1;;;;;6237:34:635;;6273:22;;;6234:62;6231:88;;;6299:18;;:::i;:::-;6335:2;6328:22;6081:275;;-1:-1:-1;6081:275:635:o;6361:186::-;6409:4;-1:-1:-1;;;;;6434:6:635;6431:30;6428:56;;;6464:18;;:::i;:::-;-1:-1:-1;6530:2:635;6509:15;-1:-1:-1;;6505:29:635;6536:4;6501:40;;6361:186::o;6552:462::-;6594:5;6647:3;6640:4;6632:6;6628:17;6624:27;6614:55;;6665:1;6662;6655:12;6614:55;6701:6;6688:20;6732:48;6748:31;6776:2;6748:31;:::i;:::-;6732:48;:::i;:::-;6805:2;6796:7;6789:19;6851:3;6844:4;6839:2;6831:6;6827:15;6823:26;6820:35;6817:55;;;6868:1;6865;6858:12;6817:55;6933:2;6926:4;6918:6;6914:17;6907:4;6898:7;6894:18;6881:55;6981:1;6956:16;;;6974:4;6952:27;6945:38;;;;6960:7;6552:462;-1:-1:-1;;;6552:462:635:o;7019:877::-;7167:6;7175;7183;7191;7199;7207;7260:3;7248:9;7239:7;7235:23;7231:33;7228:53;;;7277:1;7274;7267:12;7228:53;7300:29;7319:9;7300:29;:::i;:::-;7290:39;;7376:2;7365:9;7361:18;7348:32;7338:42;;7399:38;7433:2;7422:9;7418:18;7399:38;:::i;:::-;7389:48;;7484:2;7473:9;7469:18;7456:32;7446:42;;7539:3;7528:9;7524:19;7511:33;-1:-1:-1;;;;;7604:2:635;7596:6;7593:14;7590:34;;;7620:1;7617;7610:12;7590:34;7643:74;7709:7;7700:6;7689:9;7685:22;7643:74;:::i;:::-;7633:84;;7770:3;7759:9;7755:19;7742:33;7726:49;;7800:2;7790:8;7787:16;7784:36;;;7816:1;7813;7806:12;7784:36;;7839:51;7882:7;7871:8;7860:9;7856:24;7839:51;:::i;:::-;7829:61;;;7019:877;;;;;;;;:::o;7901:118::-;7987:5;7980:13;7973:21;7966:5;7963:32;7953:60;;8009:1;8006;7999:12;8024:414;8124:6;8132;8176:9;8167:7;8163:23;8206:3;8202:2;8198:12;8195:32;;;8223:1;8220;8213:12;8195:32;8246:3;8269:2;8265;8261:11;8258:31;;;8285:1;8282;8275:12;8258:31;8308:9;;-1:-1:-1;8352:18:635;;8339:32;;-1:-1:-1;8380:28:635;8339:32;8380:28;:::i;:::-;8427:5;8417:15;;;8024:414;;;;;:::o;8696:321::-;8765:6;8818:2;8806:9;8797:7;8793:23;8789:32;8786:52;;;8834:1;8831;8824:12;8786:52;8874:9;8861:23;-1:-1:-1;;;;;8899:6:635;8896:30;8893:50;;;8939:1;8936;8929:12;8893:50;8962:49;9003:7;8994:6;8983:9;8979:22;8962:49;:::i;9022:322::-;9099:6;9107;9115;9168:2;9156:9;9147:7;9143:23;9139:32;9136:52;;;9184:1;9181;9174:12;9136:52;9220:9;9207:23;9197:33;;9249:38;9283:2;9272:9;9268:18;9249:38;:::i;9349:477::-;9428:6;9436;9444;9497:2;9485:9;9476:7;9472:23;9468:32;9465:52;;;9513:1;9510;9503:12;9465:52;9549:9;9536:23;9526:33;;9610:2;9599:9;9595:18;9582:32;-1:-1:-1;;;;;9629:6:635;9626:30;9623:50;;;9669:1;9666;9659:12;9623:50;9708:58;9758:7;9749:6;9738:9;9734:22;9708:58;:::i;10243:315::-;10308:6;10316;10369:2;10357:9;10348:7;10344:23;10340:32;10337:52;;;10385:1;10382;10375:12;10337:52;10408:29;10427:9;10408:29;:::i;:::-;10398:39;;10487:2;10476:9;10472:18;10459:32;10500:28;10522:5;10500:28;:::i;10563:527::-;10655:6;10663;10671;10679;10687;10740:3;10728:9;10719:7;10715:23;10711:33;10708:53;;;10757:1;10754;10747:12;10708:53;10780:29;10799:9;10780:29;:::i;:::-;10770:39;;10856:2;10845:9;10841:18;10828:32;10818:42;;10879:38;10913:2;10902:9;10898:18;10879:38;:::i;:::-;10869:48;;10964:2;10953:9;10949:18;10936:32;10926:42;;11018:3;11007:9;11003:19;10990:33;11032:28;11054:5;11032:28;:::i;:::-;11079:5;11069:15;;;10563:527;;;;;;;;:::o;11095:626::-;11192:6;11200;11253:2;11241:9;11232:7;11228:23;11224:32;11221:52;;;11269:1;11266;11259:12;11221:52;11309:9;11296:23;-1:-1:-1;;;;;11379:2:635;11371:6;11368:14;11365:34;;;11395:1;11392;11385:12;11365:34;11433:6;11422:9;11418:22;11408:32;;11478:7;11471:4;11467:2;11463:13;11459:27;11449:55;;11500:1;11497;11490:12;11449:55;11540:2;11527:16;11566:2;11558:6;11555:14;11552:34;;;11582:1;11579;11572:12;11552:34;11635:7;11630:2;11620:6;11617:1;11613:14;11609:2;11605:23;11601:32;11598:45;11595:65;;;11656:1;11653;11646:12;11595:65;11687:2;11679:11;;;;;11709:6;;-1:-1:-1;11095:626:635;;-1:-1:-1;;;;11095:626:635:o;11726:801::-;11886:4;11915:2;11955;11944:9;11940:18;11985:2;11974:9;11967:21;12008:6;12043;12037:13;12074:6;12066;12059:22;12112:2;12101:9;12097:18;12090:25;;12174:2;12164:6;12161:1;12157:14;12146:9;12142:30;12138:39;12124:53;;12212:2;12204:6;12200:15;12233:1;12243:255;12257:6;12254:1;12251:13;12243:255;;;12350:2;12346:7;12334:9;12326:6;12322:22;12318:36;12313:3;12306:49;12378:40;12411:6;12402;12396:13;12378:40;:::i;:::-;12368:50;-1:-1:-1;12476:12:635;;;;12441:15;;;;12279:1;12272:9;12243:255;;;-1:-1:-1;12515:6:635;;11726:801;-1:-1:-1;;;;;;;11726:801:635:o;12785:277::-;12865:6;12918:2;12906:9;12897:7;12893:23;12889:32;12886:52;;;12934:1;12931;12924:12;12886:52;12973:9;12960:23;13012:1;13005:5;13002:12;12992:40;;13028:1;13025;13018:12;13067:537;13162:6;13170;13178;13186;13239:3;13227:9;13218:7;13214:23;13210:33;13207:53;;;13256:1;13253;13246:12;13207:53;13279:29;13298:9;13279:29;:::i;:::-;13269:39;;13327:38;13361:2;13350:9;13346:18;13327:38;:::i;:::-;13317:48;;13412:2;13401:9;13397:18;13384:32;13374:42;;13467:2;13456:9;13452:18;13439:32;-1:-1:-1;;;;;13486:6:635;13483:30;13480:50;;;13526:1;13523;13516:12;13480:50;13549:49;13590:7;13581:6;13570:9;13566:22;13549:49;:::i;:::-;13539:59;;;13067:537;;;;;;;:::o;13609:786::-;13709:6;13717;13725;13733;13741;13794:2;13782:9;13773:7;13769:23;13765:32;13762:52;;;13810:1;13807;13800:12;13762:52;13846:9;13833:23;13823:33;;13907:2;13896:9;13892:18;13879:32;-1:-1:-1;;;;;13971:2:635;13963:6;13960:14;13957:34;;;13987:1;13984;13977:12;13957:34;14026:58;14076:7;14067:6;14056:9;14052:22;14026:58;:::i;:::-;14103:8;;-1:-1:-1;14000:84:635;-1:-1:-1;14191:2:635;14176:18;;14163:32;;-1:-1:-1;14207:16:635;;;14204:36;;;14236:1;14233;14226:12;14204:36;;14275:60;14327:7;14316:8;14305:9;14301:24;14275:60;:::i;:::-;13609:786;;;;-1:-1:-1;13609:786:635;;-1:-1:-1;14354:8:635;;14249:86;13609:786;-1:-1:-1;;;13609:786:635:o;15110:718::-;15164:5;15217:3;15210:4;15202:6;15198:17;15194:27;15184:55;;15235:1;15232;15225:12;15184:55;15271:6;15258:20;15297:4;-1:-1:-1;;;;;15316:2:635;15313:26;15310:52;;;15342:18;;:::i;:::-;15388:2;15385:1;15381:10;15411:28;15435:2;15431;15427:11;15411:28;:::i;:::-;15473:15;;;15543;;;15539:24;;;15504:12;;;;15575:15;;;15572:35;;;15603:1;15600;15593:12;15572:35;15639:2;15631:6;15627:15;15616:26;;15651:148;15667:6;15662:3;15659:15;15651:148;;;15733:23;15752:3;15733:23;:::i;:::-;15721:36;;15684:12;;;;15777;;;;15651:148;;15833:173;15901:20;;-1:-1:-1;;;;;15950:31:635;;15940:42;;15930:70;;15996:1;15993;15986:12;16011:1417;16206:6;16214;16222;16230;16238;16246;16254;16262;16270;16278;16331:3;16319:9;16310:7;16306:23;16302:33;16299:53;;;16348:1;16345;16338:12;16299:53;16371:29;16390:9;16371:29;:::i;:::-;16361:39;;16451:2;16440:9;16436:18;16423:32;-1:-1:-1;;;;;16515:2:635;16507:6;16504:14;16501:34;;;16531:1;16528;16521:12;16501:34;16554:49;16595:7;16586:6;16575:9;16571:22;16554:49;:::i;:::-;16544:59;;16656:2;16645:9;16641:18;16628:32;16612:48;;16685:2;16675:8;16672:16;16669:36;;;16701:1;16698;16691:12;16669:36;16724:51;16767:7;16756:8;16745:9;16741:24;16724:51;:::i;:::-;16714:61;;16828:2;16817:9;16813:18;16800:32;16784:48;;16857:2;16847:8;16844:16;16841:36;;;16873:1;16870;16863:12;16841:36;16896:51;16939:7;16928:8;16917:9;16913:24;16896:51;:::i;:::-;16886:61;;17000:3;16989:9;16985:19;16972:33;16956:49;;17030:2;17020:8;17017:16;17014:36;;;17046:1;17043;17036:12;17014:36;;17069:63;17124:7;17113:8;17102:9;17098:24;17069:63;:::i;:::-;17059:73;;;17151:39;17185:3;17174:9;17170:19;17151:39;:::i;:::-;17141:49;;17209:39;17243:3;17232:9;17228:19;17209:39;:::i;:::-;17199:49;;17267:39;17301:3;17290:9;17286:19;17267:39;:::i;:::-;17257:49;;17325:39;17359:3;17348:9;17344:19;17325:39;:::i;:::-;17315:49;;17383:39;17417:3;17406:9;17402:19;17383:39;:::i;:::-;17373:49;;16011:1417;;;;;;;;;;;;;:::o;17433:628::-;17521:6;17529;17537;17590:2;17578:9;17569:7;17565:23;17561:32;17558:52;;;17606:1;17603;17596:12;17558:52;17646:9;17633:23;-1:-1:-1;;;;;17716:2:635;17708:6;17705:14;17702:34;;;17732:1;17729;17722:12;17702:34;17755:49;17796:7;17787:6;17776:9;17772:22;17755:49;:::i;:::-;17745:59;;17857:2;17846:9;17842:18;17829:32;17813:48;;17886:2;17876:8;17873:16;17870:36;;;17902:1;17899;17892:12;18066:260;18134:6;18142;18195:2;18183:9;18174:7;18170:23;18166:32;18163:52;;;18211:1;18208;18201:12;18163:52;18234:29;18253:9;18234:29;:::i;:::-;18224:39;;18282:38;18316:2;18305:9;18301:18;18282:38;:::i;18331:127::-;18392:10;18387:3;18383:20;18380:1;18373:31;18423:4;18420:1;18413:15;18447:4;18444:1;18437:15;18463:349;18616:2;18601:18;;18649:1;18638:13;;18628:144;;18694:10;18689:3;18685:20;18682:1;18675:31;18729:4;18726:1;18719:15;18757:4;18754:1;18747:15;18628:144;18781:25;;;18463:349;:::o;18817:513::-;18929:6;18937;18945;18998:2;18986:9;18977:7;18973:23;18969:32;18966:52;;;19014:1;19011;19004:12;18966:52;19037:29;19056:9;19037:29;:::i;:::-;19027:39;;19113:2;19102:9;19098:18;19085:32;19075:42;;19168:2;19157:9;19153:18;19140:32;-1:-1:-1;;;;;19187:6:635;19184:30;19181:50;;;19227:1;19224;19217:12;19181:50;19250:74;19316:7;19307:6;19296:9;19292:22;19250:74;:::i;:::-;19240:84;;;18817:513;;;;;:::o;19598:380::-;19677:1;19673:12;;;;19720;;;19741:61;;19795:4;19787:6;19783:17;19773:27;;19741:61;19848:2;19840:6;19837:14;19817:18;19814:38;19811:161;;;19894:10;19889:3;19885:20;19882:1;19875:31;19929:4;19926:1;19919:15;19957:4;19954:1;19947:15;19983:338;20185:2;20167:21;;;20224:2;20204:18;;;20197:30;-1:-1:-1;;;20258:2:635;20243:18;;20236:44;20312:2;20297:18;;19983:338::o;20668:127::-;20729:10;20724:3;20720:20;20717:1;20710:31;20760:4;20757:1;20750:15;20784:4;20781:1;20774:15;20800:127;20861:10;20856:3;20852:20;20849:1;20842:31;20892:4;20889:1;20882:15;20916:4;20913:1;20906:15;20932:168;20972:7;21038:1;21034;21030:6;21026:14;21023:1;21020:21;21015:1;21008:9;21001:17;20997:45;20994:71;;;21045:18;;:::i;:::-;-1:-1:-1;21085:9:635;;20932:168::o;21105:127::-;21166:10;21161:3;21157:20;21154:1;21147:31;21197:4;21194:1;21187:15;21221:4;21218:1;21211:15;21237:120;21277:1;21303;21293:35;;21308:18;;:::i;:::-;-1:-1:-1;21342:9:635;;21237:120::o;22075:128::-;22115:3;22146:1;22142:6;22139:1;22136:13;22133:39;;;22152:18;;:::i;:::-;-1:-1:-1;22188:9:635;;22075:128::o;22208:341::-;22410:2;22392:21;;;22449:2;22429:18;;;22422:30;-1:-1:-1;;;22483:2:635;22468:18;;22461:47;22540:2;22525:18;;22208:341::o;22554:504::-;22613:5;22620:6;22680:3;22667:17;22766:2;22762:7;22751:8;22735:14;22731:29;22727:43;22707:18;22703:68;22693:96;;22785:1;22782;22775:12;22693:96;22813:33;;22917:4;22904:18;;;-1:-1:-1;22865:21:635;;-1:-1:-1;;;;;;22934:30:635;;22931:50;;;22977:1;22974;22967:12;22931:50;23027:6;23011:14;23007:27;22997:8;22993:42;22990:62;;;23048:1;23045;23038:12;23063:267;23152:6;23147:3;23140:19;23204:6;23197:5;23190:4;23185:3;23181:14;23168:43;-1:-1:-1;23256:1:635;23231:16;;;23249:4;23227:27;;;23220:38;;;;23312:2;23291:15;;;-1:-1:-1;;23287:29:635;23278:39;;;23274:50;;23063:267::o;23444:1542::-;23635:2;23624:9;23617:21;23647:66;23709:2;23698:9;23694:18;23666:26;23685:6;23666:26;:::i;:::-;23647:66;:::i;:::-;23598:4;23742:35;23773:2;23765:6;23761:15;23742:35;:::i;:::-;23786:52;23834:2;23823:9;23819:18;23805:12;23786:52;:::i;:::-;;23899:2;23891:6;23887:15;23874:29;23869:2;23858:9;23854:18;23847:57;23935:35;23966:2;23958:6;23954:15;23935:35;:::i;:::-;23979:55;24029:3;24018:9;24014:19;23998:14;23979:55;:::i;:::-;;24079:57;24131:3;24123:6;24119:16;24111:6;24079:57;:::i;:::-;24155:6;24198:2;24192:3;24181:9;24177:19;24170:31;24224:77;24296:3;24285:9;24281:19;24267:12;24251:14;24224:77;:::i;:::-;24210:91;;24363:3;24355:6;24351:16;24338:30;24332:3;24321:9;24317:19;24310:59;24431:3;24423:6;24419:16;24406:30;24400:3;24389:9;24385:19;24378:59;24468:36;24499:3;24491:6;24487:16;24468:36;:::i;:::-;24446:58;;24523:3;24535:54;24585:2;24574:9;24570:18;24554:14;24535:54;:::i;:::-;24620:35;24651:2;24643:6;24639:15;24620:35;:::i;:::-;24598:57;;;24674:3;24686:54;24736:2;24725:9;24721:18;24705:14;-1:-1:-1;;;;;23401:31:635;23389:44;;23335:104;24686:54;24771:35;24802:2;24794:6;24790:15;24771:35;:::i;:::-;24749:57;;;24825:3;24837:54;24887:2;24876:9;24872:18;24856:14;-1:-1:-1;;;;;23401:31:635;23389:44;;23335:104;24837:54;24940:15;;;;24927:29;24907:18;;;;24900:57;;;;-1:-1:-1;24974:6:635;23444:1542;-1:-1:-1;23444:1542:635:o;24991:286::-;25193:2;25164:15;;;;-1:-1:-1;;;;;;25160:45:635;25148:58;;25231:2;25222:12;;25215:28;25268:2;25259:12;;24991:286::o;25629:864::-;25884:20;;25866:39;;25968:4;25956:17;;;25943:31;25921:20;;;25914:61;26038:4;26026:17;;;26013:31;25991:20;;;25984:61;26108:4;26096:17;;;26083:31;26061:20;;;26054:61;26178:4;26166:17;;;26153:31;26131:20;;;26124:61;26248:4;26236:17;;;26223:31;26201:20;;;26194:61;26318:4;26306:17;;;26293:31;26271:20;;;26264:61;25853:3;25838:19;;-1:-1:-1;;;;;26367:37:635;26398:4;26386:17;;26367:37;:::i;:::-;26363:63;26356:4;26341:20;;26334:93;26471:14;;26464:22;26458:3;26443:19;;;26436:51;25629:864;;-1:-1:-1;25629:864:635:o;26844:703::-;26932:6;26940;26993:2;26981:9;26972:7;26968:23;26964:32;26961:52;;;27009:1;27006;26999:12;26961:52;27042:9;27036:16;-1:-1:-1;;;;;27067:6:635;27064:30;27061:50;;;27107:1;27104;27097:12;27061:50;27130:22;;27183:4;27175:13;;27171:27;-1:-1:-1;27161:55:635;;27212:1;27209;27202:12;27161:55;27241:2;27235:9;27266:48;27282:31;27310:2;27282:31;:::i;27266:48::-;27337:2;27330:5;27323:17;27379:7;27372:4;27367:2;27363;27359:11;27355:22;27352:35;27349:55;;;27400:1;27397;27390:12;27349:55;27413:58;27468:2;27461:4;27454:5;27450:16;27443:4;27439:2;27435:13;27413:58;:::i;:::-;27535:4;27520:20;;;;27514:27;27490:5;;27514:27;;-1:-1:-1;;;;;26844:703:635:o;27552:525::-;27767:3;27805:6;27799:13;27821:53;27867:6;27862:3;27855:4;27847:6;27843:17;27821:53;:::i;:::-;27896:16;;27949:6;27941;27896:16;27921:35;27975:18;;;28024;;;-1:-1:-1;28066:4:635;28058:13;;27552:525;-1:-1:-1;;;27552:525:635:o;29813:521::-;29890:4;29896:6;29956:11;29943:25;30050:2;30046:7;30035:8;30019:14;30015:29;30011:43;29991:18;29987:68;29977:96;;30069:1;30066;30059:12;29977:96;30096:33;;30148:20;;;-1:-1:-1;;;;;;30180:30:635;;30177:50;;;30223:1;30220;30213:12;30177:50;30256:4;30244:17;;-1:-1:-1;30287:14:635;30283:27;;;30273:38;;30270:58;;;30324:1;30321;30314:12;30339:135;30378:3;-1:-1:-1;;30399:17:635;;30396:43;;;30419:18;;:::i;:::-;-1:-1:-1;30466:1:635;30455:13;;30339:135::o;30479:439::-;30711:3;30749:6;30743:13;30765:53;30811:6;30806:3;30799:4;30791:6;30787:17;30765:53;:::i;:::-;-1:-1:-1;;;30840:16:635;;30865:18;;;-1:-1:-1;30910:1:635;30899:13;;30479:439;-1:-1:-1;30479:439:635:o;30923:470::-;31102:3;31140:6;31134:13;31156:53;31202:6;31197:3;31190:4;31182:6;31178:17;31156:53;:::i;:::-;31272:13;;31231:16;;;;31294:57;31272:13;31231:16;31328:4;31316:17;;31294:57;:::i;:::-;31367:20;;30923:470;-1:-1:-1;;;;30923:470:635:o;31398:388::-;31475:6;31483;31536:2;31524:9;31515:7;31511:23;31507:32;31504:52;;;31552:1;31549;31542:12;31504:52;31592:9;31579:23;-1:-1:-1;;;;;31617:6:635;31614:30;31611:50;;;31657:1;31654;31647:12;31611:50;31680:49;31721:7;31712:6;31701:9;31697:22;31680:49;:::i;:::-;31670:59;31776:2;31761:18;;;;31748:32;;-1:-1:-1;;;;31398:388:635:o;32405:335::-;32616:6;32608;32603:3;32590:33;32642:16;;;32689:18;;;32731:2;32723:11;;32405:335;-1:-1:-1;32405:335:635:o;32745:545::-;32838:4;32844:6;32904:11;32891:25;32998:2;32994:7;32983:8;32967:14;32963:29;32959:43;32939:18;32935:68;32925:96;;33017:1;33014;33007:12;32925:96;33044:33;;33096:20;;;-1:-1:-1;;;;;;33128:30:635;;33125:50;;;33171:1;33168;33161:12;33125:50;33204:4;33192:17;;-1:-1:-1;33255:1:635;33251:14;;;33235;33231:35;33221:46;;33218:66;;;33280:1;33277;33270:12;34328:339;34530:2;34512:21;;;34569:2;34549:18;;;34542:30;-1:-1:-1;;;34603:2:635;34588:18;;34581:45;34658:2;34643:18;;34328:339::o;34672:784::-;-1:-1:-1;;;35078:3:635;35071:36;35053:3;35136:6;35130:13;35152:62;35207:6;35202:2;35197:3;35193:12;35186:4;35178:6;35174:17;35152:62;:::i;:::-;-1:-1:-1;;;35273:2:635;35233:16;;;35265:11;;;35258:40;35323:13;;35345:63;35323:13;35394:2;35386:11;;35379:4;35367:17;;35345:63;:::i;:::-;35428:17;35447:2;35424:26;;34672:784;-1:-1:-1;;;;34672:784:635:o;35801:186::-;35860:6;35913:2;35901:9;35892:7;35888:23;35884:32;35881:52;;;35929:1;35926;35919:12;35881:52;35952:29;35971:9;35952:29;:::i;37363:125::-;37403:4;37431:1;37428;37425:8;37422:34;;;37436:18;;:::i;:::-;-1:-1:-1;37473:9:635;;37363:125::o;37824:383::-;38021:2;38010:9;38003:21;37984:4;38047:45;38088:2;38077:9;38073:18;38065:6;38047:45;:::i;:::-;38140:9;38132:6;38128:22;38123:2;38112:9;38108:18;38101:50;38168:33;38194:6;38186;38168:33;:::i;38619:274::-;38748:3;38786:6;38780:13;38802:53;38848:6;38843:3;38836:4;38828:6;38824:17;38802:53;:::i;:::-;38871:16;;;;;38619:274;-1:-1:-1;;38619:274:635:o;38898:489::-;-1:-1:-1;;;;;39167:15:635;;;39149:34;;39219:15;;39214:2;39199:18;;39192:43;39266:2;39251:18;;39244:34;;;39314:3;39309:2;39294:18;;39287:31;;;39092:4;;39335:46;;39361:19;;39353:6;39335:46;:::i;39392:249::-;39461:6;39514:2;39502:9;39493:7;39489:23;39485:32;39482:52;;;39530:1;39527;39520:12;39482:52;39562:9;39556:16;39581:30;39605:5;39581:30;:::i;39990:112::-;40022:1;40048;40038:35;;40053:18;;:::i;:::-;-1:-1:-1;40087:9:635;;39990:112::o;40440:506::-;40683:6;40672:9;40665:25;40726:2;40721;40710:9;40706:18;40699:30;40646:4;40752:62;40810:2;40799:9;40795:18;40787:6;40779;40752:62;:::i;:::-;40862:9;40854:6;40850:22;40845:2;40834:9;40830:18;40823:50;40890;40933:6;40925;40917;40890:50;:::i;:::-;40882:58;40440:506;-1:-1:-1;;;;;;;;40440:506:635:o;40951:407::-;41153:2;41135:21;;;41192:2;41172:18;;;41165:30;41231:34;41226:2;41211:18;;41204:62;-1:-1:-1;;;41297:2:635;41282:18;;41275:41;41348:3;41333:19;;40951:407::o;42485:271::-;42668:6;42660;42655:3;42642:33;42624:3;42694:16;;42719:13;;;42694:16;42485:271;-1:-1:-1;42485:271:635:o;43867:136::-;43906:3;43934:5;43924:39;;43943:18;;:::i;:::-;-1:-1:-1;;;43979:18:635;;43867:136::o;48129:245::-;48196:6;48249:2;48237:9;48228:7;48224:23;48220:32;48217:52;;;48265:1;48262;48255:12;48217:52;48297:9;48291:16;48316:28;48338:5;48316:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)": "5ab31c1a",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimTimestamp(address)": "b67875ce",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": "77312a9e",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8",
    "verifyClaim(address,uint256,address,uint256,bool)": "a72e157d",
    "verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))": "ffbb7a13"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase_V1.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getClaimTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastClaimedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextValidClaimTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"_condition\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verifyMaxQuantityPerTransaction\",\"type\":\"bool\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase_V1.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaimMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validMerkleProof\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"merkleProofIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimTimestamp(address)\":{\"details\":\"Returns the timestamp for when a claimer is eligible for claiming NFTs again.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Claim lazy minted tokens via signature.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"},\"verifyClaim(address,uint256,address,uint256,bool)\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"},\"verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))\":{\"details\":\"Checks whether a claimer meets the claim condition's allowlist criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol\":\"SignatureDrop_V4\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3\",\"dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/legacy-contracts/extension/DropSinglePhase_V1.sol\":{\"keccak256\":\"0x103c89f6e6dede91314aaaa6aed7f478fa171d9dad972b8aec5714cd283f1e8a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://13cc833b2f8cd79c87b70e8d64d96047b4bf1b206e3411c7a4c60ee3e37d6db5\",\"dweb:/ipfs/QmSNwjT5CgfYEqBFkChvzuLsCHeZCKuZfXoJe5nnHovZSD\"]},\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xefda04c42de68c62e57e19db6c929679d7fb89fbfaeae98a93278f9b93a7d651\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce3603332ad74f237ae18c7b625a6318ec94dd46eb786232eaf5908d4217fcba\",\"dweb:/ipfs/QmZ5PnDFqCHDXkkmqASuFn6okMup1BJHdsL4DAvs5VuezV\"]},\"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol\":{\"keccak256\":\"0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717\",\"dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn\"]},\"contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol\":{\"keccak256\":\"0xed53fe5d2d8f6f21d3aa058da29ce595d1f47b341b039709462e5d68bd93f047\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef3965a82a8dab61ea6433acee465112ea9148b28c45f700fc42680d442037be\",\"dweb:/ipfs/QmSfmYLRyrj2mHuVHxWsbPnVvCkLZXTpKSHk4jDZntUmDw\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWBitMaps.sol\":{\"keccak256\":\"0x37d6bd1977f04901c1979a3a2652b39e37cbe0c2f112d820d3363ba037f0923f\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://1c442a955a1969fe7be2eca1894521910a11ddd192ccf34eb97a6ec76546f78d\",\"dweb:/ipfs/QmRtpJX4nYds6rWq47BsoTbAeg8kcT51WQ7ecysGo1JpHo\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4\",\"dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "maxQuantityInAllowlist",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastClaimedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextValidClaimTimestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "_condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verifyMaxQuantityPerTransaction",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "maxQuantityInAllowlist",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaimMerkleProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "validMerkleProof",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "merkleProofIndex",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimTimestamp(address)": {
            "details": "Returns the timestamp for when a claimer is eligible for claiming NFTs again."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Claim lazy minted tokens via signature."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          },
          "verifyClaim(address,uint256,address,uint256,bool)": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          },
          "verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))": {
            "details": "Checks whether a claimer meets the claim condition's allowlist criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol": "SignatureDrop_V4"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3",
        "urls": [
          "bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3",
          "dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/DropSinglePhase_V1.sol": {
        "keccak256": "0x103c89f6e6dede91314aaaa6aed7f478fa171d9dad972b8aec5714cd283f1e8a",
        "urls": [
          "bzz-raw://13cc833b2f8cd79c87b70e8d64d96047b4bf1b206e3411c7a4c60ee3e37d6db5",
          "dweb:/ipfs/QmSNwjT5CgfYEqBFkChvzuLsCHeZCKuZfXoJe5nnHovZSD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol": {
        "keccak256": "0xefda04c42de68c62e57e19db6c929679d7fb89fbfaeae98a93278f9b93a7d651",
        "urls": [
          "bzz-raw://ce3603332ad74f237ae18c7b625a6318ec94dd46eb786232eaf5908d4217fcba",
          "dweb:/ipfs/QmZ5PnDFqCHDXkkmqASuFn6okMup1BJHdsL4DAvs5VuezV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol": {
        "keccak256": "0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7",
        "urls": [
          "bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717",
          "dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol": {
        "keccak256": "0xed53fe5d2d8f6f21d3aa058da29ce595d1f47b341b039709462e5d68bd93f047",
        "urls": [
          "bzz-raw://ef3965a82a8dab61ea6433acee465112ea9148b28c45f700fc42680d442037be",
          "dweb:/ipfs/QmSfmYLRyrj2mHuVHxWsbPnVvCkLZXTpKSHk4jDZntUmDw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWBitMaps.sol": {
        "keccak256": "0x37d6bd1977f04901c1979a3a2652b39e37cbe0c2f112d820d3363ba037f0923f",
        "urls": [
          "bzz-raw://1c442a955a1969fe7be2eca1894521910a11ddd192ccf34eb97a6ec76546f78d",
          "dweb:/ipfs/QmRtpJX4nYds6rWq47BsoTbAeg8kcT51WQ7ecysGo1JpHo"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol": {
        "keccak256": "0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2",
        "urls": [
          "bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4",
          "dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol",
    "id": 63170,
    "exportedSymbols": {
      "AddressUpgradeable": [
        156343
      ],
      "BatchMintMetadata": [
        18037
      ],
      "ContextUpgradeable": [
        156619
      ],
      "ContractMetadata": [
        18264
      ],
      "CurrencyTransferLib": [
        63443
      ],
      "DelayedReveal": [
        18503
      ],
      "DropSinglePhase_V1": [
        56882
      ],
      "ECDSAUpgradeable": [
        157630
      ],
      "EIP712Upgradeable": [
        157780
      ],
      "ERC165Upgradeable": [
        157824
      ],
      "ERC2771ContextUpgradeable": [
        46170
      ],
      "ERC721AUpgradeable": [
        102860
      ],
      "IClaimCondition_V1": [
        56904
      ],
      "IContractMetadata": [
        33216
      ],
      "IDelayedReveal": [
        33247
      ],
      "IDropSinglePhase_V1": [
        57024
      ],
      "IERC165": [
        14687
      ],
      "IERC165Upgradeable": [
        157836
      ],
      "IERC20": [
        14757
      ],
      "IERC2981": [
        14831
      ],
      "IERC2981Upgradeable": [
        150623
      ],
      "IERC721AUpgradeable": [
        102931
      ],
      "IERC721MetadataUpgradeable": [
        156053
      ],
      "IERC721ReceiverUpgradeable": [
        155521
      ],
      "IERC721Upgradeable": [
        155637
      ],
      "ILazyMint": [
        33591
      ],
      "IOwnable": [
        33955
      ],
      "IPermissions": [
        34028
      ],
      "IPermissionsEnumerable": [
        34053
      ],
      "IPlatformFee": [
        34096
      ],
      "IPrimarySale": [
        34117
      ],
      "IRoyalty": [
        34181
      ],
      "ISignatureMintERC721": [
        34675
      ],
      "IWETH": [
        55120
      ],
      "Initializable": [
        150774
      ],
      "LazyMint": [
        21079
      ],
      "MerkleProof": [
        63543
      ],
      "MulticallUpgradeable": [
        156802
      ],
      "Ownable": [
        21941
      ],
      "Permissions": [
        22288
      ],
      "PermissionsEnumerable": [
        22587
      ],
      "PlatformFee": [
        22793
      ],
      "PrimarySale": [
        22855
      ],
      "Royalty": [
        23183
      ],
      "SafeERC20": [
        48932
      ],
      "SignatureDrop_V4": [
        63169
      ],
      "SignatureMintERC721Upgradeable": [
        24931
      ],
      "StringsUpgradeable": [
        157028
      ],
      "TWAddress": [
        64017
      ],
      "TWBitMaps": [
        64155
      ],
      "TWStrings": [
        64717
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13065:280",
    "nodes": [
      {
        "id": 62327,
        "nodeType": "PragmaDirective",
        "src": "39:24:280",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 62328,
        "nodeType": "ImportDirective",
        "src": "135:76:280",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 156803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62329,
        "nodeType": "ImportDirective",
        "src": "212:74:280",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 157029,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62330,
        "nodeType": "ImportDirective",
        "src": "287:80:280",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 150624,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62331,
        "nodeType": "ImportDirective",
        "src": "369:62:280",
        "nodes": [],
        "absolutePath": "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol",
        "file": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 102861,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62332,
        "nodeType": "ImportDirective",
        "src": "481:79:280",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 46171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62333,
        "nodeType": "ImportDirective",
        "src": "561:43:280",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 63444,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62334,
        "nodeType": "ImportDirective",
        "src": "646:46:280",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 18265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62335,
        "nodeType": "ImportDirective",
        "src": "693:41:280",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 22794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62336,
        "nodeType": "ImportDirective",
        "src": "735:37:280",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 23184,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62337,
        "nodeType": "ImportDirective",
        "src": "773:41:280",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 22856,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62338,
        "nodeType": "ImportDirective",
        "src": "815:37:280",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 21942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62339,
        "nodeType": "ImportDirective",
        "src": "853:43:280",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 18504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62340,
        "nodeType": "ImportDirective",
        "src": "897:38:280",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 21080,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62341,
        "nodeType": "ImportDirective",
        "src": "936:51:280",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 22588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62342,
        "nodeType": "ImportDirective",
        "src": "988:45:280",
        "nodes": [],
        "absolutePath": "contracts/legacy-contracts/extension/DropSinglePhase_V1.sol",
        "file": "../extension/DropSinglePhase_V1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 56883,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62343,
        "nodeType": "ImportDirective",
        "src": "1034:60:280",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63170,
        "sourceUnit": 24932,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63169,
        "nodeType": "ContractDefinition",
        "src": "1096:12007:280",
        "nodes": [
          {
            "id": 62374,
            "nodeType": "UsingForDirective",
            "src": "1432:37:280",
            "nodes": [],
            "libraryName": {
              "id": 62372,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157028,
              "src": "1438:18:280"
            },
            "typeName": {
              "id": 62373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1461:7:280",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 62377,
            "nodeType": "VariableDeclaration",
            "src": "1762:28:280",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62375,
              "nodeType": "StructuredDocumentation",
              "src": "1659:98:280",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "1778:12:280",
            "scope": 63169,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62376,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1762:7:280",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 62380,
            "nodeType": "VariableDeclaration",
            "src": "1887:26:280",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62378,
              "nodeType": "StructuredDocumentation",
              "src": "1796:86:280",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "1903:10:280",
            "scope": 63169,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62379,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1887:7:280",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 62384,
            "nodeType": "VariableDeclaration",
            "src": "1965:41:280",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 62381,
              "nodeType": "StructuredDocumentation",
              "src": "1920:40:280",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "1990:7:280",
            "scope": 63169,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62382,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1965:7:280",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 62383,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2000:6:280",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 62481,
            "nodeType": "FunctionDefinition",
            "src": "2264:1163:280",
            "nodes": [],
            "body": {
              "id": 62480,
              "nodeType": "Block",
              "src": "2651:776:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62411,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62377,
                      "src": "2661:12:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5452414e534645525f524f4c45",
                          "id": 62413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2686:15:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                            "typeString": "literal_string \"TRANSFER_ROLE\""
                          },
                          "value": "TRANSFER_ROLE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                            "typeString": "literal_string \"TRANSFER_ROLE\""
                          }
                        ],
                        "id": 62412,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2676:9:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 62414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2676:26:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2661:41:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 62416,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:41:280"
                },
                {
                  "expression": {
                    "id": 62421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62417,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62380,
                      "src": "2712:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d494e5445525f524f4c45",
                          "id": 62419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2735:13:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                            "typeString": "literal_string \"MINTER_ROLE\""
                          },
                          "value": "MINTER_ROLE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                            "typeString": "literal_string \"MINTER_ROLE\""
                          }
                        ],
                        "id": 62418,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2725:9:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 62420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2725:24:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2712:37:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 62422,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:37:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62424,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62396,
                        "src": "2857:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 62423,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46077,
                      "src": "2835:21:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 62425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62426,
                  "nodeType": "ExpressionStatement",
                  "src": "2835:41:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62428,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62389,
                        "src": "2901:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 62429,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62391,
                        "src": "2908:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 62427,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101528,
                      "src": "2886:14:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 62430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2886:30:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62431,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:30:280"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62432,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24742,
                      "src": "2926:26:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 62433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2926:28:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62434,
                  "nodeType": "ExpressionStatement",
                  "src": "2926:28:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62436,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62393,
                        "src": "2983:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 62435,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18257,
                      "src": "2965:17:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 62437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:31:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62438,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:31:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62440,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62387,
                        "src": "3018:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62439,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21934,
                      "src": "3006:11:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 62441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:26:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62442,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:26:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62444,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "3054:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62445,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62387,
                        "src": "3074:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62443,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "3043:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:45:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62447,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:45:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62449,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62380,
                        "src": "3109:10:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62450,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62387,
                        "src": "3121:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62448,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "3098:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3098:37:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62452,
                  "nodeType": "ExpressionStatement",
                  "src": "3098:37:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62454,
                        "name": "transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62377,
                        "src": "3156:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62455,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62387,
                        "src": "3170:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62453,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "3145:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:39:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62457,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:39:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62459,
                        "name": "transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62377,
                        "src": "3205:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 62462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3227:1:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 62461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3219:7:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 62460,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3219:7:280",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 62463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3219:10:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62458,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "3194:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:36:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62465,
                  "nodeType": "ExpressionStatement",
                  "src": "3194:36:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62467,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62406,
                        "src": "3263:21:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62468,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62404,
                        "src": "3286:15:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 62466,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22704,
                      "src": "3241:21:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3241:61:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62470,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:61:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62472,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62400,
                        "src": "3337:17:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62473,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62402,
                        "src": "3356:11:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 62471,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23114,
                      "src": "3312:24:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3312:56:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62475,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:56:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62477,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62398,
                        "src": "3405:14:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62476,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22848,
                      "src": "3378:26:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 62478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3378:42:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62479,
                  "nodeType": "ExpressionStatement",
                  "src": "3378:42:280"
                }
              ]
            },
            "documentation": {
              "id": 62385,
              "nodeType": "StructuredDocumentation",
              "src": "2205:54:280",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62408,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150694,
                  "src": "2639:11:280"
                },
                "nodeType": "ModifierInvocation",
                "src": "2639:11:280"
              }
            ],
            "name": "initialize",
            "nameLocation": "2273:10:280",
            "parameters": {
              "id": 62407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62387,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2301:13:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2293:21:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62389,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2338:5:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2324:19:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62388,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62391,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2367:7:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2353:21:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62390,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62393,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2398:12:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2384:26:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62396,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2437:18:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2420:35:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62394,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2420:7:280",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62395,
                    "nodeType": "ArrayTypeName",
                    "src": "2420:9:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62398,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2473:14:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2465:22:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62400,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2505:17:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2497:25:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62402,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2540:11:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2532:19:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 62401,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62404,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "2569:15:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2561:23:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 62403,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2561:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62406,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "2602:21:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2594:29:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:346:280"
            },
            "returnParameters": {
              "id": 62410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2651:0:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62529,
            "nodeType": "FunctionDefinition",
            "src": "3674:402:280",
            "nodes": [],
            "body": {
              "id": 62528,
              "nodeType": "Block",
              "src": "3755:321:280",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62491,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62491,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "3774:7:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62528,
                      "src": "3766:15:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3766:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 62495,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 62493,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62484,
                        "src": "3799:8:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62492,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17933,
                      "src": "3787:11:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 62494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:21:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3765:43:280"
                },
                {
                  "assignments": [
                    62497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62497,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3832:8:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62528,
                      "src": "3818:22:280",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 62496,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3818:6:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62501,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 62499,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62484,
                        "src": "3855:8:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62498,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17984,
                      "src": "3843:11:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 62500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3843:21:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3818:46:280"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 62503,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62491,
                        "src": "3896:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62502,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18502,
                      "src": "3879:16:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 62504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:25:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 62526,
                    "nodeType": "Block",
                    "src": "3983:87:280",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62519,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62497,
                                  "src": "4028:8:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 62520,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62484,
                                      "src": "4038:8:280",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 62521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 156890,
                                    "src": "4038:17:280",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 62522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4038:19:280",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 62517,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4011:3:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 62518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4011:16:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 62523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4011:47:280",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 62516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4004:6:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 62515,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4004:6:280",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 62524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4004:55:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 62489,
                        "id": 62525,
                        "nodeType": "Return",
                        "src": "3997:62:280"
                      }
                    ]
                  },
                  "id": 62527,
                  "nodeType": "IfStatement",
                  "src": "3875:195:280",
                  "trueBody": {
                    "id": 62514,
                    "nodeType": "Block",
                    "src": "3906:71:280",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62509,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62497,
                                  "src": "3951:8:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 62510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3961:3:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 62507,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3934:3:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 62508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3934:16:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 62511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3934:31:280",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 62506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3927:6:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 62505,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3927:6:280",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 62512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3927:39:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 62489,
                        "id": 62513,
                        "nodeType": "Return",
                        "src": "3920:46:280"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              101864
            ],
            "documentation": {
              "id": 62482,
              "nodeType": "StructuredDocumentation",
              "src": "3624:45:280",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3683:8:280",
            "overrides": {
              "id": 62486,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3722:8:280"
            },
            "parameters": {
              "id": 62485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62484,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3700:8:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62529,
                  "src": "3692:16:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3691:18:280"
            },
            "returnParameters": {
              "id": 62489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62529,
                  "src": "3740:13:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62487,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3739:15:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62553,
            "nodeType": "FunctionDefinition",
            "src": "4107:280:280",
            "nodes": [],
            "body": {
              "id": 62552,
              "nodeType": "Block",
              "src": "4271:116:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 62550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 62542,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62532,
                          "src": "4312:11:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 62540,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4288:5:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$63169_$",
                            "typeString": "type(contract super SignatureDrop_V4)"
                          }
                        },
                        "id": 62541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 101620,
                        "src": "4288:23:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 62543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4288:36:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 62549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 62545,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150623,
                              "src": "4333:19:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150623_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150623_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 62544,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4328:4:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4328:25:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150623",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 62547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4328:37:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 62548,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62532,
                        "src": "4369:11:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4328:52:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4288:92:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62539,
                  "id": 62551,
                  "nodeType": "Return",
                  "src": "4281:99:280"
                }
              ]
            },
            "baseFunctions": [
              14686,
              101620
            ],
            "documentation": {
              "id": 62530,
              "nodeType": "StructuredDocumentation",
              "src": "4082:20:280",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4116:17:280",
            "overrides": {
              "id": 62536,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 62534,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102860,
                  "src": "4215:18:280"
                },
                {
                  "id": 62535,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "4235:7:280"
                }
              ],
              "src": "4206:37:280"
            },
            "parameters": {
              "id": 62533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62532,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4141:11:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "4134:18:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62531,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4133:20:280"
            },
            "returnParameters": {
              "id": 62539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "4261:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4260:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 62564,
            "nodeType": "FunctionDefinition",
            "src": "4393:104:280",
            "nodes": [],
            "body": {
              "id": 62563,
              "nodeType": "Block",
              "src": "4449:48:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5369676e617475726544726f70",
                        "id": 62560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4474:15:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        },
                        "value": "SignatureDrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        }
                      ],
                      "id": 62559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4466:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 62558,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4466:7:280",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 62561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:24:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 62557,
                  "id": 62562,
                  "nodeType": "Return",
                  "src": "4459:31:280"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "4402:12:280",
            "parameters": {
              "id": 62554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4414:2:280"
            },
            "returnParameters": {
              "id": 62557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62564,
                  "src": "4440:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:9:280"
            },
            "scope": 63169,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62575,
            "nodeType": "FunctionDefinition",
            "src": "4503:89:280",
            "nodes": [],
            "body": {
              "id": 62574,
              "nodeType": "Block",
              "src": "4560:32:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 62571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4583:1:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 62570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4577:5:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 62569,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4577:5:280",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 62572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4577:8:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 62568,
                  "id": 62573,
                  "nodeType": "Return",
                  "src": "4570:15:280"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "4512:15:280",
            "parameters": {
              "id": 62565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4527:2:280"
            },
            "returnParameters": {
              "id": 62568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62575,
                  "src": "4553:5:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 62566,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4552:7:280"
            },
            "scope": 63169,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62633,
            "nodeType": "FunctionDefinition",
            "src": "4966:540:280",
            "nodes": [],
            "body": {
              "id": 62632,
              "nodeType": "Block",
              "src": "5130:376:280",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 62588,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62582,
                        "src": "5144:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 62589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5144:12:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5159:1:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5144:16:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62624,
                  "nodeType": "IfStatement",
                  "src": "5140:293:280",
                  "trueBody": {
                    "id": 62623,
                    "nodeType": "Block",
                    "src": "5162:271:280",
                    "statements": [
                      {
                        "assignments": [
                          62593,
                          62595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 62593,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5190:12:280",
                            "nodeType": "VariableDeclaration",
                            "scope": 62623,
                            "src": "5177:25:280",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 62592,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5177:5:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 62595,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5212:14:280",
                            "nodeType": "VariableDeclaration",
                            "scope": 62623,
                            "src": "5204:22:280",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 62594,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5204:7:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 62605,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 62598,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62582,
                              "src": "5241:5:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 62600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5249:5:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 62599,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5249:5:280",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 62602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5256:7:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 62601,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5256:7:280",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 62603,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5248:16:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 62596,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5230:3:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 62597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5230:10:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5230:35:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5176:89:280"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 62609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 62606,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62593,
                                "src": "5283:12:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 62607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5283:19:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 62608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5306:1:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5283:24:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 62612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 62610,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62595,
                              "src": "5311:14:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 62611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5329:2:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5311:20:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5283:48:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 62622,
                        "nodeType": "IfStatement",
                        "src": "5279:144:280",
                        "trueBody": {
                          "id": 62621,
                          "nodeType": "Block",
                          "src": "5333:90:280",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 62617,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 62615,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21013,
                                      "src": "5369:21:280",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 62616,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62578,
                                      "src": "5393:7:280",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5369:31:280",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 62618,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62582,
                                    "src": "5402:5:280",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 62614,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18370,
                                  "src": "5351:17:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 62619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5351:57:280",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 62620,
                              "nodeType": "ExpressionStatement",
                              "src": "5351:57:280"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62627,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62578,
                        "src": "5465:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62628,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62580,
                        "src": "5474:17:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 62629,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62582,
                        "src": "5493:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 62625,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5450:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$63169_$",
                          "typeString": "type(contract super SignatureDrop_V4)"
                        }
                      },
                      "id": 62626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21072,
                      "src": "5450:14:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 62630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:49:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 62587,
                  "id": 62631,
                  "nodeType": "Return",
                  "src": "5443:56:280"
                }
              ]
            },
            "baseFunctions": [
              21072
            ],
            "documentation": {
              "id": 62576,
              "nodeType": "StructuredDocumentation",
              "src": "4794:167:280",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "4975:8:280",
            "overrides": {
              "id": 62584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5095:8:280"
            },
            "parameters": {
              "id": 62583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62578,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5001:7:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62633,
                  "src": "4993:15:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4993:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62580,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5034:17:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62633,
                  "src": "5018:33:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62579,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5018:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62582,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5076:5:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62633,
                  "src": "5061:20:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62581,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5061:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4983:104:280"
            },
            "returnParameters": {
              "id": 62587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62586,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5121:7:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62633,
                  "src": "5113:15:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5113:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5112:17:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62675,
            "nodeType": "FunctionDefinition",
            "src": "5613:395:280",
            "nodes": [],
            "body": {
              "id": 62674,
              "nodeType": "Block",
              "src": "5760:248:280",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62647,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "5778:7:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62674,
                      "src": "5770:15:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62651,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 62649,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62636,
                        "src": "5806:6:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62648,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17872,
                      "src": "5788:17:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 62650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5788:25:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5770:43:280"
                },
                {
                  "expression": {
                    "id": 62657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62652,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62644,
                      "src": "5823:11:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62654,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62647,
                          "src": "5850:7:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 62655,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62638,
                          "src": "5859:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 62653,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18436,
                        "src": "5837:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 62656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5837:27:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5823:41:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 62658,
                  "nodeType": "ExpressionStatement",
                  "src": "5823:41:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62660,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62647,
                        "src": "5893:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 62661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5902:2:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 62659,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18370,
                      "src": "5875:17:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 62662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:30:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62663,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:30:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62665,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62647,
                        "src": "5927:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62666,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62644,
                        "src": "5936:11:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 62664,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17999,
                      "src": "5915:11:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 62667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5915:33:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62668,
                  "nodeType": "ExpressionStatement",
                  "src": "5915:33:280"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62670,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62636,
                        "src": "5981:6:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62671,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62644,
                        "src": "5989:11:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 62669,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33226,
                      "src": "5964:16:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 62672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5964:37:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62673,
                  "nodeType": "EmitStatement",
                  "src": "5959:42:280"
                }
              ]
            },
            "baseFunctions": [
              33236
            ],
            "documentation": {
              "id": 62634,
              "nodeType": "StructuredDocumentation",
              "src": "5512:96:280",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 62641,
                    "name": "minterRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62380,
                    "src": "5700:10:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 62642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62640,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21977,
                  "src": "5691:8:280"
                },
                "nodeType": "ModifierInvocation",
                "src": "5691:20:280"
              }
            ],
            "name": "reveal",
            "nameLocation": "5622:6:280",
            "parameters": {
              "id": 62639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62636,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5637:6:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62675,
                  "src": "5629:14:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62638,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5660:4:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62675,
                  "src": "5645:19:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5645:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5628:37:280"
            },
            "returnParameters": {
              "id": 62645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62644,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5743:11:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62675,
                  "src": "5729:25:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62643,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5729:6:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5728:27:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62761,
            "nodeType": "FunctionDefinition",
            "src": "6261:957:280",
            "nodes": [],
            "body": {
              "id": 62760,
              "nodeType": "Block",
              "src": "6412:806:280",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62687,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "6430:13:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62760,
                      "src": "6422:21:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6422:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62689,
                  "initialValue": {
                    "id": 62688,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101487,
                    "src": "6446:13:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6422:37:280"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 62693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 62690,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62687,
                        "src": "6473:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 62691,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6489:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34627,
                        "src": "6489:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6473:29:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 62694,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21013,
                      "src": "6505:21:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6473:53:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62701,
                  "nodeType": "IfStatement",
                  "src": "6469:111:280",
                  "trueBody": {
                    "id": 62700,
                    "nodeType": "Block",
                    "src": "6528:52:280",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                              "id": 62697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6549:19:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              },
                              "value": "Not enough tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              }
                            ],
                            "id": 62696,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6542:6:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 62698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6542:27:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62699,
                        "nodeType": "ExpressionStatement",
                        "src": "6542:27:280"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 62707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62702,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62684,
                      "src": "6629:6:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62704,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6654:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 62705,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62681,
                          "src": "6660:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 62703,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24865,
                        "src": "6638:15:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34638_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 62706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6638:33:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6629:42:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 62708,
                  "nodeType": "ExpressionStatement",
                  "src": "6629:42:280"
                },
                {
                  "assignments": [
                    62710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62710,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "6690:8:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62760,
                      "src": "6682:16:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 62709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:7:280",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62713,
                  "initialValue": {
                    "expression": {
                      "id": 62711,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62679,
                      "src": "6701:4:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 62712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34617,
                    "src": "6701:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6682:26:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 62715,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6765:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34623,
                        "src": "6765:25:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 62717,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6792:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34627,
                        "src": "6792:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 62719,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6807:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34631,
                        "src": "6807:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 62721,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6822:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34629,
                        "src": "6822:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62714,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62900
                      ],
                      "referencedDeclaration": 62900,
                      "src": "6744:20:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 62723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6744:97:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62724,
                  "nodeType": "ExpressionStatement",
                  "src": "6744:97:280"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 62736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 62731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 62725,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6897:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34619,
                        "src": "6897:21:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 62729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6930:1:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 62728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6922:7:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 62727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6922:7:280",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 62730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6922:10:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6897:35:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 62735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 62732,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "6936:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34621,
                        "src": "6936:15:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 62734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6955:1:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6936:20:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6897:59:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62746,
                  "nodeType": "IfStatement",
                  "src": "6893:170:280",
                  "trueBody": {
                    "id": 62745,
                    "nodeType": "Block",
                    "src": "6958:105:280",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 62738,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62687,
                              "src": "6998:13:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 62739,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62679,
                                "src": "7013:4:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 62740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34619,
                              "src": "7013:21:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 62741,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62679,
                                "src": "7036:4:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 62742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34621,
                              "src": "7036:15:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 62737,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23176,
                            "src": "6972:25:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 62743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6972:80:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62744,
                        "nodeType": "ExpressionStatement",
                        "src": "6972:80:280"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62748,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62710,
                        "src": "7107:8:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 62749,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "7117:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 62750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34627,
                        "src": "7117:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62747,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102105,
                        102268
                      ],
                      "referencedDeclaration": 102105,
                      "src": "7097:9:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7097:34:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62752,
                  "nodeType": "ExpressionStatement",
                  "src": "7097:34:280"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62754,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62684,
                        "src": "7173:6:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62755,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62710,
                        "src": "7181:8:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62756,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62687,
                        "src": "7191:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62757,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62679,
                        "src": "7206:4:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 62753,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34650,
                      "src": "7147:25:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$34638_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 62758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7147:64:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62759,
                  "nodeType": "EmitStatement",
                  "src": "7142:69:280"
                }
              ]
            },
            "baseFunctions": [
              34674
            ],
            "documentation": {
              "id": 62676,
              "nodeType": "StructuredDocumentation",
              "src": "6208:48:280",
              "text": "@dev Claim lazy minted tokens via signature."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "6270:17:280",
            "parameters": {
              "id": 62682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62679,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "6309:4:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62761,
                  "src": "6288:25:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34638_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 62678,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62677,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34638,
                      "src": "6288:11:280"
                    },
                    "referencedDeclaration": 34638,
                    "src": "6288:11:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34638_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62681,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6330:10:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62761,
                  "src": "6315:25:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62680,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6287:54:280"
            },
            "returnParameters": {
              "id": 62685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62684,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "6400:6:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62761,
                  "src": "6392:14:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6391:16:280"
            },
            "scope": 63169,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62807,
            "nodeType": "FunctionDefinition",
            "src": "7461:390:280",
            "nodes": [],
            "body": {
              "id": 62806,
              "nodeType": "Block",
              "src": "7645:206:280",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62780,
                      "mutability": "mutable",
                      "name": "bot",
                      "nameLocation": "7660:3:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62806,
                      "src": "7655:8:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 62779,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7655:4:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62791,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 62790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 62782,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7685:3:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7685:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 62781,
                        "name": "isTrustedForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46119,
                        "src": "7666:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 62784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7666:30:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 62789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62785,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "7700:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7700:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 62787,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "7716:2:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 62788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "7716:9:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7700:25:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7666:59:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7655:70:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62793,
                        "name": "bot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62780,
                        "src": "7743:3:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "424f54",
                        "id": 62794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7748:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        },
                        "value": "BOT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        }
                      ],
                      "id": 62792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7735:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:19:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62796,
                  "nodeType": "ExpressionStatement",
                  "src": "7735:19:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 62802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 62798,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101487,
                            "src": "7772:13:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 62799,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62766,
                            "src": "7788:9:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7772:25:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 62801,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21013,
                          "src": "7801:21:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7772:50:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "id": 62803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7824:19:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        },
                        "value": "Not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        }
                      ],
                      "id": 62797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7764:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7764:80:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62805,
                  "nodeType": "ExpressionStatement",
                  "src": "7764:80:280"
                }
              ]
            },
            "baseFunctions": [
              56836
            ],
            "documentation": {
              "id": 62762,
              "nodeType": "StructuredDocumentation",
              "src": "7407:49:280",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "7470:12:280",
            "overrides": {
              "id": 62777,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7636:8:280"
            },
            "parameters": {
              "id": 62776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7492:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7492:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62766,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "7517:9:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7509:17:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7509:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7536:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7553:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7553:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7570:23:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$56978_calldata_ptr",
                    "typeString": "struct IDropSinglePhase_V1.AllowlistProof"
                  },
                  "typeName": {
                    "id": 62772,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62771,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56978,
                      "src": "7570:14:280"
                    },
                    "referencedDeclaration": 56978,
                    "src": "7570:14:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$56978_storage_ptr",
                      "typeString": "struct IDropSinglePhase_V1.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62807,
                  "src": "7603:12:280",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7603:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7482:139:280"
            },
            "returnParameters": {
              "id": 62778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7645:0:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62900,
            "nodeType": "FunctionDefinition",
            "src": "7941:1000:280",
            "nodes": [],
            "body": {
              "id": 62899,
              "nodeType": "Block",
              "src": "8127:814:280",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62820,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62816,
                      "src": "8141:14:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8159:1:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8141:19:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62825,
                  "nodeType": "IfStatement",
                  "src": "8137:56:280",
                  "trueBody": {
                    "id": 62824,
                    "nodeType": "Block",
                    "src": "8162:31:280",
                    "statements": [
                      {
                        "functionReturnParameters": 62819,
                        "id": 62823,
                        "nodeType": "Return",
                        "src": "8176:7:280"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    62827,
                    62829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62827,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8212:20:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62899,
                      "src": "8204:28:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 62826,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8204:7:280",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 62829,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8241:14:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62899,
                      "src": "8234:21:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 62828,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8234:6:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62832,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62830,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22623,
                      "src": "8259:18:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 62831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8259:20:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8203:76:280"
                },
                {
                  "assignments": [
                    62834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62834,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8298:13:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62899,
                      "src": "8290:21:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 62833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8290:7:280",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62845,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 62840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 62835,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62810,
                        "src": "8314:21:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 62838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8347:1:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 62837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8339:7:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 62836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8339:7:280",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 62839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8339:10:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8314:35:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 62843,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62810,
                      "src": "8377:21:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8314:84:280",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62841,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22812,
                        "src": "8352:20:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 62842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8352:22:280",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8290:108:280"
                },
                {
                  "assignments": [
                    62847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62847,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "8417:10:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62899,
                      "src": "8409:18:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8409:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62851,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62848,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62812,
                      "src": "8430:16:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 62849,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62816,
                      "src": "8449:14:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8430:33:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8409:54:280"
                },
                {
                  "assignments": [
                    62853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62853,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "8481:12:280",
                      "nodeType": "VariableDeclaration",
                      "scope": 62899,
                      "src": "8473:20:280",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62852,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8473:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62860,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 62854,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62847,
                            "src": "8497:10:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 62855,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62829,
                            "src": "8510:14:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8497:27:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 62857,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8496:29:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 62858,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62384,
                      "src": "8528:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8496:39:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8473:62:280"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 62864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62861,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62814,
                      "src": "8550:9:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 62862,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "8563:19:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 62863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63211,
                      "src": "8563:32:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8550:45:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62876,
                  "nodeType": "IfStatement",
                  "src": "8546:168:280",
                  "trueBody": {
                    "id": 62875,
                    "nodeType": "Block",
                    "src": "8597:117:280",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 62865,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8615:3:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 62866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8615:9:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 62867,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62847,
                            "src": "8628:10:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8615:23:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 62874,
                        "nodeType": "IfStatement",
                        "src": "8611:93:280",
                        "trueBody": {
                          "id": 62873,
                          "nodeType": "Block",
                          "src": "8640:64:280",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4d7573742073656e6420746f74616c207072696365",
                                    "id": 62870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8665:23:280",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c77e3b5b83fc57e5be027b05f42517ac3be200acc20aeaeec256e29127e2e8f5",
                                      "typeString": "literal_string \"Must send total price\""
                                    },
                                    "value": "Must send total price"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c77e3b5b83fc57e5be027b05f42517ac3be200acc20aeaeec256e29127e2e8f5",
                                      "typeString": "literal_string \"Must send total price\""
                                    }
                                  ],
                                  "id": 62869,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "8658:6:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 62871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8658:31:280",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 62872,
                              "nodeType": "ExpressionStatement",
                              "src": "8658:31:280"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62880,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62814,
                        "src": "8761:9:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62881,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "8772:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8772:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62883,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62827,
                        "src": "8786:20:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62884,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62853,
                        "src": "8808:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62877,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "8724:19:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 62879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63248,
                      "src": "8724:36:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 62885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:97:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62886,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:97:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62890,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62814,
                        "src": "8868:9:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62891,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "8879:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8879:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62893,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62834,
                        "src": "8893:13:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 62896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 62894,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62847,
                          "src": "8908:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 62895,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62853,
                          "src": "8921:12:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8908:25:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62887,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "8831:19:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 62889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63248,
                      "src": "8831:36:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 62897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8831:103:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62898,
                  "nodeType": "ExpressionStatement",
                  "src": "8831:103:280"
                }
              ]
            },
            "baseFunctions": [
              56866
            ],
            "documentation": {
              "id": 62808,
              "nodeType": "StructuredDocumentation",
              "src": "7857:79:280",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "7950:20:280",
            "overrides": {
              "id": 62818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8118:8:280"
            },
            "parameters": {
              "id": 62817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62810,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "7988:21:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62900,
                  "src": "7980:29:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7980:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62812,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8027:16:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62900,
                  "src": "8019:24:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8019:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62814,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8061:9:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62900,
                  "src": "8053:17:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62816,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8088:14:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62900,
                  "src": "8080:22:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8080:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7970:138:280"
            },
            "returnParameters": {
              "id": 62819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8127:0:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62921,
            "nodeType": "FunctionDefinition",
            "src": "8994:245:280",
            "nodes": [],
            "body": {
              "id": 62920,
              "nodeType": "Block",
              "src": "9147:92:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62911,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62909,
                      "src": "9157:12:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62912,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101487,
                      "src": "9172:13:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9157:28:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62914,
                  "nodeType": "ExpressionStatement",
                  "src": "9157:28:280"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62916,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62903,
                        "src": "9205:3:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62917,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62905,
                        "src": "9210:21:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62915,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102105,
                        102268
                      ],
                      "referencedDeclaration": 102105,
                      "src": "9195:9:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9195:37:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62919,
                  "nodeType": "ExpressionStatement",
                  "src": "9195:37:280"
                }
              ]
            },
            "baseFunctions": [
              56876
            ],
            "documentation": {
              "id": 62901,
              "nodeType": "StructuredDocumentation",
              "src": "8947:42:280",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "9003:22:280",
            "overrides": {
              "id": 62907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9095:8:280"
            },
            "parameters": {
              "id": 62906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62903,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9034:3:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62921,
                  "src": "9026:11:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9026:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62905,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "9047:21:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62921,
                  "src": "9039:29:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9039:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9025:44:280"
            },
            "returnParameters": {
              "id": 62910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62909,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9129:12:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62921,
                  "src": "9121:20:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9121:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9120:22:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62936,
            "nodeType": "FunctionDefinition",
            "src": "9327:136:280",
            "nodes": [],
            "body": {
              "id": 62935,
              "nodeType": "Block",
              "src": "9411:52:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62931,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62380,
                        "src": "9436:10:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62932,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62924,
                        "src": "9448:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62930,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "9428:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9428:28:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62929,
                  "id": 62934,
                  "nodeType": "Return",
                  "src": "9421:35:280"
                }
              ]
            },
            "baseFunctions": [
              24790
            ],
            "documentation": {
              "id": 62922,
              "nodeType": "StructuredDocumentation",
              "src": "9245:77:280",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9336:19:280",
            "overrides": {
              "id": 62926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9387:8:280"
            },
            "parameters": {
              "id": 62925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62924,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "9364:7:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 62936,
                  "src": "9356:15:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9356:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9355:17:280"
            },
            "returnParameters": {
              "id": 62929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62936,
                  "src": "9405:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62927,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9405:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9404:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62950,
            "nodeType": "FunctionDefinition",
            "src": "9558:137:280",
            "nodes": [],
            "body": {
              "id": 62949,
              "nodeType": "Block",
              "src": "9630:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62944,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "9655:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62945,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "9675:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9675:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62943,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "9647:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9647:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62942,
                  "id": 62948,
                  "nodeType": "Return",
                  "src": "9640:48:280"
                }
              ]
            },
            "baseFunctions": [
              22792
            ],
            "documentation": {
              "id": 62937,
              "nodeType": "StructuredDocumentation",
              "src": "9469:84:280",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "9567:22:280",
            "overrides": {
              "id": 62939,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9606:8:280"
            },
            "parameters": {
              "id": 62938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9589:2:280"
            },
            "returnParameters": {
              "id": 62942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62950,
                  "src": "9624:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9624:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9623:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62964,
            "nodeType": "FunctionDefinition",
            "src": "9795:142:280",
            "nodes": [],
            "body": {
              "id": 62963,
              "nodeType": "Block",
              "src": "9872:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62958,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "9897:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62959,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "9917:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9917:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62957,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "9889:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9889:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62956,
                  "id": 62962,
                  "nodeType": "Return",
                  "src": "9882:48:280"
                }
              ]
            },
            "baseFunctions": [
              22854
            ],
            "documentation": {
              "id": 62951,
              "nodeType": "StructuredDocumentation",
              "src": "9701:89:280",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "9804:27:280",
            "overrides": {
              "id": 62953,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9848:8:280"
            },
            "parameters": {
              "id": 62952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9831:2:280"
            },
            "returnParameters": {
              "id": 62956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62964,
                  "src": "9866:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62954,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9866:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9865:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62978,
            "nodeType": "FunctionDefinition",
            "src": "10020:127:280",
            "nodes": [],
            "body": {
              "id": 62977,
              "nodeType": "Block",
              "src": "10082:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62972,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10107:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62973,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "10127:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10127:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62971,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10099:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10099:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62970,
                  "id": 62976,
                  "nodeType": "Return",
                  "src": "10092:48:280"
                }
              ]
            },
            "baseFunctions": [
              21940
            ],
            "documentation": {
              "id": 62965,
              "nodeType": "StructuredDocumentation",
              "src": "9943:72:280",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10029:12:280",
            "overrides": {
              "id": 62967,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10058:8:280"
            },
            "parameters": {
              "id": 62966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10041:2:280"
            },
            "returnParameters": {
              "id": 62970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62978,
                  "src": "10076:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10076:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10075:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62992,
            "nodeType": "FunctionDefinition",
            "src": "10237:133:280",
            "nodes": [],
            "body": {
              "id": 62991,
              "nodeType": "Block",
              "src": "10305:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62986,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10330:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62987,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "10350:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 62988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10350:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62985,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10322:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10322:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62984,
                  "id": 62990,
                  "nodeType": "Return",
                  "src": "10315:48:280"
                }
              ]
            },
            "baseFunctions": [
              23182
            ],
            "documentation": {
              "id": 62979,
              "nodeType": "StructuredDocumentation",
              "src": "10153:79:280",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10246:18:280",
            "overrides": {
              "id": 62981,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10281:8:280"
            },
            "parameters": {
              "id": 62980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10264:2:280"
            },
            "returnParameters": {
              "id": 62984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62983,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62992,
                  "src": "10299:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62982,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10299:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10298:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63006,
            "nodeType": "FunctionDefinition",
            "src": "10465:133:280",
            "nodes": [],
            "body": {
              "id": 63005,
              "nodeType": "Block",
              "src": "10533:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63000,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10558:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63001,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "10578:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10578:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62999,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10550:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 63003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10550:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62998,
                  "id": 63004,
                  "nodeType": "Return",
                  "src": "10543:48:280"
                }
              ]
            },
            "baseFunctions": [
              18263
            ],
            "documentation": {
              "id": 62993,
              "nodeType": "StructuredDocumentation",
              "src": "10376:84:280",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10474:18:280",
            "overrides": {
              "id": 62995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10509:8:280"
            },
            "parameters": {
              "id": 62994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10492:2:280"
            },
            "returnParameters": {
              "id": 62998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63006,
                  "src": "10527:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10526:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63020,
            "nodeType": "FunctionDefinition",
            "src": "10693:137:280",
            "nodes": [],
            "body": {
              "id": 63019,
              "nodeType": "Block",
              "src": "10765:65:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63014,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10790:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63015,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "10810:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10810:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63013,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10782:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 63017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10782:41:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63012,
                  "id": 63018,
                  "nodeType": "Return",
                  "src": "10775:48:280"
                }
              ]
            },
            "baseFunctions": [
              56881
            ],
            "documentation": {
              "id": 63007,
              "nodeType": "StructuredDocumentation",
              "src": "10604:84:280",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "10702:22:280",
            "overrides": {
              "id": 63009,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10741:8:280"
            },
            "parameters": {
              "id": 63008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10724:2:280"
            },
            "returnParameters": {
              "id": 63012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63020,
                  "src": "10759:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10759:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10758:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63034,
            "nodeType": "FunctionDefinition",
            "src": "10922:127:280",
            "nodes": [],
            "body": {
              "id": 63033,
              "nodeType": "Block",
              "src": "10992:57:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63028,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62380,
                        "src": "11017:10:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63029,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            63155
                          ],
                          "referencedDeclaration": 63155,
                          "src": "11029:10:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11029:12:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63027,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "11009:7:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 63031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11009:33:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63026,
                  "id": 63032,
                  "nodeType": "Return",
                  "src": "11002:40:280"
                }
              ]
            },
            "baseFunctions": [
              21078
            ],
            "documentation": {
              "id": 63021,
              "nodeType": "StructuredDocumentation",
              "src": "10836:81:280",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "10931:12:280",
            "overrides": {
              "id": 63023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10968:8:280"
            },
            "parameters": {
              "id": 63022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10943:2:280"
            },
            "returnParameters": {
              "id": 63026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "10986:4:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10986:4:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10985:6:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 63047,
            "nodeType": "FunctionDefinition",
            "src": "11315:144:280",
            "nodes": [],
            "body": {
              "id": 63046,
              "nodeType": "Block",
              "src": "11370:89:280",
              "nodes": [],
              "statements": [
                {
                  "id": 63045,
                  "nodeType": "UncheckedBlock",
                  "src": "11380:73:280",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63040,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101487,
                          "src": "11411:13:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 63041,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101560,
                            "src": "11427:13:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 63042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11427:15:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11411:31:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 63039,
                      "id": 63044,
                      "nodeType": "Return",
                      "src": "11404:38:280"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 63035,
              "nodeType": "StructuredDocumentation",
              "src": "11233:77:280",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "11324:11:280",
            "parameters": {
              "id": 63036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11335:2:280"
            },
            "returnParameters": {
              "id": 63039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63047,
                  "src": "11361:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11361:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11360:9:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63056,
            "nodeType": "FunctionDefinition",
            "src": "11541:106:280",
            "nodes": [],
            "body": {
              "id": 63055,
              "nodeType": "Block",
              "src": "11602:45:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63053,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21013,
                    "src": "11619:21:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 63052,
                  "id": 63054,
                  "nodeType": "Return",
                  "src": "11612:28:280"
                }
              ]
            },
            "documentation": {
              "id": 63048,
              "nodeType": "StructuredDocumentation",
              "src": "11465:71:280",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "11550:17:280",
            "parameters": {
              "id": 63049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11567:2:280"
            },
            "returnParameters": {
              "id": 63052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63056,
                  "src": "11593:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11593:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11592:9:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63068,
            "nodeType": "FunctionDefinition",
            "src": "11703:184:280",
            "nodes": [],
            "body": {
              "id": 63067,
              "nodeType": "Block",
              "src": "11751:136:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63063,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63059,
                        "src": "11866:7:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 63064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11875:4:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 63062,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102568,
                        102750
                      ],
                      "referencedDeclaration": 102750,
                      "src": "11860:5:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 63065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11860:20:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63066,
                  "nodeType": "ExpressionStatement",
                  "src": "11860:20:280"
                }
              ]
            },
            "documentation": {
              "id": 63057,
              "nodeType": "StructuredDocumentation",
              "src": "11653:45:280",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "11712:4:280",
            "parameters": {
              "id": 63060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63059,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11725:7:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63068,
                  "src": "11717:15:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11717:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11716:17:280"
            },
            "returnParameters": {
              "id": 63061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11751:0:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 63132,
            "nodeType": "FunctionDefinition",
            "src": "11941:573:280",
            "nodes": [],
            "body": {
              "id": 63131,
              "nodeType": "Block",
              "src": "12102:412:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63084,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63071,
                        "src": "12140:4:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63085,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63073,
                        "src": "12146:2:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63086,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63075,
                        "src": "12150:12:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63087,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63077,
                        "src": "12164:8:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63081,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12112:5:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$63169_$",
                          "typeString": "type(contract super SignatureDrop_V4)"
                        }
                      },
                      "id": 63083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102841,
                      "src": "12112:27:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 63088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12112:61:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63089,
                  "nodeType": "ExpressionStatement",
                  "src": "12112:61:280"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 63104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 63097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12285:34:280",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 63091,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62377,
                              "src": "12294:12:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 63094,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12316:1:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 63093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12308:7:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 63092,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12308:7:280",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12308:10:280",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 63090,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21995,
                            "src": "12286:7:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 63096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12286:33:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63098,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63071,
                          "src": "12323:4:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12339:1:280",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12331:7:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 63099,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12331:7:280",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12331:10:280",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12323:18:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12285:56:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 63105,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63073,
                        "src": "12345:2:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12359:1:280",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12351:7:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12351:7:280",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12351:10:280",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12345:16:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12285:76:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63130,
                  "nodeType": "IfStatement",
                  "src": "12281:227:280",
                  "trueBody": {
                    "id": 63129,
                    "nodeType": "Block",
                    "src": "12363:145:280",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 63122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12381:28:280",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 63113,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62377,
                                  "src": "12390:12:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 63114,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63071,
                                  "src": "12404:4:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 63112,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "12382:7:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 63115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12382:27:280",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 63121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12413:26:280",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 63118,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62377,
                                  "src": "12422:12:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 63119,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63073,
                                  "src": "12436:2:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 63117,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "12414:7:280",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 63120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12414:25:280",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12381:58:280",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63128,
                        "nodeType": "IfStatement",
                        "src": "12377:121:280",
                        "trueBody": {
                          "id": 63127,
                          "nodeType": "Block",
                          "src": "12441:57:280",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 63124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12466:16:280",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 63123,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "12459:6:280",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 63125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12459:24:280",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 63126,
                              "nodeType": "ExpressionStatement",
                              "src": "12459:24:280"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              102841
            ],
            "documentation": {
              "id": 63069,
              "nodeType": "StructuredDocumentation",
              "src": "11893:43:280",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "11950:21:280",
            "overrides": {
              "id": 63079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12093:8:280"
            },
            "parameters": {
              "id": 63078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63071,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11989:4:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63132,
                  "src": "11981:12:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11981:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63073,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12011:2:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63132,
                  "src": "12003:10:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12003:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63075,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "12031:12:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63132,
                  "src": "12023:20:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12023:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63077,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12061:8:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63132,
                  "src": "12053:16:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12053:7:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11971:104:280"
            },
            "returnParameters": {
              "id": 63080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12102:0:280"
            },
            "scope": 63169,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 63142,
            "nodeType": "FunctionDefinition",
            "src": "12520:111:280",
            "nodes": [],
            "body": {
              "id": 63141,
              "nodeType": "Block",
              "src": "12595:36:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63138,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        63155
                      ],
                      "referencedDeclaration": 63155,
                      "src": "12612:10:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 63139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12612:12:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63137,
                  "id": 63140,
                  "nodeType": "Return",
                  "src": "12605:19:280"
                }
              ]
            },
            "baseFunctions": [
              56818
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "12529:14:280",
            "overrides": {
              "id": 63134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12568:8:280"
            },
            "parameters": {
              "id": 63133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12543:2:280"
            },
            "returnParameters": {
              "id": 63137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63142,
                  "src": "12586:7:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12586:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12585:9:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 63155,
            "nodeType": "FunctionDefinition",
            "src": "12637:231:280",
            "nodes": [],
            "body": {
              "id": 63154,
              "nodeType": "Block",
              "src": "12806:62:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63150,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46170,
                        "src": "12823:25:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46170_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 63151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46138,
                      "src": "12823:36:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 63152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12823:38:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63149,
                  "id": 63153,
                  "nodeType": "Return",
                  "src": "12816:45:280"
                }
              ]
            },
            "baseFunctions": [
              46138,
              156604
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "12646:10:280",
            "overrides": {
              "id": 63146,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 63144,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156619,
                  "src": "12722:18:280"
                },
                {
                  "id": 63145,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "12742:25:280"
                }
              ],
              "src": "12713:55:280"
            },
            "parameters": {
              "id": 63143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12656:2:280"
            },
            "returnParameters": {
              "id": 63149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63148,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12794:6:280",
                  "nodeType": "VariableDeclaration",
                  "scope": 63155,
                  "src": "12786:14:280",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12786:7:280",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12785:16:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 63168,
            "nodeType": "FunctionDefinition",
            "src": "12874:227:280",
            "nodes": [],
            "body": {
              "id": 63167,
              "nodeType": "Block",
              "src": "13041:60:280",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63163,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46170,
                        "src": "13058:25:280",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46170_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 63164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46165,
                      "src": "13058:34:280",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 63165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13058:36:280",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 63162,
                  "id": 63166,
                  "nodeType": "Return",
                  "src": "13051:43:280"
                }
              ]
            },
            "baseFunctions": [
              46165,
              156613
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "12883:8:280",
            "overrides": {
              "id": 63159,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 63157,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156619,
                  "src": "12957:18:280"
                },
                {
                  "id": 63158,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "12977:25:280"
                }
              ],
              "src": "12948:55:280"
            },
            "parameters": {
              "id": 63156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12891:2:280"
            },
            "returnParameters": {
              "id": 63162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63168,
                  "src": "13021:14:280",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63160,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13021:5:280",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13020:16:280"
            },
            "scope": 63169,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 62344,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150774,
              "src": "1129:13:280"
            },
            "id": 62345,
            "nodeType": "InheritanceSpecifier",
            "src": "1129:13:280"
          },
          {
            "baseName": {
              "id": 62346,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18264,
              "src": "1148:16:280"
            },
            "id": 62347,
            "nodeType": "InheritanceSpecifier",
            "src": "1148:16:280"
          },
          {
            "baseName": {
              "id": 62348,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22793,
              "src": "1170:11:280"
            },
            "id": 62349,
            "nodeType": "InheritanceSpecifier",
            "src": "1170:11:280"
          },
          {
            "baseName": {
              "id": 62350,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23183,
              "src": "1187:7:280"
            },
            "id": 62351,
            "nodeType": "InheritanceSpecifier",
            "src": "1187:7:280"
          },
          {
            "baseName": {
              "id": 62352,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22855,
              "src": "1200:11:280"
            },
            "id": 62353,
            "nodeType": "InheritanceSpecifier",
            "src": "1200:11:280"
          },
          {
            "baseName": {
              "id": 62354,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21941,
              "src": "1217:7:280"
            },
            "id": 62355,
            "nodeType": "InheritanceSpecifier",
            "src": "1217:7:280"
          },
          {
            "baseName": {
              "id": 62356,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18503,
              "src": "1230:13:280"
            },
            "id": 62357,
            "nodeType": "InheritanceSpecifier",
            "src": "1230:13:280"
          },
          {
            "baseName": {
              "id": 62358,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21079,
              "src": "1249:8:280"
            },
            "id": 62359,
            "nodeType": "InheritanceSpecifier",
            "src": "1249:8:280"
          },
          {
            "baseName": {
              "id": 62360,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22587,
              "src": "1263:21:280"
            },
            "id": 62361,
            "nodeType": "InheritanceSpecifier",
            "src": "1263:21:280"
          },
          {
            "baseName": {
              "id": 62362,
              "name": "DropSinglePhase_V1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56882,
              "src": "1290:18:280"
            },
            "id": 62363,
            "nodeType": "InheritanceSpecifier",
            "src": "1290:18:280"
          },
          {
            "baseName": {
              "id": 62364,
              "name": "SignatureMintERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24931,
              "src": "1314:30:280"
            },
            "id": 62365,
            "nodeType": "InheritanceSpecifier",
            "src": "1314:30:280"
          },
          {
            "baseName": {
              "id": 62366,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46170,
              "src": "1350:25:280"
            },
            "id": 62367,
            "nodeType": "InheritanceSpecifier",
            "src": "1350:25:280"
          },
          {
            "baseName": {
              "id": 62368,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156802,
              "src": "1381:20:280"
            },
            "id": 62369,
            "nodeType": "InheritanceSpecifier",
            "src": "1381:20:280"
          },
          {
            "baseName": {
              "id": 62370,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 102860,
              "src": "1407:18:280"
            },
            "id": 62371,
            "nodeType": "InheritanceSpecifier",
            "src": "1407:18:280"
          }
        ],
        "canonicalName": "SignatureDrop_V4",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63169,
          102860,
          102931,
          156053,
          155637,
          157824,
          157836,
          156802,
          46170,
          156619,
          24931,
          34675,
          157780,
          56882,
          57024,
          56904,
          22587,
          22288,
          34053,
          34028,
          21079,
          18037,
          33591,
          18503,
          33247,
          21941,
          33955,
          22855,
          34117,
          23183,
          34181,
          14831,
          14687,
          22793,
          34096,
          18264,
          150774,
          33216
        ],
        "name": "SignatureDrop_V4",
        "nameLocation": "1105:16:280",
        "scope": 63170,
        "usedErrors": [
          102872,
          102875,
          102878,
          102881,
          102884,
          102887,
          102890,
          102893,
          102896,
          102899,
          102902,
          102905,
          102908
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 280
}