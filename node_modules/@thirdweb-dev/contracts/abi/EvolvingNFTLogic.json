{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "SharedMetadataDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "deleteSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ],
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
          "name": "metadata",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
          "name": "metadata",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061584b80620000216000396000f3fe6080604052600436106102285760003560e01c80636f8934f41161012a5780636f8934f41461052357806370a082311461055057806374bc7db7146105705780638462151c1461059057806384bb1e42146105bd5780638da5cb5b146105d0578063938e3d7b146105e557806395d89b411461060557806399a2557a1461061a5780639bcf7a151461063a578063a22cb4651461065a578063a2309ff81461067a578063acd083f8146103bf578063ad1eefc51461068f578063b24f2d39146106af578063b88d4fde146106c4578063c23dc68f146106d7578063c68907de14610743578063c87b56dd14610758578063d637ed5914610778578063e6798baa146107a2578063e8a3d485146107b6578063e985e9c5146107cb578063fc3c2a73146107eb57600080fd5b806301ffc9a71461022d57806306fdde0314610262578063079fe40e14610284578063081812fc146102a6578063095ea7b3146102c657806313af4035146102db57806318160ddd146102fb5780631ebb24221461031e57806323a2902b1461033e57806323b872dd1461035e5780632a55205a1461037157806332f0cd641461039f5780633b1475a7146103bf57806342842e0e146103d457806342966c68146103e75780634cc157df14610407578063504c6e0114610449578063572b6c051461046357806357fd845514610483578063600dd5ea146104a35780636352211e146104c3578063696b0c1a146104e35780636f4f283714610503575b600080fd5b34801561023957600080fd5b5061024d61024836600461462d565b61080d565b60405190151581526020015b60405180910390f35b34801561026e57600080fd5b50610277610839565b60405161025991906146a2565b34801561029057600080fd5b506102996108d4565b60405161025991906146b5565b3480156102b257600080fd5b506102996102c13660046146c9565b6108ed565b6102d96102d43660046146f7565b610931565b005b3480156102e757600080fd5b506102d96102f6366004614723565b6109fe565b34801561030757600080fd5b50610310610a2e565b604051908152602001610259565b34801561032a57600080fd5b506102d96103393660046146c9565b610a4e565b34801561034a57600080fd5b5061024d610359366004614758565b610b75565b6102d961036c3660046147d5565b610f74565b34801561037d57600080fd5b5061039161038c366004614816565b61105b565b604051610259929190614838565b3480156103ab57600080fd5b506102d96103ba36600461485f565b611098565b3480156103cb57600080fd5b50610310611109565b6102d96103e23660046147d5565b611118565b3480156103f357600080fd5b506102d96104023660046146c9565b6111f4565b34801561041357600080fd5b506104276104223660046146c9565b6111ff565b604080516001600160a01b03909316835261ffff909116602083015201610259565b34801561045557600080fd5b5060655461024d9060ff1681565b34801561046f57600080fd5b5061024d61047e366004614723565b611282565b34801561048f57600080fd5b506102d961049e366004614723565b6112a0565b3480156104af57600080fd5b506102d96104be3660046146f7565b611310565b3480156104cf57600080fd5b506102996104de3660046146c9565b611342565b3480156104ef57600080fd5b506102d96104fe36600461487c565b61134d565b34801561050f57600080fd5b506102d961051e366004614723565b61137b565b34801561052f57600080fd5b5061054361053e3660046146c9565b6113a8565b60405161025991906148c0565b34801561055c57600080fd5b5061031061056b366004614723565b61150f565b34801561057c57600080fd5b506102d961058b36600461492d565b61156e565b34801561059c57600080fd5b506105b06105ab366004614723565b611904565b60405161025991906149b2565b6102d96105cb366004614ab4565b611933565b3480156105dc57600080fd5b50610299611a63565b3480156105f157600080fd5b506102d9610600366004614b41565b611a6d565b34801561061157600080fd5b50610277611a9a565b34801561062657600080fd5b506105b0610635366004614b75565b611ab2565b34801561064657600080fd5b506102d9610655366004614baa565b611ac9565b34801561066657600080fd5b506102d9610675366004614bd1565b611af8565b34801561068657600080fd5b50610310611bb7565b34801561069b57600080fd5b506103106106aa366004614c0a565b611bc9565b3480156106bb57600080fd5b50610427611bfc565b6102d96106d2366004614c2f565b611c2e565b3480156106e357600080fd5b506106f76106f23660046146c9565b611d18565b604051610259919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b34801561074f57600080fd5b50610310611d5f565b34801561076457600080fd5b506102776107733660046146c9565b611e1e565b34801561078457600080fd5b5061078d61205b565b60408051928352602083019190915201610259565b3480156107ae57600080fd5b506001610310565b3480156107c257600080fd5b5061027761207c565b3480156107d757600080fd5b5061024d6107e6366004614c9a565b612091565b3480156107f757600080fd5b506108006120ce565b6040516102599190614cc8565b60006108188261241a565b80610833575063152a902d60e11b6001600160e01b03198316145b92915050565b6060610843612468565b600201805461085190614d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461087d90614d9e565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b5050505050905090565b60006108de61248c565b546001600160a01b0316919050565b60006108f882612496565b61090c5761090c6333d1c03960e21b6124f2565b610914612468565b60009283526006016020525060409020546001600160a01b031690565b606554829060ff16156109ef576daaeb6d7670e522a718067333cd4e3b156109ef57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906109869030908590600401614dd3565b602060405180830381865afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190614ded565b6109ef5780604051633b79c77360e21b81526004016109e691906146b5565b60405180910390fd5b6109f983836124fc565b505050565b610a06612508565b610a225760405162461bcd60e51b81526004016109e690614e0a565b610a2b8161251b565b50565b60006001610a3a612468565b60010154610a46612468565b540303919050565b610a56612588565b610a725760405162461bcd60e51b81526004016109e690614e32565b610a8481610a7e6125b6565b906125c0565b610aec5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d65746160448201527219185d1848191bd95cc81b9bdd08195e1a5cdd606a1b60648201526084016109e6565b610af46125b6565b600082815260029190910160205260408120818155906001820181610b1982826144d8565b610b276001830160006144d8565b610b356002830160006144d8565b610b436003830160006144d8565b50506040518392507f712288e92794be2ea9abed3c7b1b0c025de9f006b5dd43cc64d15f0a7c3210f59150600090a250565b600080610b806125cc565b6000898152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190610c0290614d9e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2e90614d9e565b8015610c7b5780601f10610c5057610100808354040283529160200191610c7b565b820191906000526020600020905b815481529060010190602001808311610c5e57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610d5b57610d57610cb38780614e81565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610d08908d0160608e01614723565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b166074820152608801604051602081830303815290604052805190602001206125d6565b5094505b8415610de0576020860135610d705782610d76565b85602001355b925060001986604001351415610d8c5781610d92565b85604001355b9150600019866040013514158015610dc357506000610db76080880160608901614723565b6001600160a01b031614155b610dcd5780610ddd565b610ddd6080870160608801614723565b90505b6000610dea6125cc565b60000160030160008d815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b0316141580610e485750828814155b15610e885760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b60448201526064016109e6565b891580610e9d575083610e9b828c614ee7565b115b15610ed35760405162461bcd60e51b81526004016109e6906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610ee89190614ee7565b1115610f235760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b60448201526064016109e6565b8451421015610f655760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016109e6565b50505050509695505050505050565b606554839060ff161561104a576daaeb6d7670e522a718067333cd4e3b1561104a576001600160a01b038116331415610fb757610fb28484846126a4565b611055565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610fea9030903390600401614dd3565b602060405180830381865afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190614ded565b61104a5733604051633b79c77360e21b81526004016109e691906146b5565b6110558484846126a4565b50505050565b60008060008061106a866111ff565b90945084925061ffff1690506127106110838287614eff565b61108d9190614f34565b925050509250929050565b6110a0612508565b6111005760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016109e6565b610a2b8161285a565b60006111136128a1565b905090565b606554839060ff16156111e9576daaeb6d7670e522a718067333cd4e3b156111e9576001600160a01b03811633141561115657610fb28484846128b1565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906111899030903390600401614dd3565b602060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca9190614ded565b6111e95733604051633b79c77360e21b81526004016109e691906146b5565b6110558484846128b1565b610a2b8160016128cc565b600080600061120c612a31565b600085815260019182016020908152604091829020825180840190935280546001600160a01b0316808452930154908201529150156112515780516020820151611278565b611259612a31565b546001600160a01b031661126b612a31565b54600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526033602052604090205460ff1690565b6112a8612508565b6113055760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b60648201526084016109e6565b610a2b816001612a3b565b611318612508565b6113345760405162461bcd60e51b81526004016109e690614e0a565b61133e8282612b33565b5050565b600061083382612be7565b611355612588565b6113715760405162461bcd60e51b81526004016109e690614e32565b61133e8282612ca5565b611383612508565b61139f5760405162461bcd60e51b81526004016109e690614e0a565b610a2b81612e3d565b6113fc60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6114046125cc565b6000838152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061148690614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546114b290614d9e565b80156114ff5780601f106114d4576101008083540402835291602001916114ff565b820191906000526020600020905b8154815290600101906020018083116114e257829003601f168201915b5050505050815250509050919050565b60006001600160a01b03821661152f5761152f6323d3ad8160e21b6124f2565b6001600160401b0361153f612468565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b611576612508565b6115925760405162461bcd60e51b81526004016109e690614e0a565b600061159c6125cc565b54905060006115a96125cc565b6001015490508183156115c3576115c08284614ee7565b90505b846115cc6125cc565b60010155806115d96125cc565b556000805b8681101561179f57801580611616575087878281811061160057611600614f48565b90506020028101906116129190614f5e565b3582105b6116475760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016109e6565b60006116516125cc565b60020160006116608487614ee7565b815260200190815260200160002060020154905088888381811061168657611686614f48565b90506020028101906116989190614f5e565b602001358111156116e05760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b60448201526064016109e6565b8888838181106116f2576116f2614f48565b90506020028101906117049190614f5e565b61170c6125cc565b600201600061171b8588614ee7565b8152602001908152602001600020818161173591906150c9565b905050806117416125cc565b60020160006117508588614ee7565b815260208101919091526040016000206002015588888381811061177657611776614f48565b90506020028101906117889190614f5e565b35925081905061179781615147565b9150506115de565b50841561182857835b82811015611822576117b86125cc565b6000828152600291820160205260408120818155600181018290559182018190556003820181905560048201819055600582018190556006820180546001600160a01b031916905561180d60078301826144d8565b5050808061181a90615147565b9150506117a8565b506118c0565b858311156118c057855b838110156118be576118426125cc565b60020160006118518386614ee7565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906118a960078301826144d8565b505080806118b690615147565b915050611832565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516118f3939291906151d0565b60405180910390a150505050505050565b6060600160006119126128a1565b9050606081831461192b57611928858484612e90565b90505b949350505050565b600061193d611d5f565b90506119548161194b612f98565b88888888610b75565b508561195e6125cc565b60008381526002918201602052604081209091018054909190611982908490614ee7565b909155508690506119916125cc565b6000838152600390910160205260408120906119ab612f98565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119da9190614ee7565b909155506119ed90506000878787612fa2565b60006119f98888613086565b9050876001600160a01b0316611a0d612f98565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611a51929190918252602082015260400190565b60405180910390a45050505050505050565b60006108de61309c565b611a75612508565b611a915760405162461bcd60e51b81526004016109e690614e0a565b610a2b816130a6565b6060611aa4612468565b600301805461085190614d9e565b6060611abf848484612e90565b90505b9392505050565b611ad1612508565b611aed5760405162461bcd60e51b81526004016109e690614e0a565b6109f9838383613191565b606554829060ff1615611bad576daaeb6d7670e522a718067333cd4e3b15611bad57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611b4d9030908590600401614dd3565b602060405180830381865afa158015611b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8e9190614ded565b611bad5780604051633b79c77360e21b81526004016109e691906146b5565b6109f9838361324e565b60006001611bc36128a1565b03905090565b6000611bd36125cc565b6000938452600301602090815260408085206001600160a01b0390941685529290525090205490565b600080611c07612a31565b546001600160a01b0316611c19612a31565b549093600160a01b90910461ffff1692509050565b606554849060ff1615611d05576daaeb6d7670e522a718067333cd4e3b15611d05576001600160a01b038116331415611c7257611c6d858585856132cb565b611d11565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611ca59030903390600401614dd3565b602060405180830381865afa158015611cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce69190614ded565b611d055733604051633b79c77360e21b81526004016109e691906146b5565b611d11858585856132cb565b5050505050565b611d20614512565b60018210611d5a57611d306128a1565b821015611d5a575b611d4182613306565b611d515760001990910190611d38565b61083382613326565b919050565b600080611d6a6125cc565b60010154611d766125cc565b54611d819190614ee7565b90505b611d8c6125cc565b54811115611de757611d9c6125cc565b6002016000611dac6001846152b8565b8152602001908152602001600020600001544210611dd557611dcf6001826152b8565b91505090565b80611ddf816152cf565b915050611d84565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b60448201526064016109e6565b6060611e2982612496565b611e5b5760405162461bcd60e51b815260206004820152600360248201526208525160ea1b60448201526064016109e6565b6000611e6683611342565b9050600080306001600160a01b031663a7145eb46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd91906152e6565b90506001600160a01b03811615611f5257604051630d47875d60e41b81526001600160a01b0382169063d47875d090611f0a9086906004016146b5565b602060405180830381865afa158015611f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4b9190615303565b9150611fb9565b604051630d47875d60e41b8152309063d47875d090611f759086906004016146b5565b602060405180830381865afa158015611f92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb69190615303565b91505b6000611fcb611fc66125b6565b613351565b9050600080805b8351811015612044576000848281518110611fef57611fef614f48565b602002602001015160001c905086811115801561200c5750828110155b156120315784828151811061202357612023614f48565b602002602001015193508092505b5061203d600182614ee7565b9050611fd2565b5061204f828961335c565b98975050505050505050565b6000806120666125cc565b5461206f6125cc565b6001015490939092509050565b60606120866135f1565b805461085190614d9e565b600061209b612468565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b606060006120dd611fc66125b6565b905080516001600160401b038111156120f8576120f86149ea565b60405190808252806020026020018201604052801561213157816020015b61211e614539565b8152602001906001900390816121165790505b50915060005b8151811015612415576121486125b6565b600201600083838151811061215f5761215f614f48565b6020026020010151815260200190815260200160002060405180604001604052908160008201548152602001600182016040518060800160405290816000820180546121aa90614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546121d690614d9e565b80156122235780601f106121f857610100808354040283529160200191612223565b820191906000526020600020905b81548152906001019060200180831161220657829003601f168201915b5050505050815260200160018201805461223c90614d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461226890614d9e565b80156122b55780601f1061228a576101008083540402835291602001916122b5565b820191906000526020600020905b81548152906001019060200180831161229857829003601f168201915b505050505081526020016002820180546122ce90614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546122fa90614d9e565b80156123475780601f1061231c57610100808354040283529160200191612347565b820191906000526020600020905b81548152906001019060200180831161232a57829003601f168201915b5050505050815260200160038201805461236090614d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461238c90614d9e565b80156123d95780601f106123ae576101008083540402835291602001916123d9565b820191906000526020600020905b8154815290600101906020018083116123bc57829003601f168201915b505050505081525050815250508382815181106123f8576123f8614f48565b602090810291909101015261240e600182614ee7565b9050612137565b505090565b60006301ffc9a760e01b6001600160e01b03198316148061244b57506380ac58cd60e01b6001600160e01b03198316145b806108335750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b60006111136135fb565b600081600111611d5a576124a8612468565b54821015611d5a5760005b6124bb612468565b600084815260049190910160205260409020549050806124e5576124de836152cf565b92506124b3565b600160e01b161592915050565b8060005260046000fd5b61133e82826001613659565b60006111138161251661370a565b613714565b600061252561309c565b546001600160a01b031690508161253a61309c565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006111137f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661251661370a565b600061111361374a565b6000611ac28383613778565b600061111361386b565b6000808281805b8751811015612698576125f1600283614eff565b9150600088828151811061260757612607614f48565b60200260200101519050808411612649576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612685565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836126829190614ee7565b92505b508061269081615147565b9150506125dd565b50941495939450505050565b60006126af82612be7565b6001600160a01b0394851694909150811684146126d5576126d562a1148160e81b6124f2565b6000806126e184613899565b9150915061270681876126f13390565b6001600160a01b039081169116811491141790565b612728576127148633612091565b61272857612728632ce44b5f60e11b6124f2565b61273586868660016138c1565b801561274057600082555b612748612468565b6001600160a01b0387166000908152600591909101602052604090208054600019019055612774612468565b6001600160a01b038616600090815260059190910160205260409020805460010190556127a585600160e11b613974565b6127ad612468565b60008681526004919091016020526040902055600160e11b831661281c57600184016127d7612468565b6000828152600491909101602052604090205461281a576127f6612468565b54811461281a5783612806612468565b600083815260049190910160205260409020555b505b6001600160a01b0385168481886000805160206157f6833981519152600080a48061285157612851633a954ecd60e21b6124f2565b50505050505050565b6065805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b60006128ab612468565b54919050565b6109f983838360405180602001604052806000815250611c2e565b60006128d783612be7565b9050806000806128e686613899565b91509150841561291d576128fb8184336126f1565b61291d576129098333612091565b61291d5761291d632ce44b5f60e11b6124f2565b61292b8360008860016138c1565b801561293657600082555b6001600160801b03612946612468565b6001600160a01b038516600090815260059190910160205260409020805491909101905561297883600360e01b613974565b612980612468565b60008881526004919091016020526040902055600160e11b84166129ef57600186016129aa612468565b600082815260049190910160205260409020546129ed576129c9612468565b5481146129ed57846129d9612468565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b038616906000805160206157f6833981519152908390a4612a1d612468565b600190810180549091019055505050505050565b6000611113613989565b6daaeb6d7670e522a718067333cd4e3b1561133e576001600160a01b0382163b15612b02578015612acf57604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90612a999030908690600401614dd3565b600060405180830381600087803b158015612ab357600080fd5b505af1158015612ac7573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390612a999030908690600401614dd3565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690612a999030906004016146b5565b612710811115612b555760405162461bcd60e51b81526004016109e69061531c565b81612b5e612a31565b80546001600160a01b0319166001600160a01b039290921691909117905580612b85612a31565b805461ffff92909216600160a01b0261ffff60a01b199092169190911790556040518181526001600160a01b038316907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020015b60405180910390a25050565b600081600111612c9557612bf9612468565b60008381526004919091016020526040902054905080612c8557612c1b612468565b548210612c3257612c32636f96cda160e11b6124f2565b612c3a612468565b6000199092016000818152600493909301602052604090922054905080612c6057612c32565b600160e01b8116612c7057919050565b612c80636f96cda160e11b6124f2565b612c32565b600160e01b8116612c9557919050565b611d5a636f96cda160e11b6124f2565b612cb781612cb16125b6565b906139b7565b612d1f5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d6574616044820152726461746120616c72656164792065786973747360681b60648201526084016109e6565b604051806040016040528082815260200183612d3a90615345565b9052612d446125b6565b600083815260029190910160209081526040909120825181558282015180518051929391926001850192612d7c92849291019061457e565b506020828101518051612d95926001850192019061457e565b5060408201518051612db191600284019160209091019061457e565b5060608201518051612dcd91600384019160209091019061457e565b508493507f673b054ed092bdba91ed697666383bb8698a3524eb1312b6c0cd73b0ef509f8b9250612e02915085905080614f7e565b612e0f6020870187614f7e565b612e1c6040890189614f7e565b612e2960608b018b614f7e565b604051612bdb9897969594939291906153fb565b80612e4661248c565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612ea957612ea9631960ccad60e11b6124f2565b6001831015612eb757600192505b6000612ec16128a1565b9050808310612ece578092505b60606000612edb8761150f565b85871090810291508115612f8c578187870311612ef85786860391505b60405192506001820160051b83016040526000612f1488611d18565b905060008160400151612f25575080515b60005b612f318a613326565b9250604083015160008114612f495760009250612f6e565b835115612f5557835192505b8b831860601b612f6e576001820191508a8260051b8801525b5060018a019950888a1480612f8257508481145b15612f2857855250505b50909695505050505050565b600061111361370a565b80612fde573415610fb25760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016109e6565b6000612fea8285614eff565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561301c5750348114613020565b5034155b806130525760405162461bcd60e51b815260206004820152600260248201526110ab60f11b60448201526064016109e6565b60006001600160a01b038716156130695786613071565b6130716108d4565b90506128518561307f61370a565b83866139c3565b60006130906128a1565b90506108338383613a08565b6000611113613a22565b60006130b06135f1565b80546130bb90614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546130e790614d9e565b80156131345780601f1061310957610100808354040283529160200191613134565b820191906000526020600020905b81548152906001019060200180831161311757829003601f168201915b50505050509050816131446135f1565b8151613153926020019061457e565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161318592919061545b565b60405180910390a15050565b6127108111156131b35760405162461bcd60e51b81526004016109e69061531c565b6040518060400160405280836001600160a01b03168152602001828152506131d9612a31565b600085815260019182016020908152604091829020845181546001600160a01b0319166001600160a01b0391821617825594820151930192909255518381529184169185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b80613257612468565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6132d6848484610f74565b6001600160a01b0383163b15611055576132f284848484613a50565b611055576110556368d2bf6b60e11b6124f2565b6000613310612468565b6000928352600401602052506040902054151590565b61332e614512565b610833613339612468565b60008481526004919091016020526040902054613b2f565b606061083382613b72565b606060006133686125b6565b600201600085815260200190815260200160002060010160405180608001604052908160008201805461339a90614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546133c690614d9e565b80156134135780601f106133e857610100808354040283529160200191613413565b820191906000526020600020905b8154815290600101906020018083116133f657829003601f168201915b5050505050815260200160018201805461342c90614d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461345890614d9e565b80156134a55780601f1061347a576101008083540402835291602001916134a5565b820191906000526020600020905b81548152906001019060200180831161348857829003601f168201915b505050505081526020016002820180546134be90614d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546134ea90614d9e565b80156135375780601f1061350c57610100808354040283529160200191613537565b820191906000526020600020905b81548152906001019060200180831161351a57829003601f168201915b5050505050815260200160038201805461355090614d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461357c90614d9e565b80156135c95780601f1061359e576101008083540402835291602001916135c9565b820191906000526020600020905b8154815290600101906020018083116135ac57829003601f168201915b505050505081525050905061192b816000015182602001518360400151846060015187613bce565b6000611113613bf7565b60008061362960017f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc305306152b8565b60405160200161363b91815260200190565b60408051601f19818403018152919052805160209091012092915050565b600061366483611342565b905081801561367c5750336001600160a01b03821614155b1561369f5761368b8133612091565b61369f5761369f6367d9dca160e11b6124f2565b836136a8612468565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b6000611113613c25565b60008061371f613c47565b6000948552602090815260408086206001600160a01b03959095168652939052505090205460ff1690565b60008061362960017f245e18f96214f626aaaf765d96037f1acb9d01181947dfdac9167552874d45256152b8565b6000818152600183016020526040812054801561386157600061379c6001836152b8565b85549091506000906137b0906001906152b8565b90508181146138155760008660000182815481106137d0576137d0614f48565b90600052602060002001549050808760000184815481106137f3576137f3614f48565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061382657613826615489565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610833565b6000915050610833565b60008061362960017fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b26152b8565b60008060006138a6612468565b60009485526006016020525050604090912080549092909150565b6138da6000805160206157968339815191526000613714565b1580156138ef57506001600160a01b03841615155b801561390357506001600160a01b03831615155b156110555761392060008051602061579683398151915285613714565b158015613942575061394060008051602061579683398151915284613714565b155b156110555760405162461bcd60e51b8152602060048201526002602482015261085560f21b60448201526064016109e6565b4260a01b176001600160a01b03919091161790565b60008061362960017f995f01bd2df7283cdccde6ac870b4e9dc366a11c2005b318f39305029bc84a236152b8565b6000611ac28383613c75565b806139cd57611055565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156139fc57610fb28282613cc4565b61105584848484613d66565b61133e828260405180602001604052806000815250613dbf565b60008061362960017ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f6152b8565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290613a8590339089908890889060040161549f565b6020604051808303816000875af1925050508015613ac0575060408051601f3d908101601f19168201909252613abd918101906154dc565b60015b613b12573d808015613aee576040519150601f19603f3d011682016040523d82523d6000602084013e613af3565b606091505b508051613b0a57613b0a6368d2bf6b60e11b6124f2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b613b37614512565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b606081600001805480602002602001604051908101604052809291908181526020018280548015613bc257602002820191906000526020600020905b815481526020019060010190808311613bae575b50505050509050919050565b60606000613bdc8585613e31565b90506000613bec88888487613ebe565b905061204f81613f04565b60008061362960017fa7d40346e44ca145e94a946aa34a7d4a67245577dc18699a626fe0ffc6ce32816152b8565b6000613c3033611282565b15613c42575060131936013560601c90565b503390565b60008061362960017fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed56152b8565b6000818152600183016020526040812054613cbc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610833565b506000610833565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613d11576040519150601f19603f3d011682016040523d82523d6000602084013e613d16565b606091505b50509050806109f95760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016109e6565b816001600160a01b0316836001600160a01b03161415613d8557611055565b6001600160a01b038316301415613daa57610fb26001600160a01b0385168383613f35565b6110556001600160a01b038516848484613f8b565b613dc98383613fc3565b6001600160a01b0383163b156109f9576000613de3612468565b5490508281035b613dfd6000868380600101945086613a50565b613e1157613e116368d2bf6b60e11b6124f2565b818110613dea5781613e21612468565b5414611d1157611d1160006124f2565b81518151606091158015911515908290613e485750805b15613e78578484604051602001613e60929190615515565b60405160208183030381529060405292505050610833565b8115613e8f5784604051602001613e60919061558c565b8015613ea65783604051602001613e6091906155cc565b50506040805160208101909152600081529392505050565b606084613eca836140a2565b8585613ed5866140a2565b89604051602001613eeb96959493929190615614565b6040516020818303038152906040529050949350505050565b6060613f0f8261419f565b604051602001613f1f919061572a565b6040516020818303038152906040529050919050565b6109f98363a9059cbb60e01b8484604051602401613f54929190614838565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526142f2565b6040516001600160a01b03808516602483015283166044820152606481018290526110559085906323b872dd60e01b90608401613f54565b6000613fcd612468565b54905081613fe557613fe563b562e8dd60e01b6124f2565b613ff260008483856138c1565b614002836001841460e11b613974565b61400a612468565b600083815260049190910160205260409020556001600160401b01820261402f612468565b6001600160a01b0385166000818152600592909201602052604090912080549092019091558061406857614068622e076360e81b6124f2565b818301825b808360006000805160206157f6833981519152600080a46001018082141561406d5781614098612468565b55506109f9915050565b6060816140c65750506040805180820190915260018152600360fc1b602082015290565b8160005b81156140f057806140da81615147565b91506140e99050600a83614f34565b91506140ca565b6000816001600160401b0381111561410a5761410a6149ea565b6040519080825280601f01601f191660200182016040528015614134576020820181803683370190505b5090505b841561192b576141496001836152b8565b9150614156600a8661576f565b614161906030614ee7565b60f81b81838151811061417657614176614f48565b60200101906001600160f81b031916908160001a905350614198600a86614f34565b9450614138565b60608151600014156141bf57505060408051602081019091526000815290565b60006040518060600160405280604081526020016157b660409139905060006003845160026141ee9190614ee7565b6141f89190614f34565b614203906004614eff565b6001600160401b0381111561421a5761421a6149ea565b6040519080825280601f01601f191660200182016040528015614244576020820181803683370190505b509050600182016020820185865187015b808210156142b0576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250614255565b50506003865106600181146142cc57600281146142df576142e7565b603d6001830353603d60028303536142e7565b603d60018303535b509195945050505050565b6000614347826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143c49092919063ffffffff16565b8051909150156109f957808060200190518101906143659190614ded565b6109f95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109e6565b6060611abf8484600085856001600160a01b0385163b6144265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e6565b600080866001600160a01b031685876040516144429190615783565b60006040518083038185875af1925050503d806000811461447f576040519150601f19603f3d011682016040523d82523d6000602084013e614484565b606091505b509150915061449482828661449f565b979650505050505050565b606083156144ae575081611ac2565b8251156144be5782518084602001fd5b8160405162461bcd60e51b81526004016109e691906146a2565b5080546144e490614d9e565b6000825580601f106144f4575050565b601f016020900490600052602060002090810190610a2b9190614602565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518060400160405280600080191681526020016145796040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b82805461458a90614d9e565b90600052602060002090601f0160209004810192826145ac57600085556145f2565b82601f106145c557805160ff19168380011785556145f2565b828001600101855582156145f2579182015b828111156145f25782518255916020019190600101906145d7565b506145fe929150614602565b5090565b5b808211156145fe5760008155600101614603565b6001600160e01b031981168114610a2b57600080fd5b60006020828403121561463f57600080fd5b8135611ac281614617565b60005b8381101561466557818101518382015260200161464d565b838111156110555750506000910152565b6000815180845261468e81602086016020860161464a565b601f01601f19169290920160200192915050565b602081526000611ac26020830184614676565b6001600160a01b0391909116815260200190565b6000602082840312156146db57600080fd5b5035919050565b6001600160a01b0381168114610a2b57600080fd5b6000806040838503121561470a57600080fd5b8235614715816146e2565b946020939093013593505050565b60006020828403121561473557600080fd5b8135611ac2816146e2565b60006080828403121561475257600080fd5b50919050565b60008060008060008060c0878903121561477157600080fd5b863595506020870135614783816146e2565b945060408701359350606087013561479a816146e2565b92506080870135915060a08701356001600160401b038111156147bc57600080fd5b6147c889828a01614740565b9150509295509295509295565b6000806000606084860312156147ea57600080fd5b83356147f5816146e2565b92506020840135614805816146e2565b929592945050506040919091013590565b6000806040838503121561482957600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b8015158114610a2b57600080fd5b60006020828403121561487157600080fd5b8135611ac281614851565b6000806040838503121561488f57600080fd5b82356001600160401b038111156148a557600080fd5b6148b185828601614740565b95602094909401359450505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061192b610120840182614676565b60008060006040848603121561494257600080fd5b83356001600160401b038082111561495957600080fd5b818601915086601f83011261496d57600080fd5b81358181111561497c57600080fd5b8760208260051b850101111561499157600080fd5b602092830195509350508401356149a781614851565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612f8c578351835292840192918401916001016149ce565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715614a2257614a226149ea565b60405290565b600082601f830112614a3957600080fd5b81356001600160401b0380821115614a5357614a536149ea565b604051601f8301601f19908116603f01168101908282118183101715614a7b57614a7b6149ea565b81604052838152866020858801011115614a9457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215614acd57600080fd5b8635614ad8816146e2565b9550602087013594506040870135614aef816146e2565b93506060870135925060808701356001600160401b0380821115614b1257600080fd5b614b1e8a838b01614740565b935060a0890135915080821115614b3457600080fd5b506147c889828a01614a28565b600060208284031215614b5357600080fd5b81356001600160401b03811115614b6957600080fd5b61192b84828501614a28565b600080600060608486031215614b8a57600080fd5b8335614b95816146e2565b95602085013595506040909401359392505050565b600080600060608486031215614bbf57600080fd5b833592506020840135614805816146e2565b60008060408385031215614be457600080fd5b8235614bef816146e2565b91506020830135614bff81614851565b809150509250929050565b60008060408385031215614c1d57600080fd5b823591506020830135614bff816146e2565b60008060008060808587031215614c4557600080fd5b8435614c50816146e2565b93506020850135614c60816146e2565b92506040850135915060608501356001600160401b03811115614c8257600080fd5b614c8e87828801614a28565b91505092959194509250565b60008060408385031215614cad57600080fd5b8235614cb8816146e2565b91506020830135614bff816146e2565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015614d9057603f198984038101865282518051855288015188850188905280516080898701819052614d2760c0880183614676565b91508a83015160608589850301818a0152614d428483614676565b93508b85015191508589850301838a0152614d5d8483614676565b940151888503860160a08a0152939250614d7b915082905083614676565b978a0197955050509187019150600101614cef565b509098975050505050505050565b600181811c90821680614db257607f821691505b6020821081141561475257634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b600060208284031215614dff57600080fd5b8151611ac281614851565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f5368617265644d6574616461746142617463683a2063616e6e6f74207365742060408201526e736861726564206d6574616461746160881b606082015260800190565b6000808335601e19843603018112614e9857600080fd5b8301803591506001600160401b03821115614eb257600080fd5b6020019150600581901b3603821315614eca57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115614efa57614efa614ed1565b500190565b6000816000190483118215151615614f1957614f19614ed1565b500290565b634e487b7160e01b600052601260045260246000fd5b600082614f4357614f43614f1e565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614f7457600080fd5b9190910192915050565b6000808335601e19843603018112614f9557600080fd5b8301803591506001600160401b03821115614faf57600080fd5b602001915036819003821315614eca57600080fd5b601f8211156109f957600081815260208120601f850160051c81016020861015614feb5750805b601f850160051c820191505b81811015612ac757828155600101614ff7565b6001600160401b03831115615021576150216149ea565b6150358361502f8354614d9e565b83614fc4565b6000601f84116001811461506957600085156150515750838201355b600019600387901b1c1916600186901b178355611d11565b600083815260209020601f19861690835b8281101561509a578685013582556020948501946001909201910161507a565b50868210156150b75760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135615111816146e2565b81546001600160a01b0319166001600160a01b039190911617905561513960e0830183614f7e565b61105581836007860161500a565b600060001982141561515b5761515b614ed1565b5060010190565b6000808335601e1984360301811261517957600080fd5b83016020810192503590506001600160401b0381111561519857600080fd5b803603831315614eca57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a8110156152a257888403605f190185528235368d900360fe19018112615215578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561525c816146e2565b6001600160a01b03169088015260e061527784820185615162565b945083828a015261528b848a0186836151a7565b9983019998505050949094019350506001016151f0565b5050508615156020870152935061192b92505050565b6000828210156152ca576152ca614ed1565b500390565b6000816152de576152de614ed1565b506000190190565b6000602082840312156152f857600080fd5b8151611ac2816146e2565b60006020828403121561531557600080fd5b5051919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b60006080823603121561535757600080fd5b61535f614a00565b82356001600160401b038082111561537657600080fd5b61538236838701614a28565b8352602085013591508082111561539857600080fd5b6153a436838701614a28565b602084015260408501359150808211156153bd57600080fd5b6153c936838701614a28565b604084015260608501359150808211156153e257600080fd5b506153ef36828601614a28565b60608301525092915050565b60808152600061540f608083018a8c6151a7565b828103602084015261542281898b6151a7565b905082810360408401526154378187896151a7565b9050828103606084015261544c8185876151a7565b9b9a5050505050505050505050565b60408152600061546e6040830185614676565b82810360208401526154808185614676565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906154d290830184614676565b9695505050505050565b6000602082840312156154ee57600080fd5b8151611ac281614617565b6000815161550b81856020860161464a565b9290920192915050565b6834b6b0b3b2911d101160b91b8152825160009061553a81600985016020880161464a565b741116101130b734b6b0ba34b7b72fbab936111d101160591b600991840191820152835161556f81601e84016020880161464a565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b815281516000906155b181600985016020870161464a565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b815281516000906155f981601185016020870161464a565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b8152865160009061563a81600a850160208c0161464a565b600160fd1b600a91840191820152875161565b81600b840160208c0161464a565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f830152875161569a81601e850160208c0161464a565b601e92019182015285516156b5816022840160208a0161464a565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b6022929091019182015261571d61570e6157086156f1603a8501896154f9565b6a1610113730b6b2911d101160a91b8152600b0190565b866154f9565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161576281601d85016020870161464a565b91909101601d0192915050565b60008261577e5761577e614f1e565b500690565b60008251614f7481846020870161464a56fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220370fb90021f250293e721bf3ab935767c2aa835fb8533bdbaaa45e0563126f0064736f6c634300080c0033",
    "sourceMap": "1832:9772:382:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1832:9772:382:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:301;;;;;;;;;;-1:-1:-1;4227:301:382;;;;;:::i;:::-;;:::i;:::-;;;661:14:635;;654:22;636:41;;624:2;609:18;4227:301:382;;;;;;;;9336:122:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1065:126:184:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16415:247:46:-;;;;;;;;;;-1:-1:-1;16415:247:46;;;;;:::i;:::-;;:::i;10039:240:382:-;;;;;;:::i;:::-;;:::i;:::-;;1599:173:180;;;;;;;;;;-1:-1:-1;1599:173:180;;;;;:::i;:::-;;:::i;4918:365:46:-;;;;;;;;;;;;;:::i;:::-;;;2708:25:635;;;2696:2;2681:18;4918:365:46;2562:177:635;1413:374:188;;;;;;;;;;-1:-1:-1;1413:374:188;;;;;:::i;:::-;;:::i;5393:2252:173:-;;;;;;;;;;-1:-1:-1;5393:2252:173;;;;;:::i;:::-;;:::i;10326:240:382:-;;;;;;:::i;:::-;;:::i;1858:347:186:-;;;;;;;;;;-1:-1:-1;1858:347:186;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;243:208:67:-;;;;;;;;;;-1:-1:-1;243:208:67;;;;;:::i;:::-;;:::i;8573:99:382:-;;;;;;;;;;;;;:::i;10617:248::-;;;;;;:::i;:::-;;:::i;8897:184::-;;;;;;;;;;-1:-1:-1;8897:184:382;;;;;:::i;:::-;;:::i;2445:435:186:-;;;;;;;;;;-1:-1:-1;2445:435:186;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5508:32:635;;;5490:51;;5589:6;5577:19;;;5572:2;5557:18;;5550:47;5463:18;2445:435:186;5318:285:635;205:31:67;;;;;;;;;;-1:-1:-1;205:31:67;;;;;;;;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;509:199:56:-;;;;;;;;;;-1:-1:-1;509:199:56;;;;;:::i;:::-;;:::i;3614:256:186:-;;;;;;;;;;-1:-1:-1;3614:256:186;;;;;:::i;:::-;;:::i;10745:150:46:-;;;;;;;;;;-1:-1:-1;10745:150:46;;;;;:::i;:::-;;:::i;1126:233:188:-;;;;;;;;;;-1:-1:-1;1126:233:188;;;;;:::i;:::-;;:::i;1600:228:184:-;;;;;;;;;;-1:-1:-1;1600:228:184;;;;;:::i;:::-;;:::i;8271:192:173:-;;;;;;;;;;-1:-1:-1;8271:192:173;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:46:-;;;;;;;;;;-1:-1:-1;6165:263:46;;;;;:::i;:::-;;:::i;2401:2895:173:-;;;;;;;;;;-1:-1:-1;2401:2895:173;;;;;:::i;:::-;;:::i;3016:319:44:-;;;;;;;;;;-1:-1:-1;3016:319:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1121:1217:173:-;;;;;;:::i;:::-;;:::i;1319:104:180:-;;;;;;;;;;;;;:::i;1501:188:170:-;;;;;;;;;;-1:-1:-1;1501:188:170;;;;;:::i;:::-;;:::i;9529:126:46:-;;;;;;;;;;;;;:::i;2364:217:44:-;;;;;;;;;;-1:-1:-1;2364:217:44;;;;;:::i;:::-;;:::i;4844:288:186:-;;;;;;;;;;-1:-1:-1;4844:288:186;;;;;:::i;:::-;;:::i;9755:243:382:-;;;;;;;;;;-1:-1:-1;9755:243:382;;;;;:::i;:::-;;:::i;8346:145::-;;;;;;;;;;;;;:::i;8545:270:173:-;;;;;;;;;;-1:-1:-1;8545:270:173;;;;;:::i;:::-;;:::i;2990:180:186:-;;;;;;;;;;;;;:::i;10916:281:382:-;;;;;;:::i;:::-;;:::i;1411:579:44:-;;;;;;;;;;-1:-1:-1;1411:579:44;;;;;:::i;:::-;;:::i;:::-;;;;;;13157:13:635;;-1:-1:-1;;;;;13153:39:635;13135:58;;13253:4;13241:17;;;13235:24;-1:-1:-1;;;;;13231:49:635;13209:20;;;13202:79;13351:4;13339:17;;;13333:24;13326:32;13319:40;13297:20;;;13290:70;13420:4;13408:17;;;13402:24;13428:8;13398:39;13376:20;;;13369:69;;;;13122:3;13107:19;;12922:522;7733:473:173;;;;;;;;;;;;;:::i;3081:1115:382:-;;;;;;;;;;-1:-1:-1;3081:1115:382;;;;;:::i;:::-;;:::i;721:172:173:-;;;;;;;;;;;;;:::i;:::-;;;;13623:25:635;;;13679:2;13664:18;;13657:34;;;;13596:18;721:172:173;13449:248:635;4681:93:382;;;;;;;;;;-1:-1:-1;4667:1:382;4681:93;8573:99;2067:138:170;;;;;;;;;;;;;:::i;17394:186:46:-;;;;;;;;;;-1:-1:-1;17394:186:46;;;;;:::i;:::-;;:::i;1833:375:188:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4227:301:382:-;4402:4;4429:36;4453:11;4429:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4469:52:382;;;4429:92;4422:99;4227:301;-1:-1:-1;;4227:301:382:o;9336:122:46:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;1065:126:184:-;1127:7;1153:21;:19;:21::i;:::-;:31;-1:-1:-1;;;;;1153:31:184;;1065:126;-1:-1:-1;1065:126:184:o;16415:247:46:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:46;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:46;;;:54;-1:-1:-1;;;;;16601:54:46;;16415:247::o;10039:240:382:-;1886:19:69;;10216:8:382;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;:::-;;;;;;;;1994:150;10240:32:382::1;10254:8;10264:7;10240:13;:32::i;:::-;10039:240:::0;;;:::o;1599:173:180:-;1669:14;:12;:14::i;:::-;1664:70;;1699:24;;-1:-1:-1;;;1699:24:180;;;;;;;:::i;1664:70::-;1743:22;1755:9;1743:11;:22::i;:::-;1599:173;:::o;4918:365:46:-;4979:7;4667:1:382;5212:23:46;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:46:o;1413:374:188:-;1483:23;:21;:23::i;:::-;1475:83;;;;-1:-1:-1;;;1475:83:188;;;;;;;:::i;:::-;1576:45;1617:3;1576:29;:27;:29::i;:::-;:33;:40;:45::i;:::-;1568:109;;;;-1:-1:-1;;;1568:109:188;;17870:2:635;1568:109:188;;;17852:21:635;17909:2;17889:18;;;17882:30;17948:34;17928:18;;;17921:62;-1:-1:-1;;;17999:18:635;;;17992:49;18058:19;;1568:109:188;17668:415:635;1568:109:188;1695:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;1688:50;;;1695:43;1688:50;;;1695:43;1688:50;;1695:43;1688:50;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;1754:26:188;;1776:3;;-1:-1:-1;1754:26:188;;-1:-1:-1;1754:26:188;;;1413:374;:::o;5393:2252:173:-;5632:15;5659:39;5701:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;5659:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5659:96:173;;;;;;;;;;;;5701:54;5659:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5659:96:173;;;;-1:-1:-1;;;5786:40:173;;;;5857:31;;;;5922:26;;;;5963:28;;;;5659:96;;-1:-1:-1;5786:40:173;;5857:31;;5922:26;5963:42;5959:515;;6038:425;6074:21;:15;;:21;:::i;:::-;6038:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6113:28:173;;;;;;-1:-1:-1;6232:8:173;;6266:38;;;;;6330:29;;;;;6385:24;;;;;;;;:::i;:::-;6190:241;;-1:-1:-1;;;;;;18873:2:635;18909:15;;;18905:24;;6190:241:173;;;18893:37:635;18946:12;;;18939:28;;;;18983:12;;;18976:28;;;;19038:15;;;19034:24;19020:12;;;19013:46;19075:13;;6190:241:173;;;;;;;;;;;;6159:290;;;;;;6038:18;:425::i;:::-;-1:-1:-1;6021:442:173;-1:-1:-1;5959:515:173;6488:10;6484:534;;;6527:38;;;;:129;;6646:10;6527:129;;;6589:15;:38;;;6527:129;6514:142;;-1:-1:-1;;6683:15:173;:29;;;:50;;:127;;6800:10;6683:127;;;6752:15;:29;;;6683:127;6670:140;;-1:-1:-1;;6840:15:173;:29;;;:50;;:92;;;;-1:-1:-1;6930:1:173;6894:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6894:38:173;;;6840:92;:167;;6994:13;6840:167;;;6951:24;;;;;;;;:::i;:::-;6824:183;;6484:534;7028:29;7060:14;:12;:14::i;:::-;:29;;:51;;:65;7112:12;7060:65;;;;;;;;;;;:75;7126:8;-1:-1:-1;;;;;7060:75:173;-1:-1:-1;;;;;7060:75:173;;;;;;;;;;;;;7028:107;;7163:13;-1:-1:-1;;;;;7150:26:173;:9;-1:-1:-1;;;;;7150:26:173;;;:58;;;;7198:10;7180:14;:28;;7150:58;7146:115;;;7224:26;;-1:-1:-1;;;7224:26:173;;19301:2:635;7224:26:173;;;19283:21:635;19340:2;19320:18;;;19313:30;-1:-1:-1;;;19359:18:635;;;19352:46;19415:18;;7224:26:173;19099:340:635;7146:115:173;7275:14;;;:66;;-1:-1:-1;7330:10:173;7294:33;7306:21;7294:9;:33;:::i;:::-;:46;7275:66;7271:111;;;7357:14;;-1:-1:-1;;;7357:14:173;;;;;;19911:2:635;19893:21;;;19950:1;19930:18;;;19923:29;-1:-1:-1;;;19983:2:635;19968:18;;19961:34;20027:2;20012:18;;19709:327;7271:111:173;7441:17;:36;;;7429:9;7395:17;:31;;;:43;;;;:::i;:::-;:82;7391:133;;;7493:20;;-1:-1:-1;;;7493:20:173;;20243:2:635;7493:20:173;;;20225:21:635;20282:2;20262:18;;;20255:30;-1:-1:-1;;;20301:18:635;;;20294:40;20351:18;;7493:20:173;20041:334:635;7391:133:173;7538:32;;7573:15;-1:-1:-1;7534:105:173;;;7604:24;;-1:-1:-1;;;7604:24:173;;20582:2:635;7604:24:173;;;20564:21:635;20621:2;20601:18;;;20594:30;-1:-1:-1;;;20640:18:635;;;20633:44;20694:18;;7604:24:173;20380:338:635;7534:105:173;5649:1996;;;;;5393:2252;;;;;;;;:::o;10326:240:382:-;1064:19:69;;10506:4:382;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;10522:37:382::1;10541:4;10547:2;10551:7;10522:18;:37::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;10522:37:382::1;10541:4;10547:2;10551:7;10522:18;:37::i;:::-;10326:240:::0;;;;:::o;1858:347:186:-;1995:16;2013:21;2051:17;2070:11;2085:31;2108:7;2085:22;:31::i;:::-;2050:66;;-1:-1:-1;2050:66:186;;-1:-1:-1;2050:66:186;;;-1:-1:-1;2192:6:186;2173:15;2050:66;2173:9;:15;:::i;:::-;2172:26;;;;:::i;:::-;2156:42;;2040:165;;1858:347;;;;;:::o;243:208:67:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:67;;21355:2:635;313:84:67;;;21337:21:635;21394:2;21374:18;;;21367:30;21433:34;21413:18;;;21406:62;-1:-1:-1;;;21484:18:635;;;21477:41;21535:19;;313:84:67;21153:407:635;313:84:67;407:37;431:12;407:23;:37::i;8573:99:382:-;8625:7;8651:14;:12;:14::i;:::-;8644:21;;8573:99;:::o;10617:248::-;1064:19:69;;10801:4:382;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;10817:41:382::1;10840:4;10846:2;10850:7;10817:22;:41::i;1392:94:69:-:0;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;10817:41:382::1;10840:4;10846:2;10850:7;10817:22;:41::i;8897:184::-:0;9054:20;9060:7;9069:4;9054:5;:20::i;2445:435:186:-;2525:7;2534:6;2552:34;2589:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;2552:84;;;;;;;;;;-1:-1:-1;;;;;2552:84:186;;;;;;;;;;;;-1:-1:-1;2666:39:186;:207;;2818:25;;2852:19;;;;2666:207;;;2725:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;2725:34:186;2768:17;:15;:17::i;:::-;:28;-1:-1:-1;;;2768:28:186;;;;2666:207;2647:226;;;;;2445:435;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:56:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:56;;21767:2:635;580:81:56;;;21749:21:635;21806:2;21786:18;;;21779:30;21845:34;21825:18;;;21818:62;-1:-1:-1;;;21896:18:635;;;21889:38;21944:19;;580:81:56;21565:404:635;580:81:56;671:30;681:13;696:4;671:9;:30::i;3614:256:186:-;3726:20;:18;:20::i;:::-;3721:76;;3762:24;;-1:-1:-1;;;3762:24:186;;;;;;;:::i;3721:76::-;3807:56;3832:17;3851:11;3807:24;:56::i;:::-;3614:256;;:::o;10745:150:46:-;10817:7;10859:27;10878:7;10859:18;:27::i;1126:233:188:-;1231:23;:21;:23::i;:::-;1223:83;;;;-1:-1:-1;;;1223:83:188;;;;;;;:::i;:::-;1316:36;1338:8;1348:3;1316:21;:36::i;1600:228:184:-;1690:29;:27;:29::i;:::-;1685:85;;1735:24;;-1:-1:-1;;;1735:24:184;;;;;;;:::i;1685:85::-;1779:42;1806:14;1779:26;:42::i;8271:192:173:-;8347:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8347:31:173;8402:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;8390:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8390:66:173;;;;;;;;;;;;8402:54;8390:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8271:192;;;:::o;6165:263:46:-;6237:7;-1:-1:-1;;;;;6260:19:46;;6256:69;;6281:44;-1:-1:-1;;;6281:7:46;:44::i;:::-;-1:-1:-1;;;;;6342:23:46;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:46;-1:-1:-1;;;;;6342:49:46;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;2401:2895:173:-;2566:24;:22;:24::i;:::-;2561:80;;2606:24;;-1:-1:-1;;;2606:24:173;;;;;;;:::i;2561:80::-;2651:26;2680:14;:12;:14::i;:::-;:44;;-1:-1:-1;2680:29:173;2763:14;:12;:14::i;:::-;:35;;;;-1:-1:-1;3187:18:173;3215:108;;;;3273:39;3294:18;3273;:39;:::i;:::-;3257:55;;3215:108;3371:11;3333:14;:12;:14::i;:::-;:35;;:56;3446:13;3399:14;:12;:14::i;:::-;:60;:29;;3515:688;3535:22;;;3515:688;;;3586:6;;;:69;;;3626:11;;3638:1;3626:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3596:59;;3586:69;3578:84;;;;-1:-1:-1;;;3578:84:173;;22646:2:635;3578:84:173;;;22628:21:635;22685:1;22665:18;;;22658:29;-1:-1:-1;;;22703:18:635;;;22696:32;22745:18;;3578:84:173;22444:325:635;3578:84:173;3677:28;3708:14;:12;:14::i;:::-;:40;;:29;3749:17;3765:1;3749:13;:17;:::i;:::-;3708:59;;;;;;;;;;;:73;;;3677:104;;3822:11;;3834:1;3822:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3799:20;:56;3795:123;;;3875:28;;-1:-1:-1;;;3875:28:173;;22976:2:635;3875:28:173;;;22958:21:635;23015:2;22995:18;;;22988:30;-1:-1:-1;;;23034:18:635;;;23027:48;23092:18;;3875:28:173;22774:342:635;3795:123:173;3994:11;;4006:1;3994:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3932;:12;:14::i;:::-;:40;;:29;3973:17;3989:1;3973:13;:17;:::i;:::-;3932:59;;;;;;;;;;;:76;;;;;;:::i;:::-;;;;4098:20;4022:14;:12;:14::i;:::-;:40;;:29;4063:17;4079:1;4063:13;:17;:::i;:::-;4022:59;;;;;;;;;;;-1:-1:-1;4022:59:173;:73;;:96;4163:11;;4175:1;4163:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3559:3:173;;-1:-1:-1;3559:3:173;;;:::i;:::-;;;;3515:688;;;;4743:22;4739:476;;;4798:18;4781:144;4822:13;4818:1;:17;4781:144;;;4867:14;:12;:14::i;:::-;:29;:43;;;:40;;;;:43;;;;;4860:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4860:50:173;;;;;;;4867:29;4860:50;:::i;:::-;;;4837:3;;;;;:::i;:::-;;;;4781:144;;;;4739:476;;;4959:39;;;4955:250;;;5035:11;5018:173;5059:18;5055:1;:22;5018:173;;;5113:14;:12;:14::i;:::-;:40;;:29;5154:17;5170:1;5154:13;:17;:::i;:::-;5113:59;;;;;;;;;;;-1:-1:-1;5113:59:173;;;5106:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5106:66:173;;;5113:59;5106:66;;;;-1:-1:-1;5106:66:173;:::i;:::-;;;5079:3;;;;;:::i;:::-;;;;5018:173;;;;4955:250;5230:59;5253:11;;5266:22;5230:59;;;;;;;;:::i;:::-;;;;;;;;2551:2745;;;;2401:2895;;;:::o;3016:319:44:-;3094:16;4667:1:382;3122:13:44;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:44:o;1121:1217:173:-;1470:25;1498:27;:25;:27::i;:::-;1470:55;;1536:103;1548:17;1567:16;:14;:16::i;:::-;1585:9;1596;1607:14;1623:15;1536:11;:103::i;:::-;;1761:9;1684:14;:12;:14::i;:::-;:29;:59;;;:40;;;;:59;;;;;:73;;;:86;;:73;;:29;:86;;;;;:::i;:::-;;;;-1:-1:-1;1872:9:173;;-1:-1:-1;1780:14:173;:12;:14::i;:::-;:29;:70;;;:51;;;;:70;;;;;;1851:16;:14;:16::i;:::-;-1:-1:-1;;;;;1780:88:173;-1:-1:-1;;;;;1780:88:173;;;;;;;;;;;;;:101;;;;;;;:::i;:::-;;;;-1:-1:-1;1938:70:173;;-1:-1:-1;1967:1:173;1971:9;1982;1993:14;1938:20;:70::i;:::-;2067:20;2090:44;2113:9;2124;2090:22;:44::i;:::-;2067:67;;2201:9;-1:-1:-1;;;;;2150:86:173;2183:16;:14;:16::i;:::-;-1:-1:-1;;;;;2150:86:173;2164:17;2150:86;2212:12;2226:9;2150:86;;;;;;13623:25:635;;;13679:2;13664:18;;13657:34;13611:2;13596:18;;13449:248;2150:86:173;;;;;;;;1364:974;;1121:1217;;;;;;:::o;1319:104:180:-;1366:7;1392:17;:15;:17::i;1501:188:170:-;1578:20;:18;:20::i;:::-;1573:76;;1614:24;;-1:-1:-1;;;1614:24:170;;;;;;;:::i;1573:76::-;1659:23;1677:4;1659:17;:23::i;9529:126:46:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:44:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4844:288:186:-;4991:20;:18;:20::i;:::-;4986:76;;5027:24;;-1:-1:-1;;;5027:24:186;;;;;;;:::i;4986:76::-;5072:53;5098:8;5108:10;5120:4;5072:25;:53::i;9755:243:382:-;1886:19:69;;9924:8:382;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;1994:150::-;9948:43:382::1;9972:8;9982;9948:23;:43::i;8346:145::-:0;8392:7;4667:1;8442:14;:12;:14::i;:::-;:32;8435:39;;8346:145;:::o;8545:270:173:-;8664:29;8733:14;:12;:14::i;:::-;:29;:65;;;:51;;:65;;;;;;;;-1:-1:-1;;;;;8733:75:173;;;;;;;;-1:-1:-1;8733:75:173;;;;8545:270::o;2990:180:186:-;3055:7;3064:6;3090:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;3090:34:186;3133:17;:15;:17::i;:::-;:28;3082:81;;-1:-1:-1;;;3133:28:186;;;;;;-1:-1:-1;3082:81:186;-1:-1:-1;2990:180:186:o;10916:281:382:-;1064:19:69;;11127:4:382;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;11143:47:382::1;11166:4;11172:2;11176:7;11185:4;11143:22;:47::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;11143:47:382::1;11166:4;11172:2;11176:7;11185:4;11143:22;:47::i;:::-;10916:281:::0;;;;;:::o;1411:579:44:-;1535:31;;:::i;:::-;4667:1:382;1610:7:44;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:44;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7733:473:173:-;7791:7;7828:9;7887:14;:12;:14::i;:::-;:35;;;7840:14;:12;:14::i;:::-;:44;:82;;;;:::i;:::-;7828:94;;7810:358;7940:14;:12;:14::i;:::-;:44;7936:48;;7810:358;;;8049:14;:12;:14::i;:::-;:40;;:29;8090:5;8094:1;8090;:5;:::i;:::-;8049:47;;;;;;;;;;;:62;;;8030:15;:81;8026:132;;8138:5;8142:1;8138;:5;:::i;:::-;8131:12;;;7733:473;:::o;8026:132::-;7998:3;;;;:::i;:::-;;;;7810:358;;;-1:-1:-1;8178:21:173;;-1:-1:-1;;;8178:21:173;;30101:2:635;8178:21:173;;;30083::635;30140:2;30120:18;;;30113:30;-1:-1:-1;;;30159:18:635;;;30152:41;30210:18;;8178:21:173;29899:335:635;3081:1115:382;3236:13;3270:17;3278:8;3270:7;:17::i;:::-;3265:62;;3303:13;;-1:-1:-1;;;3303:13:382;;30441:2:635;3303:13:382;;;30423:21:635;30480:1;30460:18;;;30453:29;-1:-1:-1;;;30498:18:635;;;30491:33;30541:18;;3303:13:382;30239:326:635;3265:62:382;3358:13;3374:17;3382:8;3374:7;:17::i;:::-;3358:33;;3401:13;3429:14;3466:4;-1:-1:-1;;;;;3446:49:382;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3429:68;-1:-1:-1;;;;;;3511:20:382;;;3507:175;;3555:35;;-1:-1:-1;;;3555:35:382;;-1:-1:-1;;;;;3555:28:382;;;;;:35;;3584:5;;3555:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3547:43;;3507:175;;;3629:42;;-1:-1:-1;;;3629:42:382;;3649:4;;3629:35;;:42;;3665:5;;3629:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3621:50;;3507:175;3774:20;3797:42;:29;:27;:29::i;:::-;:40;:42::i;:::-;3774:65;-1:-1:-1;3849:16:382;;;3907:221;3931:3;:10;3927:1;:14;3907:221;;;3965:10;3986:3;3990:1;3986:6;;;;;;;;:::i;:::-;;;;;;;3978:15;;3965:28;;4018:5;4012:2;:11;;:26;;;;;4033:5;4027:2;:11;;4012:26;4008:110;;;4069:3;4073:1;4069:6;;;;;;;;:::i;:::-;;;;;;;4058:17;;4101:2;4093:10;;4008:110;-1:-1:-1;3943:6:382;3948:1;3943:6;;:::i;:::-;;;3907:221;;;;4144:45;4170:8;4180;4144:25;:45::i;:::-;4137:52;3081:1115;-1:-1:-1;;;;;;;;3081:1115:382:o;721:172:173:-;768:7;777;804:14;:12;:14::i;:::-;:44;850:14;:12;:14::i;:::-;:35;;;796:90;;850:35;;-1:-1:-1;721:172:173;-1:-1:-1;721:172:173:o;2067:138:170:-;2128:13;2160:26;:24;:26::i;:::-;2153:45;;;;;:::i;17394:186:46:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:46;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:46;;;;;17394:186::o;1833:375:188:-;1888:38;1938:20;1961:42;:29;:27;:29::i;:42::-;1938:65;;2051:3;:10;-1:-1:-1;;;;;2024:38:188;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2013:49;;2078:9;2073:129;2097:3;:10;2093:1;:14;2073:129;;;2145:29;:27;:29::i;:::-;:38;;:46;2184:3;2188:1;2184:6;;;;;;;;:::i;:::-;;;;;;;2145:46;;;;;;;;;;;2131:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;2140:1;2131:11;;;;;;;;:::i;:::-;;;;;;;;;;:60;2109:6;2114:1;2109:6;;:::i;:::-;;;2073:129;;;;1928:280;1833:375;:::o;8452:630:46:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:46;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:46;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:46;-1:-1:-1;;;9007:25:46;;8452:630::o;1793:159:45:-;1740:46;;1793:159::o;2154:141:184:-;2208:36;2263:25;:23;:25::i;17829:408:46:-;17894:11;17940:7;4667:1:382;17921:26:46;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:46;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:46;:29;;17829:408;-1:-1:-1;;17829:408:46:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;16143:122;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;6514:128:382:-;6570:4;6593:42;6570:4;6622:12;:10;:12::i;:::-;6593:8;:42::i;1887:208:180:-;1946:18;1967:17;:15;:17::i;:::-;:24;-1:-1:-1;;;;;1967:24:180;;-1:-1:-1;2028:9:180;2001:17;:15;:17::i;:::-;:36;;-1:-1:-1;;;;;;2001:36:180;-1:-1:-1;;;;;2001:36:180;;;;;;2053:35;;;;;;;;;;;-1:-1:-1;;2053:35:180;1936:159;1887:208;:::o;7422:138:382:-;7495:4;7518:35;2809:24;7540:12;:10;:12::i;3341:165:188:-;3403:44;3466:33;:31;:33::i;6109:129:238:-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;9842:120:173:-;9889:29;9937:18;:16;:18::i;898:906:284:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;31172:19:635;;;31207:12;;;31200:28;;;31244:12;;1391:44:284;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;31172:19:635;;;31207:12;;;31200:28;;;31244:12;;1578:44:284;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:284;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:284;;;;;-1:-1:-1;;;;898:906:284:o;20209:3591:46:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:46;;;;20346:57;;-1:-1:-1;20586:45:46;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:46;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;41770:10;;41684:103;20925:19;-1:-1:-1;;;;;18791:32:46;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;41770:10;17394:186;:::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:46;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:46;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:46;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:46;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:46;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:46;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:46;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:46;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:46;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;636:41:635;;;577:33:67;;624:2:635;609:18;577:33:67;;;;;;;457:160;:::o;4590:125:46:-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:46:o;23891:187::-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:46;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;41770:10;20877:24;:68::i;36568:::-;36563:192;;36659:43;36676:4;41770:10;17394:186;:::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:46;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:46;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:46;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:46;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:46;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:46;;;-1:-1:-1;;;;;;;;;;;39027:35:46;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:46:o;5662:129:186:-;5712:32;5763:21;:19;:21::i;2191:783:69:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:69;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:69;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3614:256:186;;:::o;2568:289:69:-;2744:94;;-1:-1:-1;;;2744:94:69;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:69;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3957:370:186:-;4076:6;4062:11;:20;4058:76;;;4098:25;;-1:-1:-1;;;4098:25:186;;;;;;;:::i;4058:76::-;4181:17;4144;:15;:17::i;:::-;:54;;-1:-1:-1;;;;;;4144:54:186;-1:-1:-1;;;;;4144:54:186;;;;;;;;;;4246:11;4208:17;:15;:17::i;:::-;:50;;;;;;;-1:-1:-1;;;4208:50:186;-1:-1:-1;;;;4208:50:186;;;;;;;;;4274:46;;2708:25:635;;;-1:-1:-1;;;;;4274:46:186;;;;;2696:2:635;2681:18;4274:46:186;;;;;;;;3957:370;;:::o;12282:2050:46:-;12349:14;12398:7;4667:1:382;12379:26:46;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:46;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:46;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:46;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:46;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:46;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:46;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:46;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:46;:47::i;2249:503:188:-;2359:42;2397:3;2359:29;:27;:29::i;:::-;:33;:37;:42::i;:::-;2351:106;;;;-1:-1:-1;;;2351:106:188;;31813:2:635;2351:106:188;;;31795:21:635;31852:2;31832:18;;;31825:30;31891:34;31871:18;;;31864:62;-1:-1:-1;;;31942:18:635;;;31935:49;32001:19;;2351:106:188;31611:415:635;2351:106:188;2514:36;;;;;;;;2535:3;2514:36;;;;2540:9;2514:36;;;:::i;:::-;;;2468:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;;;;:82;;;;;;;;;;;;:43;;:82;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2468:82:188;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2468:82:188;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2468:82:188;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2601:3:188;;-1:-1:-1;2566:179:188;;-1:-1:-1;2618:14:188;;-1:-1:-1;2618:9:188;;-1:-1:-1;2618:9:188;:14;:::i;:::-;2646:21;;;;:9;:21;:::i;:::-;2681:18;;;;:9;:18;:::i;:::-;2713:22;;;;:9;:22;:::i;:::-;2566:179;;;;;;;;;;;;;:::i;1910:192:184:-;2023:14;1989:21;:19;:21::i;:::-;:48;;-1:-1:-1;;;;;;1989:48:184;-1:-1:-1;;;;;1989:48:184;;;;;;2052:43;;;;;;;;-1:-1:-1;;2052:43:184;1910:192;:::o;3583:4263:44:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:44;:35::i;:::-;4667:1:382;3887:5:44;:23;3883:85;;;4667:1:382;3930:23:44;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:44;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:44;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:44;-1:-1:-1;7821:8:44;;3583:4263;-1:-1:-1;;;;;;3583:4263:44:o;11203:111:382:-;11269:7;11295:12;:10;:12::i;5047:840::-;5247:19;5243:103;;5290:9;:14;5282:33;;;;-1:-1:-1;;;5282:33:382;;34106:2:635;5282:33:382;;;34088:21:635;34145:1;34125:18;;;34118:29;-1:-1:-1;;;34163:18:635;;;34156:36;34209:18;;5282:33:382;33904:329:635;5243:103:382;5356:18;5377:33;5396:14;5377:16;:33;:::i;:::-;5356:54;-1:-1:-1;5421:18:382;-1:-1:-1;;;;;5453:45:382;;408:42:282;5453:45:382;5449:176;;;-1:-1:-1;5530:9:382;:23;;5449:176;;;-1:-1:-1;5600:9:382;:14;5449:176;5642:13;5634:28;;;;-1:-1:-1;;;5634:28:382;;34440:2:635;5634:28:382;;;34422:21:635;34479:1;34459:18;;;34452:29;-1:-1:-1;;;34497:18:635;;;34490:32;34539:18;;5634:28:382;34238:325:635;5634:28:382;5673:21;-1:-1:-1;;;;;5697:35:382;;;:84;;5760:21;5697:84;;;5735:22;:20;:22::i;:::-;5673:108;;5792:88;5829:9;5840:12;:10;:12::i;:::-;5854:13;5869:10;5792:36;:88::i;5940:248::-;6067:21;6120:14;:12;:14::i;:::-;6104:30;;6144:37;6154:3;6159:21;6144:9;:37::i;2143:129:180:-;2193:32;2244:21;:19;:21::i;1771:239:170:-;1837:21;1861:26;:24;:26::i;:::-;1837:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:4;1909:26;:24;:26::i;:::-;:45;;;;;;;;:::i;:::-;;1970:33;1989:7;1998:4;1970:33;;;;;;;:::i;:::-;;;;;;;;1827:183;1771:239;:::o;5234:380:186:-;5381:6;5374:4;:13;5370:69;;;5403:25;;-1:-1:-1;;;5403:25:186;;;;;;;:::i;5370:69::-;5499:49;;;;;;;;5524:10;-1:-1:-1;;;;;5499:49:186;;;;;5541:4;5499:49;;;5449:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;:99;;;;-1:-1:-1;;;;;;5449:99:186;-1:-1:-1;;;;;5449:99:186;;;;;;;;;;;;;;;;5564:43;2708:25:635;;;5564:43:186;;;;5449:47;;5564:43;;2681:18:635;5564:43:186;;;;;;;5234:380;;;:::o;16989:255:46:-;17159:8;17083:23;:21;:23::i;:::-;41770:10;17083:63;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;17083:73:46;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:46;;;;;;;;;;;17182:55;;661:14:635;;654:22;636:41;;17083:73:46;;41770:10;;17182:55;;609:18:635;17182:55:46;;;;;;;16989:255;;:::o;24659:405::-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:46;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:46;:56::i;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:46;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;7664:124:238:-;7727:16;7762:19;7770:3;7762:7;:19::i;2800:501:188:-;2887:13;2912:30;2945:29;:27;:29::i;:::-;:38;;:42;2984:2;2945:42;;;;;;;;;;;:51;;2912:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:268;3092:4;:9;;;3132:4;:16;;;3176:4;:13;;;3221:4;:17;;;3272:7;3026:41;:268::i;2264:156:170:-;2323:41;2383:30;:28;:30::i;419:188:184:-;458:18;;312:46;357:1;320:33;312:46;:::i;:::-;301:58;;;;;;2708:25:635;;2696:2;2681:18;;2562:177;301:58:184;;;;-1:-1:-1;;301:58:184;;;;;;;;;291:69;;301:58;291:69;;;;;419:188;-1:-1:-1;;419:188:184:o;35086:484:46:-;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;-1:-1:-1;41770:10:46;-1:-1:-1;;;;;35274:28:46;;;;35257:45;35253:198;;;35321:44;35338:5;41770:10;17394:186;:::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:46;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:46;-1:-1:-1;;;;;35461:59:46;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;11320:140:382:-;11382:14;11415:38;:36;:38::i;7872:208::-;7946:4;7962:36;8001:25;:23;:25::i;:::-;8043:13;:20;;;;;;;;;;;-1:-1:-1;;;;;8043:30:382;;;;;;;;;-1:-1:-1;;8043:30:382;;;;;;7872:208::o;757:197:188:-;796:18;;550:55;604:1;558:42;550:55;:::i;2685:1388:238:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:238;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;499:180:173;538:18;;318:38;355:1;326:25;318:38;:::i;19095:513:46:-;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:46;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:46:o;9135:569:382:-;9482:35;-1:-1:-1;;;;;;;;;;;9514:1:382;9482:8;:35::i;:::-;9481:36;:58;;;;-1:-1:-1;;;;;;9521:18:382;;;;9481:58;:78;;;;-1:-1:-1;;;;;;9543:16:382;;;;9481:78;9477:221;;;9580:29;-1:-1:-1;;;;;;;;;;;9604:4:382;9580:8;:29::i;:::-;9579:30;:62;;;;;9614:27;-1:-1:-1;;;;;;;;;;;9638:2:382;9614:8;:27::i;:::-;9613:28;9579:62;9575:113;;;9661:12;;-1:-1:-1;;;9661:12:382;;35312:2:635;9661:12:382;;;35294:21:635;35351:1;35331:18;;;35324:29;-1:-1:-1;;;35369:18:635;;;35362:32;35411:18;;9661:12:382;35110:325:635;14865:443:46;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:46;;;;15229:63;;14865:443::o;715:183:186:-;754:18;;291:41;331:1;299:28;291:41;:::i;5818:123:238:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;508:385:282:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:282;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;34196:110:46:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;825:183:180:-;864:18;;654:41;694:1;662:28;654:41;:::i;27090:693:46:-;27280:99;;-1:-1:-1;;;27280:99:46;;27248:4;;-1:-1:-1;;;;;27280:56:46;;;;;:99;;41770:10;;27358:4;;27364:7;;27373:5;;27280:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:46;;;;;;;;-1:-1:-1;;27280:99:46;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:46;;27562:113;;27604:56;-1:-1:-1;;;27604:7:46;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:46;-1:-1:-1;;;27433:75:46;;-1:-1:-1;27090:693:46;;;;;;:::o;14426:361::-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:46;;;;-1:-1:-1;;;;;2074:3:46;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:46;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;5469:109:238:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;760:466:285:-;983:13;1008:29;1040:38;1055:8;1065:12;1040:14;:38::i;:::-;1008:70;;1088:17;1108:70;1127:4;1133:11;1146:15;1163:14;1108:18;:70::i;:::-;1088:90;;1195:24;1214:4;1195:18;:24::i;845:193:170:-;884:18;;677:51;727:1;685:38;677:51;:::i;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;41770:10:46;;8573:99:382:o;859:187:181:-;898:18;;478:45;522:1;486:32;478:45;:::i;2113:404:238:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:238;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:238;2488:12;;2532:292:282;2714:12;2732:2;-1:-1:-1;;;;;2732:7:282;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:282;;36611:2:635;2769:48:282;;;36593:21:635;36650:2;36630:18;;;36623:30;-1:-1:-1;;;36669:18:635;;;36662:58;36737:18;;2769:48:282;36409:352:635;2073:396:282;2234:3;-1:-1:-1;;;;;2225:12:282;:5;-1:-1:-1;;;;;2225:12:282;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:282;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:282;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:282;;2432:5;2439:3;2444:7;2397:34;:55::i;33381:736:46:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:46;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:46;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:46;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;2753:654:285:-;2893:22;;2949:26;;2852:13;;2893:26;;;;2949:30;;;2893:26;;2993:24;;;3005:12;2993:24;2989:156;;;3077:8;3112:12;3047:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3033:101;;;;;;2989:156;3158:8;3154:101;;;3226:8;3196:47;;;;;;;;:::i;3154:101::-;3268:12;3264:117;;;3348:12;3310:59;;;;;;;;:::i;3264:117::-;-1:-1:-1;;3391:9:285;;;;;;;;;-1:-1:-1;3391:9:285;;;2753:654;-1:-1:-1;;;2753:654:285:o;1470:701::-;1655:12;1762:4;1805:34;1824:14;1805:18;:34::i;:::-;1916:11;1969:9;2040:34;2059:14;2040:18;:34::i;:::-;2123:4;1698:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1679:485;;1470:701;;;;;;:::o;2309:187::-;2379:13;2468:19;2482:4;2468:13;:19::i;:::-;2418:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2404:85;;2309:187;;;:::o;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;42486:15:635;;;1111:68:228;;;42468:34:635;42538:15;;42518:18;;;42511:43;42570:18;;;42563:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;42403:18:635;;1111:68:228;42228:375:635;28229:2347:46;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:46;28371:53;;28390:34;-1:-1:-1;;;28390:7:46;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:46;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:46;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:46;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:46;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:46;;-1:-1:-1;;10326:240:382;305:703:290;361:13;578:10;574:51;;-1:-1:-1;;604:10:290;;;;;;;;;;;;-1:-1:-1;;;604:10:290;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:290;;-1:-1:-1;750:2:290;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:290;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:290;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:290;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:290;;;;;;;;-1:-1:-1;949:11:290;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:231;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:231;;;;;;;;;-1:-1:-1;813:9:231;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:231;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:231;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:231;;505:3026;-1:-1:-1;;;;;505:3026:231:o;3241:706:228:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;42927:2:635;3845:85:228;;;42909:21:635;42966:2;42946:18;;;42939:30;43005:34;42985:18;;;42978:62;-1:-1:-1;;;43056:18:635;;;43049:40;43106:19;;3845:85:228;42725:406:635;3827:223:286;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;-1:-1:-1;;;;;1427:19:286;;;5194:60;;;;-1:-1:-1;;;5194:60:286;;43745:2:635;5194:60:286;;;43727:21:635;43784:2;43764:18;;;43757:30;43823:31;43803:18;;;43796:59;43872:18;;5194:60:286;43543:353:635;5194:60:286;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:286;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:286:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:286;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:286;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:635;-1:-1:-1;;;;;;88:32:635;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:635;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:635;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:635:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1461:203::-;-1:-1:-1;;;;;1625:32:635;;;;1607:51;;1595:2;1580:18;;1461:203::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:635;;1669:180;-1:-1:-1;1669:180:635:o;1854:131::-;-1:-1:-1;;;;;1929:31:635;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:315;2058:6;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2174:9;2161:23;2193:31;2218:5;2193:31;:::i;:::-;2243:5;2295:2;2280:18;;;;2267:32;;-1:-1:-1;;;1990:315:635:o;2310:247::-;2369:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;2477:9;2464:23;2496:31;2521:5;2496:31;:::i;2929:163::-;2996:5;3041:3;3032:6;3027:3;3023:16;3019:26;3016:46;;;3058:1;3055;3048:12;3016:46;-1:-1:-1;3080:6:635;2929:163;-1:-1:-1;2929:163:635:o;3097:854::-;3236:6;3244;3252;3260;3268;3276;3329:3;3317:9;3308:7;3304:23;3300:33;3297:53;;;3346:1;3343;3336:12;3297:53;3382:9;3369:23;3359:33;;3442:2;3431:9;3427:18;3414:32;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3557:2:635;3542:18;;3529:32;;-1:-1:-1;3613:2:635;3598:18;;3585:32;3626:33;3585:32;3626:33;:::i;:::-;3678:7;-1:-1:-1;3732:3:635;3717:19;;3704:33;;-1:-1:-1;3788:3:635;3773:19;;3760:33;-1:-1:-1;;;;;3805:30:635;;3802:50;;;3848:1;3845;3838:12;3802:50;3871:74;3937:7;3928:6;3917:9;3913:22;3871:74;:::i;:::-;3861:84;;;3097:854;;;;;;;;:::o;3956:456::-;4033:6;4041;4049;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;4157:9;4144:23;4176:31;4201:5;4176:31;:::i;:::-;4226:5;-1:-1:-1;4283:2:635;4268:18;;4255:32;4296:33;4255:32;4296:33;:::i;:::-;3956:456;;4348:7;;-1:-1:-1;;;4402:2:635;4387:18;;;;4374:32;;3956:456::o;4417:248::-;4485:6;4493;4546:2;4534:9;4525:7;4521:23;4517:32;4514:52;;;4562:1;4559;4552:12;4514:52;-1:-1:-1;;4585:23:635;;;4655:2;4640:18;;;4627:32;;-1:-1:-1;4417:248:635:o;4670:274::-;-1:-1:-1;;;;;4862:32:635;;;;4844:51;;4926:2;4911:18;;4904:34;4832:2;4817:18;;4670:274::o;4949:118::-;5035:5;5028:13;5021:21;5014:5;5011:32;5001:60;;5057:1;5054;5047:12;5072:241;5128:6;5181:2;5169:9;5160:7;5156:23;5152:32;5149:52;;;5197:1;5194;5187:12;5149:52;5236:9;5223:23;5255:28;5277:5;5255:28;:::i;5608:443::-;5715:6;5723;5776:2;5764:9;5755:7;5751:23;5747:32;5744:52;;;5792:1;5789;5782:12;5744:52;5832:9;5819:23;-1:-1:-1;;;;;5857:6:635;5854:30;5851:50;;;5897:1;5894;5887:12;5851:50;5920:74;5986:7;5977:6;5966:9;5962:22;5920:74;:::i;:::-;5910:84;6041:2;6026:18;;;;6013:32;;-1:-1:-1;;;;5608:443:635:o;6056:837::-;6251:2;6240:9;6233:21;6296:6;6290:13;6285:2;6274:9;6270:18;6263:41;6358:2;6350:6;6346:15;6340:22;6335:2;6324:9;6320:18;6313:50;6417:2;6409:6;6405:15;6399:22;6394:2;6383:9;6379:18;6372:50;6477:2;6469:6;6465:15;6459:22;6453:3;6442:9;6438:19;6431:51;6537:3;6529:6;6525:16;6519:23;6513:3;6502:9;6498:19;6491:52;6598:3;6590:6;6586:16;6580:23;6574:3;6563:9;6559:19;6552:52;6687:1;6683;6678:3;6674:11;6670:19;6663:3;6655:6;6651:16;6645:23;6641:49;6635:3;6624:9;6620:19;6613:78;6214:4;6738:3;6730:6;6726:16;6720:23;6762:6;6804:2;6799;6788:9;6784:18;6777:30;;6824:63;6882:3;6871:9;6867:19;6853:12;6824:63;:::i;6898:785::-;7025:6;7033;7041;7094:2;7082:9;7073:7;7069:23;7065:32;7062:52;;;7110:1;7107;7100:12;7062:52;7150:9;7137:23;-1:-1:-1;;;;;7220:2:635;7212:6;7209:14;7206:34;;;7236:1;7233;7226:12;7206:34;7274:6;7263:9;7259:22;7249:32;;7319:7;7312:4;7308:2;7304:13;7300:27;7290:55;;7341:1;7338;7331:12;7290:55;7381:2;7368:16;7407:2;7399:6;7396:14;7393:34;;;7423:1;7420;7413:12;7393:34;7478:7;7471:4;7461:6;7458:1;7454:14;7450:2;7446:23;7442:34;7439:47;7436:67;;;7499:1;7496;7489:12;7436:67;7530:4;7522:13;;;;-1:-1:-1;7554:6:635;-1:-1:-1;;7595:20:635;;7582:34;7625:28;7582:34;7625:28;:::i;:::-;7672:5;7662:15;;;6898:785;;;;;:::o;7688:632::-;7859:2;7911:21;;;7981:13;;7884:18;;;8003:22;;;7830:4;;7859:2;8082:15;;;;8056:2;8041:18;;;7830:4;8125:169;8139:6;8136:1;8133:13;8125:169;;;8200:13;;8188:26;;8269:15;;;;8234:12;;;;8161:1;8154:9;8125:169;;8325:127;8386:10;8381:3;8377:20;8374:1;8367:31;8417:4;8414:1;8407:15;8441:4;8438:1;8431:15;8457:248;8524:2;8518:9;8566:4;8554:17;;-1:-1:-1;;;;;8586:34:635;;8622:22;;;8583:62;8580:88;;;8648:18;;:::i;:::-;8684:2;8677:22;8457:248;:::o;8710:718::-;8752:5;8805:3;8798:4;8790:6;8786:17;8782:27;8772:55;;8823:1;8820;8813:12;8772:55;8859:6;8846:20;-1:-1:-1;;;;;8922:2:635;8918;8915:10;8912:36;;;8928:18;;:::i;:::-;9003:2;8997:9;8971:2;9057:13;;-1:-1:-1;;9053:22:635;;;9077:2;9049:31;9045:40;9033:53;;;9101:18;;;9121:22;;;9098:46;9095:72;;;9147:18;;:::i;:::-;9187:10;9183:2;9176:22;9222:2;9214:6;9207:18;9268:3;9261:4;9256:2;9248:6;9244:15;9240:26;9237:35;9234:55;;;9285:1;9282;9275:12;9234:55;9349:2;9342:4;9334:6;9330:17;9323:4;9315:6;9311:17;9298:54;9396:1;9389:4;9384:2;9376:6;9372:15;9368:26;9361:37;9416:6;9407:15;;;;;;8710:718;;;;:::o;9433:1005::-;9581:6;9589;9597;9605;9613;9621;9674:3;9662:9;9653:7;9649:23;9645:33;9642:53;;;9691:1;9688;9681:12;9642:53;9730:9;9717:23;9749:31;9774:5;9749:31;:::i;:::-;9799:5;-1:-1:-1;9851:2:635;9836:18;;9823:32;;-1:-1:-1;9907:2:635;9892:18;;9879:32;9920:33;9879:32;9920:33;:::i;:::-;9972:7;-1:-1:-1;10026:2:635;10011:18;;9998:32;;-1:-1:-1;10081:3:635;10066:19;;10053:33;-1:-1:-1;;;;;10135:14:635;;;10132:34;;;10162:1;10159;10152:12;10132:34;10185:74;10251:7;10242:6;10231:9;10227:22;10185:74;:::i;:::-;10175:84;;10312:3;10301:9;10297:19;10284:33;10268:49;;10342:2;10332:8;10329:16;10326:36;;;10358:1;10355;10348:12;10326:36;;10381:51;10424:7;10413:8;10402:9;10398:24;10381:51;:::i;10443:321::-;10512:6;10565:2;10553:9;10544:7;10540:23;10536:32;10533:52;;;10581:1;10578;10571:12;10533:52;10621:9;10608:23;-1:-1:-1;;;;;10646:6:635;10643:30;10640:50;;;10686:1;10683;10676:12;10640:50;10709:49;10750:7;10741:6;10730:9;10726:22;10709:49;:::i;10769:383::-;10846:6;10854;10862;10915:2;10903:9;10894:7;10890:23;10886:32;10883:52;;;10931:1;10928;10921:12;10883:52;10970:9;10957:23;10989:31;11014:5;10989:31;:::i;:::-;11039:5;11091:2;11076:18;;11063:32;;-1:-1:-1;11142:2:635;11127:18;;;11114:32;;10769:383;-1:-1:-1;;;10769:383:635:o;11157:::-;11234:6;11242;11250;11303:2;11291:9;11282:7;11278:23;11274:32;11271:52;;;11319:1;11316;11309:12;11271:52;11355:9;11342:23;11332:33;;11415:2;11404:9;11400:18;11387:32;11428:31;11453:5;11428:31;:::i;11545:382::-;11610:6;11618;11671:2;11659:9;11650:7;11646:23;11642:32;11639:52;;;11687:1;11684;11677:12;11639:52;11726:9;11713:23;11745:31;11770:5;11745:31;:::i;:::-;11795:5;-1:-1:-1;11852:2:635;11837:18;;11824:32;11865:30;11824:32;11865:30;:::i;:::-;11914:7;11904:17;;;11545:382;;;;;:::o;11932:315::-;12000:6;12008;12061:2;12049:9;12040:7;12036:23;12032:32;12029:52;;;12077:1;12074;12067:12;12029:52;12113:9;12100:23;12090:33;;12173:2;12162:9;12158:18;12145:32;12186:31;12211:5;12186:31;:::i;12252:665::-;12347:6;12355;12363;12371;12424:3;12412:9;12403:7;12399:23;12395:33;12392:53;;;12441:1;12438;12431:12;12392:53;12480:9;12467:23;12499:31;12524:5;12499:31;:::i;:::-;12549:5;-1:-1:-1;12606:2:635;12591:18;;12578:32;12619:33;12578:32;12619:33;:::i;:::-;12671:7;-1:-1:-1;12725:2:635;12710:18;;12697:32;;-1:-1:-1;12780:2:635;12765:18;;12752:32;-1:-1:-1;;;;;12796:30:635;;12793:50;;;12839:1;12836;12829:12;12793:50;12862:49;12903:7;12894:6;12883:9;12879:22;12862:49;:::i;:::-;12852:59;;;12252:665;;;;;;;:::o;13702:388::-;13770:6;13778;13831:2;13819:9;13810:7;13806:23;13802:32;13799:52;;;13847:1;13844;13837:12;13799:52;13886:9;13873:23;13905:31;13930:5;13905:31;:::i;:::-;13955:5;-1:-1:-1;14012:2:635;13997:18;;13984:32;14025:33;13984:32;14025:33;:::i;14095:1865::-;14315:4;14344:2;14384;14373:9;14369:18;14414:2;14403:9;14396:21;14437:6;14472;14466:13;14503:6;14495;14488:22;14529:2;14519:12;;14562:2;14551:9;14547:18;14540:25;;14624:2;14614:6;14611:1;14607:14;14596:9;14592:30;14588:39;14662:2;14654:6;14650:15;14683:1;14693:1238;14707:6;14704:1;14701:13;14693:1238;;;-1:-1:-1;;14802:22:635;;;14798:31;;14786:44;;14853:13;;14894:9;;14879:25;;14943:11;;14937:18;14975:15;;;14968:27;;;15030:19;;15072:4;15096:15;;;15089:27;;;15143:62;15200:3;15188:16;;15030:19;15143:62;:::i;:::-;15129:76;;15264:2;15250:12;15246:21;15240:28;15291:2;15355;15346:6;15338;15334:19;15330:28;15325:2;15317:6;15313:15;15306:53;15386:52;15431:6;15415:14;15386:52;:::i;:::-;15372:66;;15497:2;15483:12;15479:21;15473:28;15451:50;;15563:2;15554:6;15546;15542:19;15538:28;15533:2;15525:6;15521:15;15514:53;15594:52;15639:6;15623:14;15594:52;:::i;:::-;15687:21;;15681:28;15751:19;;;15747:28;;15741:3;15729:16;;15722:54;15681:28;15580:66;-1:-1:-1;15799:52:635;;-1:-1:-1;15580:66:635;;-1:-1:-1;15681:28:635;15799:52;:::i;:::-;15909:12;;;;15789:62;-1:-1:-1;;;15874:15:635;;;;-1:-1:-1;14729:1:635;14722:9;14693:1238;;;-1:-1:-1;15948:6:635;;14095:1865;-1:-1:-1;;;;;;;;14095:1865:635:o;15965:380::-;16044:1;16040:12;;;;16087;;;16108:61;;16162:4;16154:6;16150:17;16140:27;;16108:61;16215:2;16207:6;16204:14;16184:18;16181:38;16178:161;;;16261:10;16256:3;16252:20;16249:1;16242:31;16296:4;16293:1;16286:15;16324:4;16321:1;16314:15;16350:304;-1:-1:-1;;;;;16580:15:635;;;16562:34;;16632:15;;16627:2;16612:18;;16605:43;16512:2;16497:18;;16350:304::o;16659:245::-;16726:6;16779:2;16767:9;16758:7;16754:23;16750:32;16747:52;;;16795:1;16792;16785:12;16747:52;16827:9;16821:16;16846:28;16868:5;16846:28;:::i;16909:338::-;17111:2;17093:21;;;17150:2;17130:18;;;17123:30;-1:-1:-1;;;17184:2:635;17169:18;;17162:44;17238:2;17223:18;;16909:338::o;17252:411::-;17454:2;17436:21;;;17493:2;17473:18;;;17466:30;17532:34;17527:2;17512:18;;17505:62;-1:-1:-1;;;17598:2:635;17583:18;;17576:45;17653:3;17638:19;;17252:411::o;18088:545::-;18181:4;18187:6;18247:11;18234:25;18341:2;18337:7;18326:8;18310:14;18306:29;18302:43;18282:18;18278:68;18268:96;;18360:1;18357;18350:12;18268:96;18387:33;;18439:20;;;-1:-1:-1;;;;;;18471:30:635;;18468:50;;;18514:1;18511;18504:12;18468:50;18547:4;18535:17;;-1:-1:-1;18598:1:635;18594:14;;;18578;18574:35;18564:46;;18561:66;;;18623:1;18620;18613:12;18561:66;18088:545;;;;;:::o;19444:127::-;19505:10;19500:3;19496:20;19493:1;19486:31;19536:4;19533:1;19526:15;19560:4;19557:1;19550:15;19576:128;19616:3;19647:1;19643:6;19640:1;19637:13;19634:39;;;19653:18;;:::i;:::-;-1:-1:-1;19689:9:635;;19576:128::o;20723:168::-;20763:7;20829:1;20825;20821:6;20817:14;20814:1;20811:21;20806:1;20799:9;20792:17;20788:45;20785:71;;;20836:18;;:::i;:::-;-1:-1:-1;20876:9:635;;20723:168::o;20896:127::-;20957:10;20952:3;20948:20;20945:1;20938:31;20988:4;20985:1;20978:15;21012:4;21009:1;21002:15;21028:120;21068:1;21094;21084:35;;21099:18;;:::i;:::-;-1:-1:-1;21133:9:635;;21028:120::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:333;22207:4;22265:11;22252:25;22359:3;22355:8;22344;22328:14;22324:29;22320:44;22300:18;22296:69;22286:97;;22379:1;22376;22369:12;22286:97;22400:33;;;;;22106:333;-1:-1:-1;;22106:333:635:o;23121:522::-;23199:4;23205:6;23265:11;23252:25;23359:2;23355:7;23344:8;23328:14;23324:29;23320:43;23300:18;23296:68;23286:96;;23378:1;23375;23368:12;23286:96;23405:33;;23457:20;;;-1:-1:-1;;;;;;23489:30:635;;23486:50;;;23532:1;23529;23522:12;23486:50;23565:4;23553:17;;-1:-1:-1;23596:14:635;23592:27;;;23582:38;;23579:58;;;23633:1;23630;23623:12;23774:545;23876:2;23871:3;23868:11;23865:448;;;23912:1;23937:5;23933:2;23926:17;23982:4;23978:2;23968:19;24052:2;24040:10;24036:19;24033:1;24029:27;24023:4;24019:38;24088:4;24076:10;24073:20;24070:47;;;-1:-1:-1;24111:4:635;24070:47;24166:2;24161:3;24157:12;24154:1;24150:20;24144:4;24140:31;24130:41;;24221:82;24239:2;24232:5;24229:13;24221:82;;;24284:17;;;24265:1;24254:13;24221:82;;24495:1190;-1:-1:-1;;;;;24598:3:635;24595:27;24592:53;;;24625:18;;:::i;:::-;24654:94;24744:3;24704:38;24736:4;24730:11;24704:38;:::i;:::-;24698:4;24654:94;:::i;:::-;24774:1;24799:2;24794:3;24791:11;24816:1;24811:616;;;;25471:1;25488:3;25485:93;;;-1:-1:-1;25544:19:635;;;25531:33;25485:93;-1:-1:-1;;24452:1:635;24448:11;;;24444:24;24440:29;24430:40;24476:1;24472:11;;;24427:57;25591:78;;24784:895;;24811:616;23721:1;23714:14;;;23758:4;23745:18;;-1:-1:-1;;24847:17:635;;;24948:9;24970:229;24984:7;24981:1;24978:14;24970:229;;;25073:19;;;25060:33;25045:49;;25180:4;25165:20;;;;25133:1;25121:14;;;;25000:12;24970:229;;;24974:3;25227;25218:7;25215:16;25212:159;;;25351:1;25347:6;25341:3;25335;25332:1;25328:11;25324:21;25320:34;25316:39;25303:9;25298:3;25294:19;25281:33;25277:79;25269:6;25262:95;25212:159;;;25414:1;25408:3;25405:1;25401:11;25397:19;25391:4;25384:33;24784:895;;24495:1190;;;:::o;25690:956::-;25869:5;25856:19;25850:4;25843:33;25930:2;25923:5;25919:14;25906:28;25902:1;25896:4;25892:12;25885:50;25989:2;25982:5;25978:14;25965:28;25961:1;25955:4;25951:12;25944:50;26048:2;26041:5;26037:14;26024:28;26020:1;26014:4;26010:12;26003:50;26107:3;26100:5;26096:15;26083:29;26079:1;26073:4;26069:12;26062:51;26167:3;26160:5;26156:15;26143:29;26139:1;26133:4;26129:12;26122:51;26210:1;26204:4;26200:12;26260:3;26253:5;26249:15;26236:29;26274:33;26299:7;26274:33;:::i;:::-;26342:17;;-1:-1:-1;;;;;;26338:48:635;-1:-1:-1;;;;;26388:33:635;;;;26335:87;26316:107;;26466:66;26527:3;26516:15;;26520:5;26466:66;:::i;:::-;26541:99;26626:13;26613:11;26609:1;26603:4;26599:12;26541:99;:::i;26651:135::-;26690:3;-1:-1:-1;;26711:17:635;;26708:43;;;26731:18;;:::i;:::-;-1:-1:-1;26778:1:635;26767:13;;26651:135::o;26791:504::-;26850:5;26857:6;26917:3;26904:17;27003:2;26999:7;26988:8;26972:14;26968:29;26964:43;26944:18;26940:68;26930:96;;27022:1;27019;27012:12;26930:96;27050:33;;27154:4;27141:18;;;-1:-1:-1;27102:21:635;;-1:-1:-1;;;;;;27171:30:635;;27168:50;;;27214:1;27211;27204:12;27168:50;27264:6;27248:14;27244:27;27234:8;27230:42;27227:62;;;27285:1;27282;27275:12;27300:267;27389:6;27384:3;27377:19;27441:6;27434:5;27427:4;27422:3;27418:14;27405:43;-1:-1:-1;27493:1:635;27468:16;;;27486:4;27464:27;;;27457:38;;;;27549:2;27528:15;;;-1:-1:-1;;27524:29:635;27515:39;;;27511:50;;27300:267::o;27572:2051::-;27843:2;27895:21;;;27868:18;;;27951:22;;;27814:4;;27992:2;28010:18;;;28074:1;28070:14;;;28055:30;;28051:39;;28113:6;27814:4;;28168:1372;28184:6;28179:3;28176:15;28168:1372;;;28253:22;;;-1:-1:-1;;28249:36:635;28237:49;;28325:20;;28400:14;28396:27;;;-1:-1:-1;;28392:42:635;28368:67;;28358:95;;28449:1;28446;28439:12;28358:95;28479:31;;28567:19;;28552:35;;28610:4;28664:14;;;28651:28;28634:15;;;28627:53;28730:14;;;28717:28;28700:15;;;28693:53;28796:14;;;28783:28;28766:15;;;28759:53;28835:4;28889:14;;;28876:28;28859:15;;;28852:53;28928:4;28982:14;;;28969:28;28952:15;;;28945:53;28533:6;;29021:4;29066:14;;;29053:28;29094:33;29053:28;29094:33;:::i;:::-;-1:-1:-1;;;;;29164:33:635;29147:15;;;29140:58;29221:4;29272:54;29311:14;;;29315:5;29272:54;:::i;:::-;29238:88;;29363:2;29358;29350:6;29346:15;29339:27;29389:71;29456:2;29448:6;29444:15;29430:12;29416;29389:71;:::i;:::-;29518:12;;;;29379:81;-1:-1:-1;;;29483:15:635;;;;;-1:-1:-1;;28210:1:635;28201:11;28168:1372;;;-1:-1:-1;;;470:13:635;;463:21;29611:4;29596:20;;451:34;29557:6;-1:-1:-1;29572:45:635;;-1:-1:-1;;;400:91:635;29628:125;29668:4;29696:1;29693;29690:8;29687:34;;;29701:18;;:::i;:::-;-1:-1:-1;29738:9:635;;29628:125::o;29758:136::-;29797:3;29825:5;29815:39;;29834:18;;:::i;:::-;-1:-1:-1;;;29870:18:635;;29758:136::o;30570:251::-;30640:6;30693:2;30681:9;30672:7;30668:23;30664:32;30661:52;;;30709:1;30706;30699:12;30661:52;30741:9;30735:16;30760:31;30785:5;30760:31;:::i;30826:184::-;30896:6;30949:2;30937:9;30928:7;30924:23;30920:32;30917:52;;;30965:1;30962;30955:12;30917:52;-1:-1:-1;30988:16:635;;30826:184;-1:-1:-1;30826:184:635:o;31267:339::-;31469:2;31451:21;;;31508:2;31488:18;;;31481:30;-1:-1:-1;;;31542:2:635;31527:18;;31520:45;31597:2;31582:18;;31267:339::o;32031:1044::-;32157:9;32216:4;32208:5;32192:14;32188:26;32184:37;32181:57;;;32234:1;32231;32224:12;32181:57;32262:17;;:::i;:::-;32315:5;32302:19;-1:-1:-1;;;;;32381:2:635;32373:6;32370:14;32367:34;;;32397:1;32394;32387:12;32367:34;32426:52;32463:14;32454:6;32447:5;32443:18;32426:52;:::i;:::-;32417:7;32410:69;32528:2;32521:5;32517:14;32504:28;32488:44;;32557:2;32547:8;32544:16;32541:36;;;32573:1;32570;32563:12;32541:36;32611:54;32650:14;32639:8;32632:5;32628:20;32611:54;:::i;:::-;32606:2;32597:7;32593:16;32586:80;32715:2;32708:5;32704:14;32691:28;32675:44;;32744:2;32734:8;32731:16;32728:36;;;32760:1;32757;32750:12;32728:36;32798:54;32837:14;32826:8;32819:5;32815:20;32798:54;:::i;:::-;32793:2;32784:7;32780:16;32773:80;32902:2;32895:5;32891:14;32878:28;32862:44;;32931:2;32921:8;32918:16;32915:36;;;32947:1;32944;32937:12;32915:36;;32985:54;33024:14;33013:8;33006:5;33002:20;32985:54;:::i;:::-;32980:2;32967:16;;32960:80;-1:-1:-1;32971:7:635;32031:1044;-1:-1:-1;;32031:1044:635:o;33080:819::-;33413:3;33402:9;33395:22;33376:4;33440:63;33498:3;33487:9;33483:19;33475:6;33467;33440:63;:::i;:::-;33551:9;33543:6;33539:22;33534:2;33523:9;33519:18;33512:50;33585;33628:6;33620;33612;33585:50;:::i;:::-;33571:64;;33683:9;33675:6;33671:22;33666:2;33655:9;33651:18;33644:50;33717;33760:6;33752;33744;33717:50;:::i;:::-;33703:64;;33815:9;33807:6;33803:22;33798:2;33787:9;33783:18;33776:50;33843;33886:6;33878;33870;33843:50;:::i;:::-;33835:58;33080:819;-1:-1:-1;;;;;;;;;;;33080:819:635:o;34568:405::-;34765:2;34754:9;34747:21;34728:4;34791:56;34843:2;34832:9;34828:18;34820:6;34791:56;:::i;:::-;34895:9;34887:6;34883:22;34878:2;34867:9;34863:18;34856:50;34923:44;34960:6;34952;34923:44;:::i;:::-;34915:52;34568:405;-1:-1:-1;;;;;34568:405:635:o;34978:127::-;35039:10;35034:3;35030:20;35027:1;35020:31;35070:4;35067:1;35060:15;35094:4;35091:1;35084:15;35440:500;-1:-1:-1;;;;;35709:15:635;;;35691:34;;35761:15;;35756:2;35741:18;;35734:43;35808:2;35793:18;;35786:34;;;35856:3;35851:2;35836:18;;35829:31;;;35634:4;;35877:57;;35914:19;;35906:6;35877:57;:::i;:::-;35869:65;35440:500;-1:-1:-1;;;;;;35440:500:635:o;35945:249::-;36014:6;36067:2;36055:9;36046:7;36042:23;36038:32;36035:52;;;36083:1;36080;36073:12;36035:52;36115:9;36109:16;36134:30;36158:5;36134:30;:::i;36766:185::-;36808:3;36846:5;36840:12;36861:52;36906:6;36901:3;36894:4;36887:5;36883:16;36861:52;:::i;:::-;36929:16;;;;;36766:185;-1:-1:-1;;36766:185:635:o;36956:995::-;-1:-1:-1;;;37456:43:635;;37522:13;;37438:3;;37544:61;37522:13;37594:1;37585:11;;37578:4;37566:17;;37544:61;:::i;:::-;-1:-1:-1;;;37664:1:635;37624:16;;;37656:10;;;37649:73;37747:13;;37769:63;37747:13;37818:2;37810:11;;37803:4;37791:17;;37769:63;:::i;:::-;-1:-1:-1;;;37892:2:635;37851:17;;;;37884:11;;;37877:41;37942:2;37934:11;;36956:995;-1:-1:-1;;;;36956:995:635:o;37956:617::-;-1:-1:-1;;;38307:43:635;;38373:13;;38289:3;;38395:61;38373:13;38445:1;38436:11;;38429:4;38417:17;;38395:61;:::i;:::-;-1:-1:-1;;;38515:1:635;38475:16;;;;38507:10;;;38500:40;-1:-1:-1;38564:2:635;38556:11;;37956:617;-1:-1:-1;37956:617:635:o;38578:635::-;-1:-1:-1;;;38929:59:635;;39011:13;;38911:3;;39033:62;39011:13;39083:2;39074:12;;39067:4;39055:17;;39033:62;:::i;:::-;-1:-1:-1;;;39154:2:635;39114:16;;;;39146:11;;;39139:41;-1:-1:-1;39204:2:635;39196:11;;38578:635;-1:-1:-1;38578:635:635:o;39502:2268::-;-1:-1:-1;;;40699:45:635;;40767:13;;40681:3;;40789:62;40767:13;40839:2;40830:12;;40823:4;40811:17;;40789:62;:::i;:::-;-1:-1:-1;;;40910:2:635;40870:16;;;40902:11;;;40895:24;40944:13;;40966:63;40944:13;41015:2;41007:11;;41000:4;40988:17;;40966:63;:::i;:::-;-1:-1:-1;;;41128:2:635;41048:17;;;;41120:11;;;41113:23;;;-1:-1:-1;;;41160:2:635;41152:11;;41145:63;41233:13;;41255:63;41233:13;41304:2;41296:11;;41289:4;41277:17;;41255:63;:::i;:::-;41378:2;41337:17;;41370:11;;;41363:23;41411:13;;41433:63;41411:13;41482:2;41474:11;;41467:4;41455:17;;41433:63;:::i;:::-;-1:-1:-1;;;41556:2:635;41515:17;;;;41548:11;;;41541:80;41637:127;41667:96;41693:69;41723:38;41757:2;41749:11;;41741:6;41723:38;:::i;:::-;-1:-1:-1;;;39283:47:635;;39355:2;39346:12;;39218:146;41693:69;41685:6;41667:96;:::i;:::-;-1:-1:-1;;;39434:30:635;;39489:1;39480:11;;39369:128;41637:127;41630:134;39502:2268;-1:-1:-1;;;;;;;;;39502:2268:635:o;41775:448::-;42037:31;42032:3;42025:44;42007:3;42098:6;42092:13;42114:62;42169:6;42164:2;42159:3;42155:12;42148:4;42140:6;42136:17;42114:62;:::i;:::-;42196:16;;;;42214:2;42192:25;;41775:448;-1:-1:-1;;41775:448:635:o;42608:112::-;42640:1;42666;42656:35;;42671:18;;:::i;:::-;-1:-1:-1;42705:9:635;;42608:112::o;43901:274::-;44030:3;44068:6;44062:13;44084:53;44130:6;44125:3;44118:4;44110:6;44106:17;44084:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "deleteSharedMetadata(bytes32)": "1ebb2422",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getAllSharedMetadata()": "fc3c2a73",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string),bytes32)": "696b0c1a",
    "startTokenId()": "e6798baa",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"SharedMetadataDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"deleteSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataWithId[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataDeleted(bytes32)\":{\"notice\":\"Emitted when shared metadata is deleted.\"},\"SharedMetadataUpdated(bytes32,string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"deleteSharedMetadata(bytes32)\":{\"notice\":\"Delete shared metadata for NFTs\"},\"getAllSharedMetadata()\":{\"notice\":\"Get all shared metadata\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string),bytes32)\":{\"notice\":\"Set shared metadata for NFTs\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":\"EvolvingNFTLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff\",\"dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv\"]},\"contracts/extension/interface/ISharedMetadataBatch.sol\":{\"keccak256\":\"0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349\",\"dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x3723802e4a7e45461496e8618d2b765120d858618d9e94366e99ff1216b497f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dd48b03b93f4fc15384ddc210978cd97047a8facb03ee52056f41aafae2c222\",\"dweb:/ipfs/QmZkenMQRfTshbmQmF2gBJebz24fQ6Bvq7LqG8wtHaaPkM\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0x271009821a07ce70f98610021a8b3a3be3b1959359350e343f3c9ed5bf2b74fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a511339f8f28c7ed8714c28d6c79c5cb08c75e09c2b22b61f29718a47b841eb9\",\"dweb:/ipfs/QmdSUMu7q9d7yXc45QBRbGy7acuwwjhF1gUbJKE58SZ2oS\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0xc2c7a3bb247e9dec06aca01880f5d17a3e1a35e1ae6d324a1cae26487ae9e57c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b6a0c3954b2993091c2c9655717da4d940cae4d32a185205724d934524842b43\",\"dweb:/ipfs/QmYjKwtF9suUgLzjjdC1kWRkby1AP5DWjcgXS9NFKkkCw5\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60\",\"dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0x41e62b6df712206bc4e3f7ef3a43d74a1263efec5d0c11faabb7312927221ec1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31d450a434238081f4c321ebfac9968f0fb8c036759cf4052dd1859321438bdc\",\"dweb:/ipfs/QmZbMcm6pYeGGMK54TWwmDUCDRrworyjjf831E3QRaHBLo\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x1cd42da5463880831d5b9a7799020e0804b0e11620ce833b4ded1cd8c6fe8441\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b84186b796f42a97f5d362f94a90b5fc5dc726d7e87cda2d98099c0b4fb494d\",\"dweb:/ipfs/QmVbbdhtYJUegEwBhYt6Zj26U6xwSDjjUif2K2kzStC8Nu\"]},\"contracts/extension/upgradeable/RulesEngine.sol\":{\"keccak256\":\"0xbe43bbec62ca3c78eca78d12cc470747bd6fce947784e36d3b38ac87c298fed4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ce38f54bb02708e833183564865609a5d33bef1d00ba318a9c62dbe6b558eee\",\"dweb:/ipfs/Qmc9eKmooz53UG8hxjfUqT3uExFwejuTWn1QLE6BNt9Gnw\"]},\"contracts/extension/upgradeable/SharedMetadataBatch.sol\":{\"keccak256\":\"0xdc9a68bb3ad731bcbf6b767f521b48b8b7d7ad8e4f0aba56674ce57887a14fb8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdf6b0c9fe3877354fb26d3aa98bf92633cfcf3f637869e1b34e038ead9c4ec3\",\"dweb:/ipfs/QmQ6e1Vs4MK3VtUyv3HeEriD5TGhdnJpH9rEFazBov8coa\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/external-deps/openzeppelin/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1\",\"dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":{\"keccak256\":\"0x4b013d3d29b509ff238d8da1d3de436b83e39fd2c13f6a02b95853525bda7e4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a05bb7407a4131cf2d053e3f22401d67dc45f6323acc176230a537ccfaf5f4ff\",\"dweb:/ipfs/QmYcpopQcPTeir9KBat8FoxWhiXEUsHuChLsWoBipxa17M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SharedMetadataDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSharedMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSharedMetadata",
          "outputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
              "name": "metadata",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageURI",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "animationURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "deleteSharedMetadata(bytes32)": {
            "notice": "Delete shared metadata for NFTs"
          },
          "getAllSharedMetadata()": {
            "notice": "Get all shared metadata"
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string),bytes32)": {
            "notice": "Set shared metadata for NFTs"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": "EvolvingNFTLogic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d",
        "urls": [
          "bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff",
          "dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadataBatch.sol": {
        "keccak256": "0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86",
        "urls": [
          "bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349",
          "dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x3723802e4a7e45461496e8618d2b765120d858618d9e94366e99ff1216b497f3",
        "urls": [
          "bzz-raw://4dd48b03b93f4fc15384ddc210978cd97047a8facb03ee52056f41aafae2c222",
          "dweb:/ipfs/QmZkenMQRfTshbmQmF2gBJebz24fQ6Bvq7LqG8wtHaaPkM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0x271009821a07ce70f98610021a8b3a3be3b1959359350e343f3c9ed5bf2b74fb",
        "urls": [
          "bzz-raw://a511339f8f28c7ed8714c28d6c79c5cb08c75e09c2b22b61f29718a47b841eb9",
          "dweb:/ipfs/QmdSUMu7q9d7yXc45QBRbGy7acuwwjhF1gUbJKE58SZ2oS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0xc2c7a3bb247e9dec06aca01880f5d17a3e1a35e1ae6d324a1cae26487ae9e57c",
        "urls": [
          "bzz-raw://b6a0c3954b2993091c2c9655717da4d940cae4d32a185205724d934524842b43",
          "dweb:/ipfs/QmYjKwtF9suUgLzjjdC1kWRkby1AP5DWjcgXS9NFKkkCw5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6",
        "urls": [
          "bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60",
          "dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0x41e62b6df712206bc4e3f7ef3a43d74a1263efec5d0c11faabb7312927221ec1",
        "urls": [
          "bzz-raw://31d450a434238081f4c321ebfac9968f0fb8c036759cf4052dd1859321438bdc",
          "dweb:/ipfs/QmZbMcm6pYeGGMK54TWwmDUCDRrworyjjf831E3QRaHBLo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x1cd42da5463880831d5b9a7799020e0804b0e11620ce833b4ded1cd8c6fe8441",
        "urls": [
          "bzz-raw://7b84186b796f42a97f5d362f94a90b5fc5dc726d7e87cda2d98099c0b4fb494d",
          "dweb:/ipfs/QmVbbdhtYJUegEwBhYt6Zj26U6xwSDjjUif2K2kzStC8Nu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/RulesEngine.sol": {
        "keccak256": "0xbe43bbec62ca3c78eca78d12cc470747bd6fce947784e36d3b38ac87c298fed4",
        "urls": [
          "bzz-raw://5ce38f54bb02708e833183564865609a5d33bef1d00ba318a9c62dbe6b558eee",
          "dweb:/ipfs/Qmc9eKmooz53UG8hxjfUqT3uExFwejuTWn1QLE6BNt9Gnw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/SharedMetadataBatch.sol": {
        "keccak256": "0xdc9a68bb3ad731bcbf6b767f521b48b8b7d7ad8e4f0aba56674ce57887a14fb8",
        "urls": [
          "bzz-raw://bdf6b0c9fe3877354fb26d3aa98bf92633cfcf3f637869e1b34e038ead9c4ec3",
          "dweb:/ipfs/QmQ6e1Vs4MK3VtUyv3HeEriD5TGhdnJpH9rEFazBov8coa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75",
        "urls": [
          "bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1",
          "dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": {
        "keccak256": "0x4b013d3d29b509ff238d8da1d3de436b83e39fd2c13f6a02b95853525bda7e4f",
        "urls": [
          "bzz-raw://a05bb7407a4131cf2d053e3f22401d67dc45f6323acc176230a537ccfaf5f4ff",
          "dweb:/ipfs/QmYcpopQcPTeir9KBat8FoxWhiXEUsHuChLsWoBipxa17M"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol",
    "id": 100486,
    "exportedSymbols": {
      "AddressUpgradeable": [
        156343
      ],
      "Base64": [
        49024
      ],
      "ContextUpgradeable": [
        156619
      ],
      "ContractMetadata": [
        39469
      ],
      "ContractMetadataStorage": [
        39389
      ],
      "CurrencyTransferLib": [
        63443
      ],
      "DefaultOperatorFiltererUpgradeable": [
        18344
      ],
      "Drop": [
        40458
      ],
      "DropStorage": [
        39755
      ],
      "ERC2771ContextUpgradeable": [
        46170
      ],
      "ERC721AQueryableUpgradeable": [
        15365
      ],
      "ERC721AStorage": [
        15416
      ],
      "ERC721AUpgradeable": [
        17393
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        15437
      ],
      "ERC721A__Initializable": [
        17496
      ],
      "ERC721A__InitializableStorage": [
        17522
      ],
      "EnumerableSet": [
        49942
      ],
      "EvolvingNFTLogic": [
        100485
      ],
      "IClaimCondition": [
        33064
      ],
      "IClaimConditionMultiPhase": [
        33087
      ],
      "IContractMetadata": [
        33216
      ],
      "IDrop": [
        33352
      ],
      "IERC165": [
        14687
      ],
      "IERC165Upgradeable": [
        157836
      ],
      "IERC20": [
        14757
      ],
      "IERC2981": [
        14831
      ],
      "IERC2981Upgradeable": [
        150623
      ],
      "IERC721AQueryableUpgradeable": [
        17563
      ],
      "IERC721AUpgradeable": [
        17769
      ],
      "IMulticall": [
        33705
      ],
      "IOwnable": [
        33955
      ],
      "IPermissions": [
        34028
      ],
      "IPrimarySale": [
        34117
      ],
      "IRoyalty": [
        34181
      ],
      "ISharedMetadataBatch": [
        34456
      ],
      "IWETH": [
        55120
      ],
      "Initializable": [
        150774
      ],
      "MerkleProof": [
        63543
      ],
      "Multicall": [
        21413
      ],
      "NFTMetadataRenderer": [
        63722
      ],
      "OperatorFiltererUpgradeable": [
        21859
      ],
      "Ownable": [
        41535
      ],
      "OwnableStorage": [
        41438
      ],
      "Permissions": [
        41968
      ],
      "PermissionsStorage": [
        41582
      ],
      "PrimarySale": [
        42593
      ],
      "PrimarySaleStorage": [
        42519
      ],
      "Royalty": [
        42983
      ],
      "RoyaltyStorage": [
        42729
      ],
      "RulesEngine": [
        43520
      ],
      "SafeERC20": [
        48932
      ],
      "SharedMetadataBatch": [
        43779
      ],
      "SharedMetadataBatchStorage": [
        43564
      ],
      "StringsUpgradeable": [
        157028
      ],
      "TWAddress": [
        64017
      ],
      "TWStrings": [
        64717
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11566:382",
    "nodes": [
      {
        "id": 99747,
        "nodeType": "PragmaDirective",
        "src": "39:24:382",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 99748,
        "nodeType": "ImportDirective",
        "src": "775:74:382",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 157029,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99749,
        "nodeType": "ImportDirective",
        "src": "850:80:382",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 150624,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99750,
        "nodeType": "ImportDirective",
        "src": "932:64:382",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 15366,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99751,
        "nodeType": "ImportDirective",
        "src": "1046:82:382",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 46171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99752,
        "nodeType": "ImportDirective",
        "src": "1129:46:382",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 63444,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99753,
        "nodeType": "ImportDirective",
        "src": "1217:42:382",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 21414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99754,
        "nodeType": "ImportDirective",
        "src": "1260:61:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 39470,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99755,
        "nodeType": "ImportDirective",
        "src": "1322:52:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 42984,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99756,
        "nodeType": "ImportDirective",
        "src": "1375:56:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 42594,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99757,
        "nodeType": "ImportDirective",
        "src": "1432:52:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 41536,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99758,
        "nodeType": "ImportDirective",
        "src": "1485:56:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 41969,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99759,
        "nodeType": "ImportDirective",
        "src": "1542:49:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 40459,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99760,
        "nodeType": "ImportDirective",
        "src": "1592:64:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/SharedMetadataBatch.sol",
        "file": "../../../extension/upgradeable/SharedMetadataBatch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 43780,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99762,
        "nodeType": "ImportDirective",
        "src": "1657:77:382",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/RulesEngine.sol",
        "file": "../../../extension/upgradeable/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 43521,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99761,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43520,
              "src": "1666:11:382",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43520_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99763,
        "nodeType": "ImportDirective",
        "src": "1763:67:382",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100486,
        "sourceUnit": 18345,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100485,
        "nodeType": "ContractDefinition",
        "src": "1832:9772:382",
        "nodes": [
          {
            "id": 99784,
            "nodeType": "UsingForDirective",
            "src": "2070:37:382",
            "nodes": [],
            "libraryName": {
              "id": 99782,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157028,
              "src": "2076:18:382"
            },
            "typeName": {
              "id": 99783,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2099:7:382",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 99788,
            "nodeType": "UsingForDirective",
            "src": "2112:49:382",
            "nodes": [],
            "libraryName": {
              "id": 99785,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49942,
              "src": "2118:13:382"
            },
            "typeName": {
              "id": 99787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 99786,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49548,
                "src": "2136:24:382"
              },
              "referencedDeclaration": 49548,
              "src": "2136:24:382",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$49548_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "id": 99792,
            "nodeType": "VariableDeclaration",
            "src": "2457:50:382",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99789,
              "nodeType": "StructuredDocumentation",
              "src": "2351:101:382",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2482:18:382",
            "scope": 100485,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99790,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2457:7:382",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 99791,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2503:4:382",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 99798,
            "nodeType": "VariableDeclaration",
            "src": "2627:67:382",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99793,
              "nodeType": "StructuredDocumentation",
              "src": "2513:109:382",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2652:13:382",
            "scope": 100485,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99794,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2627:7:382",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 99796,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2678:15:382",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 99795,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2668:9:382",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2668:26:382",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99804,
            "nodeType": "VariableDeclaration",
            "src": "2770:63:382",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99799,
              "nodeType": "StructuredDocumentation",
              "src": "2700:65:382",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2795:11:382",
            "scope": 100485,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99800,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2770:7:382",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 99802,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2819:13:382",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 99801,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2809:9:382",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2809:24:382",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99943,
            "nodeType": "FunctionDefinition",
            "src": "3081:1115:382",
            "nodes": [],
            "body": {
              "id": 99942,
              "nodeType": "Block",
              "src": "3255:941:382",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 99818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3269:18:382",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 99816,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99807,
                          "src": "3278:8:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 99815,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16280,
                        "src": "3270:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 99817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3270:17:382",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99824,
                  "nodeType": "IfStatement",
                  "src": "3265:62:382",
                  "trueBody": {
                    "id": 99823,
                    "nodeType": "Block",
                    "src": "3289:38:382",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 99820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3310:5:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 99819,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3303:6:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 99821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3303:13:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99822,
                        "nodeType": "ExpressionStatement",
                        "src": "3303:13:382"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    99826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99826,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3366:5:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3358:13:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99825,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3358:7:382",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99830,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99828,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99807,
                        "src": "3382:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99827,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15893,
                      "src": "3374:7:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 99829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3374:17:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3358:33:382"
                },
                {
                  "assignments": [
                    99832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99832,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "3409:5:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3401:13:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99831,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3401:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99834,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 99833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3417:1:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3401:17:382"
                },
                {
                  "assignments": [
                    99836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99836,
                      "mutability": "mutable",
                      "name": "engine",
                      "nameLocation": "3437:6:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3429:14:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99835,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3429:7:382",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99845,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99840,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3466:4:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$100485",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$100485",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              ],
                              "id": 99839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3458:7:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3458:7:382",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3458:13:382",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99837,
                          "name": "RulesEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43520,
                          "src": "3446:11:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43520_$",
                            "typeString": "type(contract RulesEngine)"
                          }
                        },
                        "id": 99842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3446:26:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RulesEngine_$43520",
                          "typeString": "contract RulesEngine"
                        }
                      },
                      "id": 99843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRulesEngineOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43182,
                      "src": "3446:49:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 99844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:51:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3429:68:382"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 99851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99846,
                      "name": "engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99836,
                      "src": "3511:6:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3529:1:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3521:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 99847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3521:7:382",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 99850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3521:10:382",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3511:20:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 99874,
                    "nodeType": "Block",
                    "src": "3607:75:382",
                    "statements": [
                      {
                        "expression": {
                          "id": 99872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99862,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99832,
                            "src": "3621:5:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 99870,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99826,
                                "src": "3665:5:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 99866,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3649:4:382",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$100485",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$100485",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      ],
                                      "id": 99865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3641:7:382",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 99864,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3641:7:382",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 99867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3641:13:382",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 99863,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43520,
                                  "src": "3629:11:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43520_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 99868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3629:26:382",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43520",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 99869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43112,
                              "src": "3629:35:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 99871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3629:42:382",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3621:50:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 99873,
                        "nodeType": "ExpressionStatement",
                        "src": "3621:50:382"
                      }
                    ]
                  },
                  "id": 99875,
                  "nodeType": "IfStatement",
                  "src": "3507:175:382",
                  "trueBody": {
                    "id": 99861,
                    "nodeType": "Block",
                    "src": "3533:68:382",
                    "statements": [
                      {
                        "expression": {
                          "id": 99859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99852,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99832,
                            "src": "3547:5:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 99857,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99826,
                                "src": "3584:5:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 99854,
                                    "name": "engine",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99836,
                                    "src": "3567:6:382",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 99853,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43520,
                                  "src": "3555:11:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43520_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 99855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3555:19:382",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43520",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 99856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43112,
                              "src": "3555:28:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 99858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3555:35:382",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3547:43:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 99860,
                        "nodeType": "ExpressionStatement",
                        "src": "3547:43:382"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    99880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99880,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "3791:3:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3774:20:382",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 99878,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 99879,
                        "nodeType": "ArrayTypeName",
                        "src": "3774:9:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99886,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99881,
                            "name": "_sharedMetadataBatchStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43772,
                            "src": "3797:27:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$43551_storage_ptr_$",
                              "typeString": "function () pure returns (struct SharedMetadataBatchStorage.Data storage pointer)"
                            }
                          },
                          "id": 99882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3797:29:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$43551_storage_ptr",
                            "typeString": "struct SharedMetadataBatchStorage.Data storage pointer"
                          }
                        },
                        "id": 99883,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43545,
                        "src": "3797:33:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$49548_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 99884,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49651,
                      "src": "3797:40:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$49548_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$49548_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 99885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3774:65:382"
                },
                {
                  "assignments": [
                    99888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99888,
                      "mutability": "mutable",
                      "name": "targetId",
                      "nameLocation": "3857:8:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3849:16:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 99887,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3849:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99890,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 99889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3868:1:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3849:20:382"
                },
                {
                  "assignments": [
                    99892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99892,
                      "mutability": "mutable",
                      "name": "check",
                      "nameLocation": "3887:5:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 99942,
                      "src": "3879:13:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3879:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99894,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 99893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3895:1:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3879:17:382"
                },
                {
                  "body": {
                    "id": 99935,
                    "nodeType": "Block",
                    "src": "3951:177:382",
                    "statements": [
                      {
                        "assignments": [
                          99908
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 99908,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "3973:2:382",
                            "nodeType": "VariableDeclaration",
                            "scope": 99935,
                            "src": "3965:10:382",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 99907,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3965:7:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 99915,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 99911,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99880,
                                "src": "3986:3:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 99913,
                              "indexExpression": {
                                "id": 99912,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99896,
                                "src": "3990:1:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3986:6:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 99910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3978:7:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 99909,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3978:7:382",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3978:15:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3965:28:382"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 99922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99916,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99908,
                              "src": "4012:2:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 99917,
                              "name": "score",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99832,
                              "src": "4018:5:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4012:11:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99919,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99908,
                              "src": "4027:2:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 99920,
                              "name": "check",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99892,
                              "src": "4033:5:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4027:11:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4012:26:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99934,
                        "nodeType": "IfStatement",
                        "src": "4008:110:382",
                        "trueBody": {
                          "id": 99933,
                          "nodeType": "Block",
                          "src": "4040:78:382",
                          "statements": [
                            {
                              "expression": {
                                "id": 99927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 99923,
                                  "name": "targetId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99888,
                                  "src": "4058:8:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 99924,
                                    "name": "ids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99880,
                                    "src": "4069:3:382",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 99926,
                                  "indexExpression": {
                                    "id": 99925,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99896,
                                    "src": "4073:1:382",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4069:6:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4058:17:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 99928,
                              "nodeType": "ExpressionStatement",
                              "src": "4058:17:382"
                            },
                            {
                              "expression": {
                                "id": 99931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 99929,
                                  "name": "check",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99892,
                                  "src": "4093:5:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 99930,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99908,
                                  "src": "4101:2:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4093:10:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 99932,
                              "nodeType": "ExpressionStatement",
                              "src": "4093:10:382"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 99902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99899,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99896,
                      "src": "3927:1:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 99900,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99880,
                        "src": "3931:3:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 99901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3931:10:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3927:14:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99936,
                  "initializationExpression": {
                    "assignments": [
                      99896
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 99896,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3920:1:382",
                        "nodeType": "VariableDeclaration",
                        "scope": 99936,
                        "src": "3912:9:382",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3912:7:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 99898,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 99897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3924:1:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3912:13:382"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 99905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 99903,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99896,
                        "src": "3943:1:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 99904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3948:1:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3943:6:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 99906,
                    "nodeType": "ExpressionStatement",
                    "src": "3943:6:382"
                  },
                  "nodeType": "ForStatement",
                  "src": "3907:221:382"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99938,
                        "name": "targetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99888,
                        "src": "4170:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99939,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99807,
                        "src": "4180:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99937,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43758,
                      "src": "4144:25:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) view returns (string memory)"
                      }
                    },
                    "id": 99940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4144:45:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 99814,
                  "id": 99941,
                  "nodeType": "Return",
                  "src": "4137:52:382"
                }
              ]
            },
            "baseFunctions": [
              15864,
              17757
            ],
            "documentation": {
              "id": 99805,
              "nodeType": "StructuredDocumentation",
              "src": "3031:45:382",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3090:8:382",
            "overrides": {
              "id": 99811,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99809,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "3178:18:382"
                },
                {
                  "id": 99810,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "3198:19:382"
                }
              ],
              "src": "3169:49:382"
            },
            "parameters": {
              "id": 99808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99807,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3107:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 99943,
                  "src": "3099:16:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3098:18:382"
            },
            "returnParameters": {
              "id": 99814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99943,
                  "src": "3236:13:382",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99812,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:6:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3235:15:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 99968,
            "nodeType": "FunctionDefinition",
            "src": "4227:301:382",
            "nodes": [],
            "body": {
              "id": 99967,
              "nodeType": "Block",
              "src": "4412:116:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 99965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 99957,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99946,
                          "src": "4453:11:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 99955,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4429:5:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                            "typeString": "type(contract super EvolvingNFTLogic)"
                          }
                        },
                        "id": 99956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15793,
                        "src": "4429:23:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 99958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4429:36:382",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 99964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 99960,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150623,
                              "src": "4474:19:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150623_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150623_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 99959,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4469:4:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 99961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4469:25:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150623",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 99962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4469:37:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 99963,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99946,
                        "src": "4510:11:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4469:52:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4429:92:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99954,
                  "id": 99966,
                  "nodeType": "Return",
                  "src": "4422:99:382"
                }
              ]
            },
            "baseFunctions": [
              14686,
              15793,
              17628
            ],
            "documentation": {
              "id": 99944,
              "nodeType": "StructuredDocumentation",
              "src": "4202:20:382",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4236:17:382",
            "overrides": {
              "id": 99951,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99948,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "4335:18:382"
                },
                {
                  "id": 99949,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "4355:19:382"
                },
                {
                  "id": 99950,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "4376:7:382"
                }
              ],
              "src": "4326:58:382"
            },
            "parameters": {
              "id": 99947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99946,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4261:11:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 99968,
                  "src": "4254:18:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 99945,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:6:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4253:20:382"
            },
            "returnParameters": {
              "id": 99954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99953,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99968,
                  "src": "4402:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99952,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 99978,
            "nodeType": "FunctionDefinition",
            "src": "4584:91:382",
            "nodes": [],
            "body": {
              "id": 99977,
              "nodeType": "Block",
              "src": "4650:25:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 99975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4667:1:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 99974,
                  "id": 99976,
                  "nodeType": "Return",
                  "src": "4660:8:382"
                }
              ]
            },
            "baseFunctions": [
              15571
            ],
            "documentation": {
              "id": 99969,
              "nodeType": "StructuredDocumentation",
              "src": "4534:45:382",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4593:13:382",
            "overrides": {
              "id": 99971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4623:8:382"
            },
            "parameters": {
              "id": 99970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4606:2:382"
            },
            "returnParameters": {
              "id": 99974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99973,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99978,
                  "src": "4641:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4640:9:382"
            },
            "scope": 100485,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99987,
            "nodeType": "FunctionDefinition",
            "src": "4681:93:382",
            "nodes": [],
            "body": {
              "id": 99986,
              "nodeType": "Block",
              "src": "4735:39:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99983,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99978
                      ],
                      "referencedDeclaration": 99978,
                      "src": "4752:13:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 99984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:15:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99982,
                  "id": 99985,
                  "nodeType": "Return",
                  "src": "4745:22:382"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4690:12:382",
            "parameters": {
              "id": 99979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4702:2:382"
            },
            "returnParameters": {
              "id": 99982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99987,
                  "src": "4726:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4726:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4725:9:382"
            },
            "scope": 100485,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100073,
            "nodeType": "FunctionDefinition",
            "src": "5047:840:382",
            "nodes": [],
            "body": {
              "id": 100072,
              "nodeType": "Block",
              "src": "5233:654:382",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100000,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99996,
                      "src": "5247:14:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5265:1:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5247:19:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100013,
                  "nodeType": "IfStatement",
                  "src": "5243:103:382",
                  "trueBody": {
                    "id": 100012,
                    "nodeType": "Block",
                    "src": "5268:78:382",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 100004,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5290:3:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5290:9:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 100006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5303:1:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5290:14:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 100008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5306:8:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 100003,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5282:7:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5282:33:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100010,
                        "nodeType": "ExpressionStatement",
                        "src": "5282:33:382"
                      },
                      {
                        "functionReturnParameters": 99999,
                        "id": 100011,
                        "nodeType": "Return",
                        "src": "5329:7:382"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    100015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100015,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5364:10:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 100072,
                      "src": "5356:18:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5356:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100019,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100016,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99992,
                      "src": "5377:16:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 100017,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99996,
                      "src": "5396:14:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5377:33:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5356:54:382"
                },
                {
                  "assignments": [
                    100021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100021,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5426:13:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 100072,
                      "src": "5421:18:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 100020,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5421:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100022,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5421:18:382"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100023,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99994,
                      "src": "5453:9:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100024,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "5466:19:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63211,
                      "src": "5466:32:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5453:45:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100042,
                    "nodeType": "Block",
                    "src": "5570:55:382",
                    "statements": [
                      {
                        "expression": {
                          "id": 100040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100035,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100021,
                            "src": "5584:13:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100036,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5600:3:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5600:9:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 100038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5613:1:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5600:14:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5584:30:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100041,
                        "nodeType": "ExpressionStatement",
                        "src": "5584:30:382"
                      }
                    ]
                  },
                  "id": 100043,
                  "nodeType": "IfStatement",
                  "src": "5449:176:382",
                  "trueBody": {
                    "id": 100034,
                    "nodeType": "Block",
                    "src": "5500:64:382",
                    "statements": [
                      {
                        "expression": {
                          "id": 100032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100027,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100021,
                            "src": "5514:13:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100028,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5530:3:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5530:9:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 100030,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100015,
                              "src": "5543:10:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5530:23:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5514:39:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100033,
                        "nodeType": "ExpressionStatement",
                        "src": "5514:39:382"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100045,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100021,
                        "src": "5642:13:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 100046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5657:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 100044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5634:7:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5634:28:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100048,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:28:382"
                },
                {
                  "assignments": [
                    100050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100050,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5681:13:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 100072,
                      "src": "5673:21:382",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100049,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5673:7:382",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100061,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100051,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99990,
                        "src": "5697:21:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5730:1:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5722:7:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100052,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5722:7:382",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5722:10:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5697:35:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 100059,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99990,
                      "src": "5760:21:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 100060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5697:84:382",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100057,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42534,
                        "src": "5735:20:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 100058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5735:22:382",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5673:108:382"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100065,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99994,
                        "src": "5829:9:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100066,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "5840:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5840:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100068,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100050,
                        "src": "5854:13:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100069,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100015,
                        "src": "5869:10:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100062,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "5792:19:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63248,
                      "src": "5792:36:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5792:88:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100071,
                  "nodeType": "ExpressionStatement",
                  "src": "5792:88:382"
                }
              ]
            },
            "baseFunctions": [
              40441
            ],
            "documentation": {
              "id": 99988,
              "nodeType": "StructuredDocumentation",
              "src": "4963:79:382",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5056:20:382",
            "overrides": {
              "id": 99998,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5224:8:382"
            },
            "parameters": {
              "id": 99997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99990,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5094:21:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100073,
                  "src": "5086:29:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5086:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99992,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5133:16:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100073,
                  "src": "5125:24:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5125:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99994,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5167:9:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100073,
                  "src": "5159:17:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5159:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99996,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5194:14:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100073,
                  "src": "5186:22:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5076:138:382"
            },
            "returnParameters": {
              "id": 99999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5233:0:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100095,
            "nodeType": "FunctionDefinition",
            "src": "5940:248:382",
            "nodes": [],
            "body": {
              "id": 100094,
              "nodeType": "Block",
              "src": "6094:94:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100084,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100082,
                      "src": "6104:13:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100085,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15583,
                        "src": "6120:12:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 100086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6120:14:382",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6104:30:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100088,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:30:382"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100090,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100076,
                        "src": "6154:3:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100091,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100078,
                        "src": "6159:21:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100089,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16993,
                        17008
                      ],
                      "referencedDeclaration": 17008,
                      "src": "6144:9:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6144:37:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100093,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:37:382"
                }
              ]
            },
            "baseFunctions": [
              40451
            ],
            "documentation": {
              "id": 100074,
              "nodeType": "StructuredDocumentation",
              "src": "5893:42:382",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "5949:22:382",
            "overrides": {
              "id": 100080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6041:8:382"
            },
            "parameters": {
              "id": 100079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100076,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5980:3:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100095,
                  "src": "5972:11:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5972:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100078,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "5993:21:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100095,
                  "src": "5985:29:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5971:44:382"
            },
            "returnParameters": {
              "id": 100083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100082,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6075:13:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100095,
                  "src": "6067:21:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6067:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6066:23:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100109,
            "nodeType": "FunctionDefinition",
            "src": "6288:143:382",
            "nodes": [],
            "body": {
              "id": 100108,
              "nodeType": "Block",
              "src": "6365:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100103,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "6391:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100104,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "6411:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6411:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100102,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "6382:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100101,
                  "id": 100107,
                  "nodeType": "Return",
                  "src": "6375:49:382"
                }
              ]
            },
            "baseFunctions": [
              42592
            ],
            "documentation": {
              "id": 100096,
              "nodeType": "StructuredDocumentation",
              "src": "6194:89:382",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6297:27:382",
            "overrides": {
              "id": 100098,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6341:8:382"
            },
            "parameters": {
              "id": 100097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6324:2:382"
            },
            "returnParameters": {
              "id": 100101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100109,
                  "src": "6359:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6359:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6358:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100123,
            "nodeType": "FunctionDefinition",
            "src": "6514:128:382",
            "nodes": [],
            "body": {
              "id": 100122,
              "nodeType": "Block",
              "src": "6576:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100117,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "6602:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100118,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "6622:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6622:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100116,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "6593:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6593:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100115,
                  "id": 100121,
                  "nodeType": "Return",
                  "src": "6586:49:382"
                }
              ]
            },
            "baseFunctions": [
              41534
            ],
            "documentation": {
              "id": 100110,
              "nodeType": "StructuredDocumentation",
              "src": "6437:72:382",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6523:12:382",
            "overrides": {
              "id": 100112,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6552:8:382"
            },
            "parameters": {
              "id": 100111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6535:2:382"
            },
            "returnParameters": {
              "id": 100115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100123,
                  "src": "6570:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100137,
            "nodeType": "FunctionDefinition",
            "src": "6732:134:382",
            "nodes": [],
            "body": {
              "id": 100136,
              "nodeType": "Block",
              "src": "6800:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100131,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "6826:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100132,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "6846:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6846:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100130,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "6817:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6817:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100129,
                  "id": 100135,
                  "nodeType": "Return",
                  "src": "6810:49:382"
                }
              ]
            },
            "baseFunctions": [
              42982
            ],
            "documentation": {
              "id": 100124,
              "nodeType": "StructuredDocumentation",
              "src": "6648:79:382",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6741:18:382",
            "overrides": {
              "id": 100126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6776:8:382"
            },
            "parameters": {
              "id": 100125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6759:2:382"
            },
            "returnParameters": {
              "id": 100129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100137,
                  "src": "6794:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6793:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100151,
            "nodeType": "FunctionDefinition",
            "src": "6961:134:382",
            "nodes": [],
            "body": {
              "id": 100150,
              "nodeType": "Block",
              "src": "7029:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100145,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "7055:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100146,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "7075:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7075:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100144,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "7046:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7046:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100143,
                  "id": 100149,
                  "nodeType": "Return",
                  "src": "7039:49:382"
                }
              ]
            },
            "baseFunctions": [
              39468
            ],
            "documentation": {
              "id": 100138,
              "nodeType": "StructuredDocumentation",
              "src": "6872:84:382",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6970:18:382",
            "overrides": {
              "id": 100140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7005:8:382"
            },
            "parameters": {
              "id": 100139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6988:2:382"
            },
            "returnParameters": {
              "id": 100143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100151,
                  "src": "7023:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7023:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7022:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100165,
            "nodeType": "FunctionDefinition",
            "src": "7190:138:382",
            "nodes": [],
            "body": {
              "id": 100164,
              "nodeType": "Block",
              "src": "7262:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100159,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "7288:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100160,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "7308:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7308:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100158,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "7279:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100157,
                  "id": 100163,
                  "nodeType": "Return",
                  "src": "7272:49:382"
                }
              ]
            },
            "baseFunctions": [
              40457
            ],
            "documentation": {
              "id": 100152,
              "nodeType": "StructuredDocumentation",
              "src": "7101:84:382",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7199:22:382",
            "overrides": {
              "id": 100154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7238:8:382"
            },
            "parameters": {
              "id": 100153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7221:2:382"
            },
            "returnParameters": {
              "id": 100157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100165,
                  "src": "7256:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7256:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7255:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100179,
            "nodeType": "FunctionDefinition",
            "src": "7422:138:382",
            "nodes": [],
            "body": {
              "id": 100178,
              "nodeType": "Block",
              "src": "7501:59:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100173,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99804,
                        "src": "7527:11:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100174,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "7540:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7540:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100172,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "7518:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7518:35:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100171,
                  "id": 100177,
                  "nodeType": "Return",
                  "src": "7511:42:382"
                }
              ]
            },
            "baseFunctions": [
              43778
            ],
            "documentation": {
              "id": 100166,
              "nodeType": "StructuredDocumentation",
              "src": "7334:83:382",
              "text": "@dev Returns whether shared metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7431:21:382",
            "overrides": {
              "id": 100168,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7477:8:382"
            },
            "parameters": {
              "id": 100167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7452:2:382"
            },
            "returnParameters": {
              "id": 100171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100179,
                  "src": "7495:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7495:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7494:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100193,
            "nodeType": "FunctionDefinition",
            "src": "7659:145:382",
            "nodes": [],
            "body": {
              "id": 100192,
              "nodeType": "Block",
              "src": "7738:66:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100187,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99792,
                        "src": "7764:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100188,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100473
                          ],
                          "referencedDeclaration": 100473,
                          "src": "7784:10:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7784:12:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100186,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100220,
                      "src": "7755:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:42:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100185,
                  "id": 100191,
                  "nodeType": "Return",
                  "src": "7748:49:382"
                }
              ]
            },
            "baseFunctions": [
              21534
            ],
            "documentation": {
              "id": 100180,
              "nodeType": "StructuredDocumentation",
              "src": "7566:88:382",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "7668:26:382",
            "overrides": {
              "id": 100182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7714:8:382"
            },
            "parameters": {
              "id": 100181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7694:2:382"
            },
            "returnParameters": {
              "id": 100185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100193,
                  "src": "7732:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7732:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7731:6:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100220,
            "nodeType": "FunctionDefinition",
            "src": "7872:208:382",
            "nodes": [],
            "body": {
              "id": 100219,
              "nodeType": "Block",
              "src": "7952:128:382",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100207,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7994:4:382",
                      "nodeType": "VariableDeclaration",
                      "scope": 100219,
                      "src": "7962:36:382",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 100206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100205,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41569,
                          "src": "7962:23:382"
                        },
                        "referencedDeclaration": 41569,
                        "src": "7962:23:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100211,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100208,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41582,
                        "src": "8001:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41582_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 100209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41581,
                      "src": "8001:23:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$41569_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 100210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8001:25:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7962:64:382"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 100212,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100207,
                          "src": "8043:4:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 100213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41563,
                        "src": "8043:13:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 100215,
                      "indexExpression": {
                        "id": 100214,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100196,
                        "src": "8057:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8043:20:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 100217,
                    "indexExpression": {
                      "id": 100216,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100198,
                      "src": "8064:8:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8043:30:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100202,
                  "id": 100218,
                  "nodeType": "Return",
                  "src": "8036:37:382"
                }
              ]
            },
            "documentation": {
              "id": 100194,
              "nodeType": "StructuredDocumentation",
              "src": "7810:57:382",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "7881:8:382",
            "parameters": {
              "id": 100199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100196,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "7898:5:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100220,
                  "src": "7890:13:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 100195,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7890:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100198,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "7913:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100220,
                  "src": "7905:16:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7905:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7889:33:382"
            },
            "returnParameters": {
              "id": 100202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100220,
                  "src": "7946:4:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7946:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7945:6:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100234,
            "nodeType": "FunctionDefinition",
            "src": "8346:145:382",
            "nodes": [],
            "body": {
              "id": 100233,
              "nodeType": "Block",
              "src": "8401:90:382",
              "nodes": [],
              "statements": [
                {
                  "id": 100232,
                  "nodeType": "UncheckedBlock",
                  "src": "8411:74:382",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 100226,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15583,
                            "src": "8442:12:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 100227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8442:14:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 100228,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              99978
                            ],
                            "referencedDeclaration": 99978,
                            "src": "8459:13:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 100229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8459:15:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8442:32:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 100225,
                      "id": 100231,
                      "nodeType": "Return",
                      "src": "8435:39:382"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 100221,
              "nodeType": "StructuredDocumentation",
              "src": "8264:77:382",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "8355:11:382",
            "parameters": {
              "id": 100222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8366:2:382"
            },
            "returnParameters": {
              "id": 100225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100224,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100234,
                  "src": "8392:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8392:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8391:9:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100244,
            "nodeType": "FunctionDefinition",
            "src": "8573:99:382",
            "nodes": [],
            "body": {
              "id": 100243,
              "nodeType": "Block",
              "src": "8634:38:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100240,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15583,
                      "src": "8651:12:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:14:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100239,
                  "id": 100242,
                  "nodeType": "Return",
                  "src": "8644:21:382"
                }
              ]
            },
            "documentation": {
              "id": 100235,
              "nodeType": "StructuredDocumentation",
              "src": "8497:71:382",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8582:17:382",
            "parameters": {
              "id": 100236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8599:2:382"
            },
            "returnParameters": {
              "id": 100239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100244,
                  "src": "8625:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8625:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8624:9:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100254,
            "nodeType": "FunctionDefinition",
            "src": "8741:100:382",
            "nodes": [],
            "body": {
              "id": 100253,
              "nodeType": "Block",
              "src": "8803:38:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100250,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15583,
                      "src": "8820:12:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8820:14:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100249,
                  "id": 100252,
                  "nodeType": "Return",
                  "src": "8813:21:382"
                }
              ]
            },
            "documentation": {
              "id": 100245,
              "nodeType": "StructuredDocumentation",
              "src": "8678:58:382",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8750:18:382",
            "parameters": {
              "id": 100246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8768:2:382"
            },
            "returnParameters": {
              "id": 100249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100254,
                  "src": "8794:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8794:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8793:9:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100266,
            "nodeType": "FunctionDefinition",
            "src": "8897:184:382",
            "nodes": [],
            "body": {
              "id": 100265,
              "nodeType": "Block",
              "src": "8945:136:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100261,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100257,
                        "src": "9060:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 100262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9069:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100260,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17089,
                        17265
                      ],
                      "referencedDeclaration": 17265,
                      "src": "9054:5:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 100263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9054:20:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100264,
                  "nodeType": "ExpressionStatement",
                  "src": "9054:20:382"
                }
              ]
            },
            "documentation": {
              "id": 100255,
              "nodeType": "StructuredDocumentation",
              "src": "8847:45:382",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8906:4:382",
            "parameters": {
              "id": 100258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100257,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8919:7:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100266,
                  "src": "8911:15:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8911:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8910:17:382"
            },
            "returnParameters": {
              "id": 100259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8945:0:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100330,
            "nodeType": "FunctionDefinition",
            "src": "9135:569:382",
            "nodes": [],
            "body": {
              "id": 100329,
              "nodeType": "Block",
              "src": "9297:407:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100282,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100269,
                        "src": "9335:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100283,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100271,
                        "src": "9341:2:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100284,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100273,
                        "src": "9345:13:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100285,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100275,
                        "src": "9360:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100279,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9307:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16583,
                      "src": "9307:27:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 100286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9307:62:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100287,
                  "nodeType": "ExpressionStatement",
                  "src": "9307:62:382"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 100309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 100302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9481:36:382",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 100289,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99798,
                              "src": "9491:13:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 100292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9514:1:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 100291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9506:7:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100290,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9506:7:382",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 100293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9506:10:382",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 100288,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100220,
                            "src": "9482:8:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 100294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9482:35:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 100301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100296,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100269,
                          "src": "9521:4:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 100299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9537:1:382",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9529:7:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 100297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9529:7:382",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9529:10:382",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9521:18:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9481:58:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100303,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100271,
                        "src": "9543:2:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9557:1:382",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9549:7:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9549:7:382",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9549:10:382",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9543:16:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9481:78:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100328,
                  "nodeType": "IfStatement",
                  "src": "9477:221:382",
                  "trueBody": {
                    "id": 100327,
                    "nodeType": "Block",
                    "src": "9561:137:382",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 100320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9579:30:382",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 100311,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99798,
                                  "src": "9589:13:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 100312,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100269,
                                  "src": "9604:4:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 100310,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100220,
                                "src": "9580:8:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 100313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9580:29:382",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 100319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9613:28:382",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 100316,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99798,
                                  "src": "9623:13:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 100317,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100271,
                                  "src": "9638:2:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 100315,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100220,
                                "src": "9614:8:382",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 100318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9614:27:382",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9579:62:382",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100326,
                        "nodeType": "IfStatement",
                        "src": "9575:113:382",
                        "trueBody": {
                          "id": 100325,
                          "nodeType": "Block",
                          "src": "9643:45:382",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 100322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9668:4:382",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 100321,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9661:6:382",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 100323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9661:12:382",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 100324,
                              "nodeType": "ExpressionStatement",
                              "src": "9661:12:382"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              16583
            ],
            "documentation": {
              "id": 100267,
              "nodeType": "StructuredDocumentation",
              "src": "9087:43:382",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9144:21:382",
            "overrides": {
              "id": 100277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9288:8:382"
            },
            "parameters": {
              "id": 100276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100269,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9183:4:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100330,
                  "src": "9175:12:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9175:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100271,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9205:2:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100330,
                  "src": "9197:10:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9197:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100273,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "9225:13:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100330,
                  "src": "9217:21:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9217:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100275,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9256:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100330,
                  "src": "9248:16:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9248:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9165:105:382"
            },
            "returnParameters": {
              "id": 100278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9297:0:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100352,
            "nodeType": "FunctionDefinition",
            "src": "9755:243:382",
            "nodes": [],
            "body": {
              "id": 100351,
              "nodeType": "Block",
              "src": "9938:60:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100333,
                        "src": "9972:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100348,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100335,
                        "src": "9982:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 100344,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9948:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16210,
                      "src": "9948:23:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 100349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9948:43:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100350,
                  "nodeType": "ExpressionStatement",
                  "src": "9948:43:382"
                }
              ]
            },
            "baseFunctions": [
              16210,
              17719
            ],
            "documentation": {
              "id": 100331,
              "nodeType": "StructuredDocumentation",
              "src": "9710:40:382",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100341,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100333,
                    "src": "9924:8:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100340,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "9896:27:382"
                },
                "nodeType": "ModifierInvocation",
                "src": "9896:37:382"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "9764:17:382",
            "overrides": {
              "id": 100339,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100337,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "9847:18:382"
                },
                {
                  "id": 100338,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "9867:19:382"
                }
              ],
              "src": "9838:49:382"
            },
            "parameters": {
              "id": 100336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100333,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9790:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100352,
                  "src": "9782:16:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9782:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100335,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "9805:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100352,
                  "src": "9800:13:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100334,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9800:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9781:33:382"
            },
            "returnParameters": {
              "id": 100343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9938:0:382"
            },
            "scope": 100485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100374,
            "nodeType": "FunctionDefinition",
            "src": "10039:240:382",
            "nodes": [],
            "body": {
              "id": 100373,
              "nodeType": "Block",
              "src": "10230:49:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100369,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100355,
                        "src": "10254:8:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100370,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100357,
                        "src": "10264:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100366,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10240:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16152,
                      "src": "10240:13:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10240:32:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100372,
                  "nodeType": "ExpressionStatement",
                  "src": "10240:32:382"
                }
              ]
            },
            "baseFunctions": [
              16152,
              17711
            ],
            "documentation": {
              "id": 100353,
              "nodeType": "StructuredDocumentation",
              "src": "10004:30:382",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100363,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100355,
                    "src": "10216:8:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100364,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100362,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "10188:27:382"
                },
                "nodeType": "ModifierInvocation",
                "src": "10188:37:382"
              }
            ],
            "name": "approve",
            "nameLocation": "10048:7:382",
            "overrides": {
              "id": 100361,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100359,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10139:18:382"
                },
                {
                  "id": 100360,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10159:19:382"
                }
              ],
              "src": "10130:49:382"
            },
            "parameters": {
              "id": 100358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100355,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10064:8:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100374,
                  "src": "10056:16:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10056:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10082:7:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100374,
                  "src": "10074:15:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10074:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10055:35:382"
            },
            "returnParameters": {
              "id": 100365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10230:0:382"
            },
            "scope": 100485,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100399,
            "nodeType": "FunctionDefinition",
            "src": "10326:240:382",
            "nodes": [],
            "body": {
              "id": 100398,
              "nodeType": "Block",
              "src": "10512:54:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100393,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100377,
                        "src": "10541:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100394,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100379,
                        "src": "10547:2:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100395,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100381,
                        "src": "10551:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100390,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10522:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16511,
                      "src": "10522:18:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10522:37:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100397,
                  "nodeType": "ExpressionStatement",
                  "src": "10522:37:382"
                }
              ]
            },
            "baseFunctions": [
              16511,
              17703
            ],
            "documentation": {
              "id": 100375,
              "nodeType": "StructuredDocumentation",
              "src": "10285:36:382",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100387,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100377,
                    "src": "10506:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100386,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "10486:19:382"
                },
                "nodeType": "ModifierInvocation",
                "src": "10486:25:382"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "10335:12:382",
            "overrides": {
              "id": 100385,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100383,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10445:18:382"
                },
                {
                  "id": 100384,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10465:19:382"
                }
              ],
              "src": "10436:49:382"
            },
            "parameters": {
              "id": 100382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100377,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10365:4:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100399,
                  "src": "10357:12:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10357:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100379,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10387:2:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100399,
                  "src": "10379:10:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10379:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100381,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10407:7:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100399,
                  "src": "10399:15:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10399:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10347:73:382"
            },
            "returnParameters": {
              "id": 100389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10512:0:382"
            },
            "scope": 100485,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100424,
            "nodeType": "FunctionDefinition",
            "src": "10617:248:382",
            "nodes": [],
            "body": {
              "id": 100423,
              "nodeType": "Block",
              "src": "10807:58:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100418,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100402,
                        "src": "10840:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100419,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100404,
                        "src": "10846:2:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100420,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100406,
                        "src": "10850:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100415,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10817:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16530,
                      "src": "10817:22:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10817:41:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100422,
                  "nodeType": "ExpressionStatement",
                  "src": "10817:41:382"
                }
              ]
            },
            "baseFunctions": [
              16530,
              17693
            ],
            "documentation": {
              "id": 100400,
              "nodeType": "StructuredDocumentation",
              "src": "10572:40:382",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100412,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100402,
                    "src": "10801:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100413,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100411,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "10781:19:382"
                },
                "nodeType": "ModifierInvocation",
                "src": "10781:25:382"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10626:16:382",
            "overrides": {
              "id": 100410,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100408,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10740:18:382"
                },
                {
                  "id": 100409,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10760:19:382"
                }
              ],
              "src": "10731:49:382"
            },
            "parameters": {
              "id": 100407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100402,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10660:4:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100424,
                  "src": "10652:12:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10652:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100404,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10682:2:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100424,
                  "src": "10674:10:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10674:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100406,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10702:7:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100424,
                  "src": "10694:15:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10694:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10642:73:382"
            },
            "returnParameters": {
              "id": 100414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10807:0:382"
            },
            "scope": 100485,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100452,
            "nodeType": "FunctionDefinition",
            "src": "10916:281:382",
            "nodes": [],
            "body": {
              "id": 100451,
              "nodeType": "Block",
              "src": "11133:64:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100445,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100427,
                        "src": "11166:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100446,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100429,
                        "src": "11172:2:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100447,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100431,
                        "src": "11176:7:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100448,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100433,
                        "src": "11185:4:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 100442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11143:5:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$100485_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 100444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16570,
                      "src": "11143:22:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 100449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11143:47:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100450,
                  "nodeType": "ExpressionStatement",
                  "src": "11143:47:382"
                }
              ]
            },
            "baseFunctions": [
              16570,
              17683
            ],
            "documentation": {
              "id": 100425,
              "nodeType": "StructuredDocumentation",
              "src": "10871:40:382",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100439,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100427,
                    "src": "11127:4:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100440,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100438,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "11107:19:382"
                },
                "nodeType": "ModifierInvocation",
                "src": "11107:25:382"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10925:16:382",
            "overrides": {
              "id": 100437,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100435,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "11066:18:382"
                },
                {
                  "id": 100436,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "11086:19:382"
                }
              ],
              "src": "11057:49:382"
            },
            "parameters": {
              "id": 100434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100427,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10959:4:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100452,
                  "src": "10951:12:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10951:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100429,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10981:2:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100452,
                  "src": "10973:10:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10973:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100431,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11001:7:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100452,
                  "src": "10993:15:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10993:7:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100433,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11031:4:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100452,
                  "src": "11018:17:382",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100432,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11018:5:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10941:100:382"
            },
            "returnParameters": {
              "id": 100441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11133:0:382"
            },
            "scope": 100485,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100462,
            "nodeType": "FunctionDefinition",
            "src": "11203:111:382",
            "nodes": [],
            "body": {
              "id": 100461,
              "nodeType": "Block",
              "src": "11278:36:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100458,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100473
                      ],
                      "referencedDeclaration": 100473,
                      "src": "11295:10:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11295:12:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100457,
                  "id": 100460,
                  "nodeType": "Return",
                  "src": "11288:19:382"
                }
              ]
            },
            "baseFunctions": [
              40379
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "11212:14:382",
            "overrides": {
              "id": 100454,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11251:8:382"
            },
            "parameters": {
              "id": 100453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11226:2:382"
            },
            "returnParameters": {
              "id": 100457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100462,
                  "src": "11269:7:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11269:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11268:9:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100473,
            "nodeType": "FunctionDefinition",
            "src": "11320:140:382",
            "nodes": [],
            "body": {
              "id": 100472,
              "nodeType": "Block",
              "src": "11398:62:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100468,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46170,
                        "src": "11415:25:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46170_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46138,
                      "src": "11415:36:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11415:38:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100467,
                  "id": 100471,
                  "nodeType": "Return",
                  "src": "11408:45:382"
                }
              ]
            },
            "baseFunctions": [
              46138
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "11329:10:382",
            "overrides": {
              "id": 100464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11364:8:382"
            },
            "parameters": {
              "id": 100463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11339:2:382"
            },
            "returnParameters": {
              "id": 100467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100466,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11390:6:382",
                  "nodeType": "VariableDeclaration",
                  "scope": 100473,
                  "src": "11382:14:382",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11382:7:382",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11381:16:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100484,
            "nodeType": "FunctionDefinition",
            "src": "11466:136:382",
            "nodes": [],
            "body": {
              "id": 100483,
              "nodeType": "Block",
              "src": "11542:60:382",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100479,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46170,
                        "src": "11559:25:382",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46170_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46165,
                      "src": "11559:34:382",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 100481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11559:36:382",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 100478,
                  "id": 100482,
                  "nodeType": "Return",
                  "src": "11552:43:382"
                }
              ]
            },
            "baseFunctions": [
              46165
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "11475:8:382",
            "overrides": {
              "id": 100475,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11508:8:382"
            },
            "parameters": {
              "id": 100474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11483:2:382"
            },
            "returnParameters": {
              "id": 100478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100484,
                  "src": "11526:14:382",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100476,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11526:5:382",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11525:16:382"
            },
            "scope": 100485,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 99764,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39469,
              "src": "1865:16:382"
            },
            "id": 99765,
            "nodeType": "InheritanceSpecifier",
            "src": "1865:16:382"
          },
          {
            "baseName": {
              "id": 99766,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42983,
              "src": "1887:7:382"
            },
            "id": 99767,
            "nodeType": "InheritanceSpecifier",
            "src": "1887:7:382"
          },
          {
            "baseName": {
              "id": 99768,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42593,
              "src": "1900:11:382"
            },
            "id": 99769,
            "nodeType": "InheritanceSpecifier",
            "src": "1900:11:382"
          },
          {
            "baseName": {
              "id": 99770,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41535,
              "src": "1917:7:382"
            },
            "id": 99771,
            "nodeType": "InheritanceSpecifier",
            "src": "1917:7:382"
          },
          {
            "baseName": {
              "id": 99772,
              "name": "SharedMetadataBatch",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43779,
              "src": "1930:19:382"
            },
            "id": 99773,
            "nodeType": "InheritanceSpecifier",
            "src": "1930:19:382"
          },
          {
            "baseName": {
              "id": 99774,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40458,
              "src": "1955:4:382"
            },
            "id": 99775,
            "nodeType": "InheritanceSpecifier",
            "src": "1955:4:382"
          },
          {
            "baseName": {
              "id": 99776,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46170,
              "src": "1965:25:382"
            },
            "id": 99777,
            "nodeType": "InheritanceSpecifier",
            "src": "1965:25:382"
          },
          {
            "baseName": {
              "id": 99778,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18344,
              "src": "1996:34:382"
            },
            "id": 99779,
            "nodeType": "InheritanceSpecifier",
            "src": "1996:34:382"
          },
          {
            "baseName": {
              "id": 99780,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15365,
              "src": "2036:27:382"
            },
            "id": 99781,
            "nodeType": "InheritanceSpecifier",
            "src": "2036:27:382"
          }
        ],
        "canonicalName": "EvolvingNFTLogic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100485,
          15365,
          17563,
          17393,
          17769,
          17496,
          18344,
          21859,
          21535,
          33932,
          46170,
          156619,
          150774,
          40458,
          33352,
          33087,
          33064,
          43779,
          34456,
          41535,
          33955,
          42593,
          34117,
          42983,
          34181,
          14831,
          14687,
          39469,
          33216
        ],
        "name": "EvolvingNFTLogic",
        "nameLocation": "1841:16:382",
        "scope": 100486,
        "usedErrors": [
          17531,
          17569,
          17572,
          17575,
          17578,
          17581,
          17584,
          17587,
          17590,
          17593,
          17596,
          17599,
          17602,
          17605,
          21699
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 382
}