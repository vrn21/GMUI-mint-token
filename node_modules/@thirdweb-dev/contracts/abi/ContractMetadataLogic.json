{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "contractURI()": "e8a3d485",
    "setContractURI(string)": "938e3d7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thirdweb.com\",\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"title\":\"Contract Metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI           for you contract.           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/plugin/ContractMetadataLogic.sol\":\"ContractMetadataLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/plugin/ContractMetadataLogic.sol\":{\"keccak256\":\"0x03b15f59bdef64105915f3a512acf05031686dc100097b302e86aa9655b1cb87\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5699be9cee263dcbbd486d6b7c9a8f9754f154edea1828f91e1935789504a45\",\"dweb:/ipfs/QmRv9LuHjrCPHDPtoRmnJoT2hYXyaHjZGNkC8MDeyAeqtN\"]},\"contracts/extension/plugin/ContractMetadataStorage.sol\":{\"keccak256\":\"0xbbd40a6c419b4b6cb9960288c36a7891c748a292b56f7b7dcd3de7b477d76e35\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ac424b465fb9658910b4cf86279a5127a0fb63d8510fc8eb007b01438f0995e\",\"dweb:/ipfs/QmNP82PBoNz2qysBr4o12Nvh75SKCNaWMRYibJVPcAT7hm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "contractURI()": {
            "details": "Returns the metadata URI of the contract."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/plugin/ContractMetadataLogic.sol": "ContractMetadataLogic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/plugin/ContractMetadataLogic.sol": {
        "keccak256": "0x03b15f59bdef64105915f3a512acf05031686dc100097b302e86aa9655b1cb87",
        "urls": [
          "bzz-raw://e5699be9cee263dcbbd486d6b7c9a8f9754f154edea1828f91e1935789504a45",
          "dweb:/ipfs/QmRv9LuHjrCPHDPtoRmnJoT2hYXyaHjZGNkC8MDeyAeqtN"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/plugin/ContractMetadataStorage.sol": {
        "keccak256": "0xbbd40a6c419b4b6cb9960288c36a7891c748a292b56f7b7dcd3de7b477d76e35",
        "urls": [
          "bzz-raw://5ac424b465fb9658910b4cf86279a5127a0fb63d8510fc8eb007b01438f0995e",
          "dweb:/ipfs/QmNP82PBoNz2qysBr4o12Nvh75SKCNaWMRYibJVPcAT7hm"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/plugin/ContractMetadataLogic.sol",
    "id": 35209,
    "exportedSymbols": {
      "ContractMetadataLogic": [
        35208
      ],
      "ContractMetadataStorage": [
        35232
      ],
      "IContractMetadata": [
        33216
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1944:148",
    "nodes": [
      {
        "id": 35124,
        "nodeType": "PragmaDirective",
        "src": "39:23:148",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 35125,
        "nodeType": "ImportDirective",
        "src": "86:39:148",
        "nodes": [],
        "absolutePath": "contracts/extension/plugin/ContractMetadataStorage.sol",
        "file": "./ContractMetadataStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35209,
        "sourceUnit": 35233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35126,
        "nodeType": "ImportDirective",
        "src": "126:44:148",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IContractMetadata.sol",
        "file": "../interface/IContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35209,
        "sourceUnit": 33217,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35208,
        "nodeType": "ContractDefinition",
        "src": "522:1460:148",
        "nodes": [
          {
            "id": 35148,
            "nodeType": "FunctionDefinition",
            "src": "644:202:148",
            "nodes": [],
            "body": {
              "id": 35147,
              "nodeType": "Block",
              "src": "703:143:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35139,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "750:4:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 35147,
                      "src": "713:41:148",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                        "typeString": "struct ContractMetadataStorage.Data"
                      },
                      "typeName": {
                        "id": 35138,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35137,
                          "name": "ContractMetadataStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35219,
                          "src": "713:28:148"
                        },
                        "referencedDeclaration": 35219,
                        "src": "713:28:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                          "typeString": "struct ContractMetadataStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35143,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35140,
                        "name": "ContractMetadataStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35232,
                        "src": "757:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ContractMetadataStorage_$35232_$",
                          "typeString": "type(library ContractMetadataStorage)"
                        }
                      },
                      "id": 35141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contractMetadataStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35231,
                      "src": "757:47:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$35219_storage_ptr_$",
                        "typeString": "function () pure returns (struct ContractMetadataStorage.Data storage pointer)"
                      }
                    },
                    "id": 35142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:49:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                      "typeString": "struct ContractMetadataStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "713:93:148"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 35144,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35139,
                      "src": "823:4:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                        "typeString": "struct ContractMetadataStorage.Data storage pointer"
                      }
                    },
                    "id": 35145,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "contractURI",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 35218,
                    "src": "823:16:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 35134,
                  "id": 35146,
                  "nodeType": "Return",
                  "src": "816:23:148"
                }
              ]
            },
            "baseFunctions": [
              33202
            ],
            "documentation": {
              "id": 35130,
              "nodeType": "StructuredDocumentation",
              "src": "589:50:148",
              "text": "@dev Returns the metadata URI of the contract."
            },
            "functionSelector": "e8a3d485",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nameLocation": "653:11:148",
            "parameters": {
              "id": 35131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:148"
            },
            "returnParameters": {
              "id": 35134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35148,
                  "src": "688:13:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35132,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:15:148"
            },
            "scope": 35208,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35169,
            "nodeType": "FunctionDefinition",
            "src": "1249:188:148",
            "nodes": [],
            "body": {
              "id": 35168,
              "nodeType": "Block",
              "src": "1311:126:148",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 35157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1325:21:148",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35155,
                        "name": "_canSetContractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35207,
                        "src": "1326:18:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 35156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1326:20:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35163,
                  "nodeType": "IfStatement",
                  "src": "1321:76:148",
                  "trueBody": {
                    "id": 35162,
                    "nodeType": "Block",
                    "src": "1348:49:148",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 35159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1369:16:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 35158,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1362:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 35160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1362:24:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35161,
                        "nodeType": "ExpressionStatement",
                        "src": "1362:24:148"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35165,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35151,
                        "src": "1425:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 35164,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35201,
                      "src": "1407:17:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 35166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:23:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35167,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:23:148"
                }
              ]
            },
            "baseFunctions": [
              33208
            ],
            "documentation": {
              "id": 35149,
              "nodeType": "StructuredDocumentation",
              "src": "852:392:148",
              "text": "  @notice         Lets a contract admin set the URI for contract-level metadata.\n  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n                  See {_canSetContractURI}.\n                  Emits {ContractURIUpdated Event}.\n  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "functionSelector": "938e3d7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractURI",
            "nameLocation": "1258:14:148",
            "overrides": {
              "id": 35153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1302:8:148"
            },
            "parameters": {
              "id": 35152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35151,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1287:4:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 35169,
                  "src": "1273:18:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:20:148"
            },
            "returnParameters": {
              "id": 35154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:148"
            },
            "scope": 35208,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35201,
            "nodeType": "FunctionDefinition",
            "src": "1519:298:148",
            "nodes": [],
            "body": {
              "id": 35200,
              "nodeType": "Block",
              "src": "1575:242:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35179,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1622:4:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 35200,
                      "src": "1585:41:148",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                        "typeString": "struct ContractMetadataStorage.Data"
                      },
                      "typeName": {
                        "id": 35178,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35177,
                          "name": "ContractMetadataStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35219,
                          "src": "1585:28:148"
                        },
                        "referencedDeclaration": 35219,
                        "src": "1585:28:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                          "typeString": "struct ContractMetadataStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35183,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35180,
                        "name": "ContractMetadataStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35232,
                        "src": "1629:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ContractMetadataStorage_$35232_$",
                          "typeString": "type(library ContractMetadataStorage)"
                        }
                      },
                      "id": 35181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contractMetadataStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35231,
                      "src": "1629:47:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$35219_storage_ptr_$",
                        "typeString": "function () pure returns (struct ContractMetadataStorage.Data storage pointer)"
                      }
                    },
                    "id": 35182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:49:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                      "typeString": "struct ContractMetadataStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1585:93:148"
                },
                {
                  "assignments": [
                    35185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35185,
                      "mutability": "mutable",
                      "name": "prevURI",
                      "nameLocation": "1702:7:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 35200,
                      "src": "1688:21:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 35184,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35188,
                  "initialValue": {
                    "expression": {
                      "id": 35186,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35179,
                      "src": "1712:4:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                        "typeString": "struct ContractMetadataStorage.Data storage pointer"
                      }
                    },
                    "id": 35187,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "contractURI",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 35218,
                    "src": "1712:16:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:40:148"
                },
                {
                  "expression": {
                    "id": 35193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 35189,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35179,
                        "src": "1738:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$35219_storage_ptr",
                          "typeString": "struct ContractMetadataStorage.Data storage pointer"
                        }
                      },
                      "id": 35191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "contractURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35218,
                      "src": "1738:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35192,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35172,
                      "src": "1757:4:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1738:23:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 35194,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:23:148"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35196,
                        "name": "prevURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35185,
                        "src": "1796:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 35197,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35172,
                        "src": "1805:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 35195,
                      "name": "ContractURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33215,
                      "src": "1777:18:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 35198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:33:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35199,
                  "nodeType": "EmitStatement",
                  "src": "1772:38:148"
                }
              ]
            },
            "documentation": {
              "id": 35170,
              "nodeType": "StructuredDocumentation",
              "src": "1443:71:148",
              "text": "@dev Lets a contract admin set the URI for contract-level metadata."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupContractURI",
            "nameLocation": "1528:17:148",
            "parameters": {
              "id": 35173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35172,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1560:4:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 35201,
                  "src": "1546:18:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:20:148"
            },
            "returnParameters": {
              "id": 35174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:0:148"
            },
            "scope": 35208,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35207,
            "nodeType": "FunctionDefinition",
            "src": "1913:67:148",
            "nodes": [],
            "documentation": {
              "id": 35202,
              "nodeType": "StructuredDocumentation",
              "src": "1823:85:148",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "1922:18:148",
            "parameters": {
              "id": 35203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:2:148"
            },
            "returnParameters": {
              "id": 35206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35207,
                  "src": "1974:4:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35204,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:4:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:6:148"
            },
            "scope": 35208,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 35128,
              "name": "IContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33216,
              "src": "565:17:148"
            },
            "id": 35129,
            "nodeType": "InheritanceSpecifier",
            "src": "565:17:148"
          }
        ],
        "canonicalName": "ContractMetadataLogic",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35127,
          "nodeType": "StructuredDocumentation",
          "src": "172:348:148",
          "text": "  @author  thirdweb.com\n  @title   Contract Metadata\n  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n           for you contract.\n           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          35208,
          33216
        ],
        "name": "ContractMetadataLogic",
        "nameLocation": "540:21:148",
        "scope": 35209,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 148
}