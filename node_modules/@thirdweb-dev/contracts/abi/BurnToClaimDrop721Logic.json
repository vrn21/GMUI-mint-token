{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "originContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "burnTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "TokensBurnedAndClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "burnAndClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBurnToClaimInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "_burnToClaimInfo",
          "type": "tuple"
        }
      ],
      "name": "setBurnToClaimInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyBurnToClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2215:14600:379:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "2215:14600:379:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4474:269;;;;;;;;;;-1:-1:-1;4474:269:379;;;;;:::i;:::-;;:::i;:::-;;;661:14:635;;654:22;636:41;;624:2;609:18;4474:269:379;;;;;;;;1127:220:169;;;;;;;;;;-1:-1:-1;1127:220:169;;;;;:::i;:::-;;:::i;:::-;;7539:179:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1065:126:184:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1811:32:635;;;1793:51;;1781:2;1766:18;1065:126:184;1647:203:635;9198:290:24;;;;;;;;;;-1:-1:-1;9198:290:24;;;;;:::i;:::-;;:::i;15146:155:379:-;;;;;;;;;;-1:-1:-1;15146:155:379;;;;;:::i;:::-;;:::i;1599:173:180:-;;;;;;;;;;-1:-1:-1;1599:173:180;;;;;:::i;:::-;;:::i;6497:889:379:-;;;;;;:::i;:::-;;:::i;3027:393:24:-;;;;;;;;;;;;;:::i;:::-;;;3147:25:635;;;3135:2;3120:18;3027:393:24;3001:177:635;2012:269:183;;;;;;;;;;-1:-1:-1;2012:269:183;;;;;:::i;:::-;;:::i;5393:2252:173:-;;;;;;;;;;-1:-1:-1;5393:2252:173;;;;;:::i;:::-;;:::i;15348:211:379:-;;;;;;;;;;-1:-1:-1;15348:211:379;;;;;:::i;:::-;;:::i;1765:231:168:-;;;;;;;;;;-1:-1:-1;1765:231:168;;;;;:::i;:::-;;:::i;1858:347:186:-;;;;;;;;;;-1:-1:-1;1858:347:186;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13799:208:379:-;;;;;;;;;;;;;:::i;885::178:-;;;;;;;;;;-1:-1:-1;885:208:178;;;;;:::i;:::-;;:::i;13390:108:379:-;;;;;;;;;;;;;:::i;7661:353::-;;;;;;;;;;-1:-1:-1;7661:353:379;;;;;:::i;:::-;;:::i;15610:219::-;;;;;;;;;;-1:-1:-1;15610:219:379;;;;;:::i;:::-;;:::i;14063:184::-;;;;;;;;;;-1:-1:-1;14063:184:379;;;;;:::i;:::-;;:::i;4710:153:172:-;;;;;;;;;;-1:-1:-1;4710:153:172;;;;;:::i;:::-;;:::i;2445:435:186:-;;;;;;;;;;-1:-1:-1;2445:435:186;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5509:32:635;;;5491:51;;5590:6;5578:19;;;5573:2;5558:18;;5551:47;5464:18;2445:435:186;5319:285:635;736:143:178;;;;;;;;;;;;;:::i;1270:158:175:-;;;;;;;;;;-1:-1:-1;1270:158:175;;;;;:::i;:::-;;:::i;3614:256:186:-;;;;;;;;;;-1:-1:-1;3614:256:186;;;;;:::i;:::-;;:::i;7354:123:24:-;;;;;;;;;;-1:-1:-1;7354:123:24;;;;;:::i;:::-;;:::i;1440:124:168:-;;;;;;;;;;;;;:::i;1600:228:184:-;;;;;;;;;;-1:-1:-1;1600:228:184;;;;;:::i;:::-;;:::i;8271:192:173:-;;;;;;;;;;-1:-1:-1;8271:192:173;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4283:284:24:-;;;;;;;;;;-1:-1:-1;4283:284:24;;;;;:::i;:::-;;:::i;2401:2895:173:-;;;;;;;;;;-1:-1:-1;2401:2895:173;;;;;:::i;:::-;;:::i;985:136:169:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1121:1217:173:-;;;;;;:::i;:::-;;:::i;1319:104:180:-;;;;;;;;;;;;;:::i;1501:188:170:-;;;;;;;;;;-1:-1:-1;1501:188:170;;;;;:::i;:::-;;:::i;7782:183:24:-;;;;;;;;;;;;;:::i;4844:288:186:-;;;;;;;;;;-1:-1:-1;4844:288:186;;;;;:::i;:::-;;:::i;2108:582:172:-;;;;;;;;;;-1:-1:-1;2108:582:172;;;;;:::i;:::-;;:::i;1169:147::-;;;;;;;;;;-1:-1:-1;1169:147:172;;;;;:::i;:::-;;:::i;14931:174:379:-;;;;;;;;;;-1:-1:-1;14931:174:379;;;;;:::i;:::-;;:::i;13083:225::-;;;;;;;;;;;;;:::i;8545:270:173:-;;;;;;;;;;-1:-1:-1;8545:270:173;;;;;:::i;:::-;;:::i;2990:180:186:-;;;;;;;;;;;;;:::i;15880:252:379:-;;;;;;;;;;-1:-1:-1;15880:252:379;;;;;:::i;:::-;;:::i;1353:970:169:-;;;;;;;;;;-1:-1:-1;1353:970:169;;;;;:::i;:::-;;:::i;7733:473:173:-;;;;;;;;;;;;;:::i;4041:402:379:-;;;;;;;;;;-1:-1:-1;4041:402:379;;;;;:::i;:::-;;:::i;5799:415::-;;;;;;;;;;-1:-1:-1;5799:415:379;;;;;:::i;:::-;;:::i;5117:575::-;;;;;;;;;;-1:-1:-1;5117:575:379;;;;;:::i;:::-;;:::i;1352:191:183:-;;;;;;;;;;;;;:::i;721:172:173:-;;;;;;;;;;;;;:::i;:::-;;;;14937:25:635;;;14993:2;14978:18;;14971:34;;;;14910:18;721:172:173;14763:248:635;3182:1283:172;;;;;;;;;;-1:-1:-1;3182:1283:172;;;;;:::i;:::-;;:::i;2067:138:170:-;;;;;;;;;;;;;:::i;9985:243:24:-;;;;;;;;;;-1:-1:-1;9985:243:24;;;;;:::i;:::-;;:::i;4474:269:379:-;4628:4;4655:36;4679:11;4655:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;4695:41:379;;;4655:81;4648:88;4474:269;-1:-1:-1;;4474:269:379:o;1127:220:169:-;1233:20;:18;:20::i;:::-;1225:48;;;;-1:-1:-1;;;1225:48:169;;16244:2:635;1225:48:169;;;16226:21:635;16283:2;16263:18;;;16256:30;-1:-1:-1;;;16302:18:635;;;16295:45;16357:18;;1225:48:169;;;;;;;;;1324:16;1284:21;:19;:21::i;:::-;:56;;:37;:56;:::i;:::-;-1:-1:-1;;;1127:220:169:o;7539:179:24:-;7593:13;7618:32;7653:31;:29;:31::i;:::-;7618:66;;7701:4;:10;;7694:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7539:179;:::o;1065:126:184:-;1127:7;1153:21;:19;:21::i;:::-;:31;-1:-1:-1;;;;;1153:31:184;;1065:126;-1:-1:-1;1065:126:184:o;9198:290:24:-;9274:7;9293:32;9328:31;:29;:31::i;:::-;9293:66;;9375:16;9383:7;9375;:16::i;:::-;9370:64;;9400:34;;-1:-1:-1;;;9400:34:24;;;;;;;;;;;9370:64;9452:29;;;;:20;;:29;;-1:-1:-1;9452:29:24;;;;-1:-1:-1;;;;;9452:29:24;;9198:290::o;15146:155:379:-;15242:8;2392:30:179;:28;:30::i;:::-;:50;;;2388:237;;;343:42;2462:45;:49;2458:157;;2531:69;;-1:-1:-1;;;2531:69:179;;343:42;;2531;;:69;;2582:4;;2589:10;;2531:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2458:157;15262:32:379::1;15276:8;15286:7;15262:13;:32::i;1599:173:180:-:0;1669:14;:12;:14::i;:::-;1664:70;;1699:24;;-1:-1:-1;;;1699:24:180;;;;;;;:::i;1664:70::-;1743:22;1755:9;1743:11;:22::i;:::-;1599:173;:::o;6497:889:379:-;6587:28;6605:9;6587:17;:28::i;:::-;6679:19;6701:16;:14;:16::i;:::-;6679:38;;6727:55;6745:11;6758:12;6772:9;6727:17;:55::i;:::-;6792:57;6812:11;6825:12;6839:9;6792:19;:57::i;:::-;6885:209;6927:1;6943:9;6966:21;:19;:21::i;:::-;:46;;;-1:-1:-1;;;;;6966:46:379;7026:21;:19;:21::i;:::-;:58;;;6885:20;:209::i;:::-;7129:33;7139:11;7152:9;7129;:33::i;:::-;7334:12;7309:11;-1:-1:-1;;;;;7200:179:379;7236:21;:19;:21::i;:::-;:59;7200:179;;3147:25:635;;;-1:-1:-1;;;;;7236:59:379;;;;7200:179;;3135:2:635;3120:18;7200:179:379;;;;;;;6577:809;6497:889;;:::o;3027:393:24:-;3080:7;3099:32;3134:31;:29;:31::i;:::-;3368:17;;;;3347:18;;:38;;3027:393;-1:-1:-1;;3027:393:24:o;2012:269:183:-;2129:24;:22;:24::i;:::-;2124:80;;2169:24;;-1:-1:-1;;;2169:24:183;;;;;;;:::i;2124:80::-;2213:61;2235:21;2258:15;2213:21;:61::i;:::-;2012:269;;:::o;5393:2252:173:-;5632:15;5659:39;5701:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;5659:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5659:96:173;;;;;;;;;;;;5701:54;5659:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5659:96:173;;;;-1:-1:-1;;;5786:40:173;;;;5857:31;;;;5922:26;;;;5963:28;;;;5659:96;;-1:-1:-1;5786:40:173;;5857:31;;5922:26;5963:42;5959:515;;6038:425;6074:21;:15;;:21;:::i;:::-;6038:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6113:28:173;;;;;;-1:-1:-1;6232:8:173;;6266:38;;;;;6330:29;;;;;6385:24;;;;;;;;:::i;:::-;6190:241;;-1:-1:-1;;;;;;19477:2:635;19513:15;;;19509:24;;6190:241:173;;;19497:37:635;19550:12;;;19543:28;;;;19587:12;;;19580:28;;;;19642:15;;;19638:24;19624:12;;;19617:46;19679:13;;6190:241:173;;;;;;;;;;;;6159:290;;;;;;6038:18;:425::i;:::-;-1:-1:-1;6021:442:173;-1:-1:-1;5959:515:173;6488:10;6484:534;;;6527:38;;;;:129;;6646:10;6527:129;;;6589:15;:38;;;6527:129;6514:142;;-1:-1:-1;;6683:15:173;:29;;;:50;;:127;;6800:10;6683:127;;;6752:15;:29;;;6683:127;6670:140;;-1:-1:-1;;6840:15:173;:29;;;:50;;:92;;;;-1:-1:-1;6930:1:173;6894:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6894:38:173;;;6840:92;:167;;6994:13;6840:167;;;6951:24;;;;;;;;:::i;:::-;6824:183;;6484:534;7028:29;7060:14;:12;:14::i;:::-;:29;;:51;;:65;7112:12;7060:65;;;;;;;;;;;:75;7126:8;-1:-1:-1;;;;;7060:75:173;-1:-1:-1;;;;;7060:75:173;;;;;;;;;;;;;7028:107;;7163:13;-1:-1:-1;;;;;7150:26:173;:9;-1:-1:-1;;;;;7150:26:173;;;:58;;;;7198:10;7180:14;:28;;7150:58;7146:115;;;7224:26;;-1:-1:-1;;;7224:26:173;;19905:2:635;7224:26:173;;;19887:21:635;19944:2;19924:18;;;19917:30;-1:-1:-1;;;19963:18:635;;;19956:46;20019:18;;7224:26:173;19703:340:635;7146:115:173;7275:14;;;:66;;-1:-1:-1;7330:10:173;7294:33;7306:21;7294:9;:33;:::i;:::-;:46;7275:66;7271:111;;;7357:14;;-1:-1:-1;;;7357:14:173;;;;;;20515:2:635;20497:21;;;20554:1;20534:18;;;20527:29;-1:-1:-1;;;20587:2:635;20572:18;;20565:34;20631:2;20616:18;;20313:327;7271:111:173;7441:17;:36;;;7429:9;7395:17;:31;;;:43;;;;:::i;:::-;:82;7391:133;;;7493:20;;-1:-1:-1;;;7493:20:173;;20847:2:635;7493:20:173;;;20829:21:635;20886:2;20866:18;;;20859:30;-1:-1:-1;;;20905:18:635;;;20898:40;20955:18;;7493:20:173;20645:334:635;7391:133:173;7538:32;;7573:15;-1:-1:-1;7534:105:173;;;7604:24;;-1:-1:-1;;;7604:24:173;;21186:2:635;7604:24:173;;;21168:21:635;21225:2;21205:18;;;21198:30;-1:-1:-1;;;21244:18:635;;;21237:44;21298:18;;7604:24:173;20984:338:635;7534:105:173;5649:1996;;;;;5393:2252;;;;;;;;:::o;15348:211:379:-;15499:4;1623:30:179;:28;:30::i;:::-;:50;;;1619:568;;;343:42;1693:45;:49;1689:488;;-1:-1:-1;;;;;1986:18:179;;1994:10;1986:18;1982:94;;;15515:37:379::1;15534:4;15540:2;15544:7;15515:18;:37::i;:::-;2051:7:179::0;;1982:94;2093:69;;-1:-1:-1;;;2093:69:179;;343:42;;2093;;:69;;2144:4;;2151:10;;2093:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1689:488;15515:37:379::1;15534:4;15540:2;15544:7;15515:18;:37::i;:::-;15348:211:::0;;;;:::o;1765:231:168:-;1829:7;1862:17;:15;:17::i;:::-;1852:6;:27;1848:81;;1895:23;;-1:-1:-1;;;1895:23:168;;21529:2:635;1895:23:168;;;21511:21:635;21568:2;21548:18;;;21541:30;-1:-1:-1;;;21587:18:635;;;21580:43;21640:18;;1895:23:168;21327:337:635;1848:81:168;1945:27;:25;:27::i;:::-;:44;;1982:6;;1945:44;;;;;;:::i;:::-;;;;;;;;;1938:51;;1765:231;;;:::o;1858:347:186:-;1995:16;2013:21;2051:17;2070:11;2085:31;2108:7;2085:22;:31::i;:::-;2050:66;;-1:-1:-1;2050:66:186;;-1:-1:-1;2050:66:186;;;-1:-1:-1;2192:6:186;2173:15;2050:66;2173:9;:15;:::i;:::-;2172:26;;;;:::i;:::-;2156:42;;2040:165;;1858:347;;;;;:::o;13799:208:379:-;13846:7;13865:43;13911:53;:51;:53::i;:::-;13981:19;;13799:208;-1:-1:-1;;13799:208:379:o;885::178:-;963:28;:26;:28::i;:::-;955:84;;;;-1:-1:-1;;;955:84:178;;22433:2:635;955:84:178;;;22415:21:635;22472:2;22452:18;;;22445:30;22511:34;22491:18;;;22484:62;-1:-1:-1;;;22562:18:635;;;22555:41;22613:19;;955:84:178;22231:407:635;955:84:178;1049:37;1073:12;1049:23;:37::i;13390:108:379:-;13442:7;13468:23;:21;:23::i;:::-;13461:30;;13390:108;:::o;7661:353::-;7740:42;2857:4;7769:12;:10;:12::i;:::-;7740:8;:42::i;:::-;7732:65;;;;-1:-1:-1;;;7732:65:379;;22845:2:635;7732:65:379;;;22827:21:635;22884:2;22864:18;;;22857:30;-1:-1:-1;;;22903:18:635;;;22896:40;22953:18;;7732:65:379;22643:334:635;7732:65:379;7808:43;7854:53;:51;:53::i;:::-;7917:37;;;7969:38;;3147:25:635;;;7917:37:379;;-1:-1:-1;7969:38:379;;3135:2:635;3120:18;7969:38:379;;;;;;;;7722:292;7661:353;:::o;15610:219::-;15765:4;1623:30:179;:28;:30::i;:::-;:50;;;1619:568;;;343:42;1693:45;:49;1689:488;;-1:-1:-1;;;;;1986:18:179;;1994:10;1986:18;1982:94;;;15781:41:379::1;15804:4;15810:2;15814:7;15781:22;:41::i;1982:94:179:-:0;2093:69;;-1:-1:-1;;;2093:69:179;;343:42;;2093;;:69;;2144:4;;2151:10;;2093:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1689:488;15781:41:379::1;15804:4;15810:2;15814:7;15781:22;:41::i;14063:184::-:0;14220:20;14226:7;14235:4;14220:5;:20::i;4710:153:172:-;4775:4;4855:1;4798:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;:54;;;;;:::i;:::-;;;:58;4791:65;;4710:153;;;:::o;2445:435:186:-;2525:7;2534:6;2552:34;2589:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;2552:84;;;;;;;;;;-1:-1:-1;;;;;2552:84:186;;;;;;;;;;;;-1:-1:-1;2666:39:186;:207;;2818:25;;2852:19;;;;2666:207;;;2725:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;2725:34:186;2768:17;:15;:17::i;:::-;:28;-1:-1:-1;;;2768:28:186;;;;2666:207;2647:226;;;;;2445:435;;;:::o;736:143:178:-;799:4;822:30;:28;:30::i;:::-;:50;;;;736:143;-1:-1:-1;736:143:178:o;1270:158:175:-;1346:4;1369:24;:22;:24::i;:::-;-1:-1:-1;;;;;1369:52:175;;;:41;:52;;;;;;;;-1:-1:-1;1369:52:175;;;;;;;1270:158::o;3614:256:186:-;3726:20;:18;:20::i;:::-;3721:76;;3762:24;;-1:-1:-1;;;3762:24:186;;;;;;;:::i;3721:76::-;3807:56;3832:17;3851:11;3807:24;:56::i;7354:123:24:-;7418:7;7444:21;7457:7;7444:12;:21::i;:::-;:26;;7354:123;-1:-1:-1;;7354:123:24:o;1440:124:168:-;1488:7;1514:27;:25;:27::i;:::-;:43;;1440:124;-1:-1:-1;1440:124:168:o;1600:228:184:-;1690:29;:27;:29::i;:::-;1685:85;;1735:24;;-1:-1:-1;;;1735:24:184;;;;;;;:::i;1685:85::-;1779:42;1806:14;1779:26;:42::i;8271:192:173:-;8347:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8347:31:173;8402:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;8390:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8390:66:173;;;;;;;;;;;;8402:54;8390:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8271:192;;;:::o;4283:284:24:-;4347:7;4366:32;4401:31;:29;:31::i;:::-;4366:66;-1:-1:-1;;;;;;4446:19:24;;4442:60;;4474:28;;-1:-1:-1;;;4474:28:24;;;;;;;;;;;4442:60;-1:-1:-1;;;;;4527:24:24;;;;;;;:17;;;;:24;;-1:-1:-1;4527:24:24;;;:32;-1:-1:-1;;;;;4527:32:24;;4283:284::o;2401:2895:173:-;2566:24;:22;:24::i;:::-;2561:80;;2606:24;;-1:-1:-1;;;2606:24:173;;;;;;;:::i;2561:80::-;2651:26;2680:14;:12;:14::i;:::-;:44;;-1:-1:-1;2680:29:173;2763:14;:12;:14::i;:::-;:35;;;;-1:-1:-1;3187:18:173;3215:108;;;;3273:39;3294:18;3273;:39;:::i;:::-;3257:55;;3215:108;3371:11;3333:14;:12;:14::i;:::-;:35;;:56;3446:13;3399:14;:12;:14::i;:::-;:60;:29;;3515:688;3535:22;;;3515:688;;;3586:6;;;:69;;;3626:11;;3638:1;3626:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3596:59;;3586:69;3578:84;;;;-1:-1:-1;;;3578:84:173;;23522:2:635;3578:84:173;;;23504:21:635;23561:1;23541:18;;;23534:29;-1:-1:-1;;;23579:18:635;;;23572:32;23621:18;;3578:84:173;23320:325:635;3578:84:173;3677:28;3708:14;:12;:14::i;:::-;:40;;:29;3749:17;3765:1;3749:13;:17;:::i;:::-;3708:59;;;;;;;;;;;:73;;;3677:104;;3822:11;;3834:1;3822:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3799:20;:56;3795:123;;;3875:28;;-1:-1:-1;;;3875:28:173;;23852:2:635;3875:28:173;;;23834:21:635;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:635;;;23903:48;23968:18;;3875:28:173;23650:342:635;3795:123:173;3994:11;;4006:1;3994:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3932;:12;:14::i;:::-;:40;;:29;3973:17;3989:1;3973:13;:17;:::i;:::-;3932:59;;;;;;;;;;;:76;;;;;;:::i;:::-;;;;4098:20;4022:14;:12;:14::i;:::-;:40;;:29;4063:17;4079:1;4063:13;:17;:::i;:::-;4022:59;;;;;;;;;;;-1:-1:-1;4022:59:173;:73;;:96;4163:11;;4175:1;4163:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3559:3:173;;-1:-1:-1;3559:3:173;;;:::i;:::-;;;;3515:688;;;;4743:22;4739:476;;;4798:18;4781:144;4822:13;4818:1;:17;4781:144;;;4867:14;:12;:14::i;:::-;:29;:43;;;:40;;;;:43;;;;;4860:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4860:50:173;;;;;;;4867:29;4860:50;:::i;:::-;;;4837:3;;;;;:::i;:::-;;;;4781:144;;;;4739:476;;;4959:39;;;4955:250;;;5035:11;5018:173;5059:18;5055:1;:22;5018:173;;;5113:14;:12;:14::i;:::-;:40;;:29;5154:17;5170:1;5154:13;:17;:::i;:::-;5113:59;;;;;;;;;;;-1:-1:-1;5113:59:173;;;5106:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5106:66:173;;;5113:59;5106:66;;;;-1:-1:-1;5106:66:173;:::i;:::-;;;5079:3;;;;;:::i;:::-;;;;5018:173;;;;4955:250;5230:59;5253:11;;5266:22;5230:59;;;;;;;;:::i;:::-;;;;;;;;2551:2745;;;;2401:2895;;;:::o;985:136:169:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:21:169;:19;:21::i;:::-;1070:44;;;;;;;;;;;-1:-1:-1;;;;;1070:44:169;;;;;;;;;;;-1:-1:-1;;;1070:44:169;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1070:44:169;;;;;;;985:136;-1:-1:-1;985:136:169:o;1121:1217:173:-;1374:85;1387:9;1398;1409;1420:14;1436:15;1453:5;1374:12;:85::i;:::-;1470:25;1498:27;:25;:27::i;:::-;1470:55;;1536:103;1548:17;1567:16;:14;:16::i;:::-;1585:9;1596;1607:14;1623:15;1536:11;:103::i;:::-;;1761:9;1684:14;:12;:14::i;:::-;:29;:59;;;:40;;;;:59;;;;;:73;;;:86;;:73;;:29;:86;;;;;:::i;:::-;;;;-1:-1:-1;1872:9:173;;-1:-1:-1;1780:14:173;:12;:14::i;:::-;:29;:70;;;:51;;;;:70;;;;;;1851:16;:14;:16::i;:::-;-1:-1:-1;;;;;1780:88:173;-1:-1:-1;;;;;1780:88:173;;;;;;;;;;;;;:101;;;;;;;:::i;:::-;;;;-1:-1:-1;1938:70:173;;-1:-1:-1;1967:1:173;1971:9;1982;1993:14;1938:20;:70::i;:::-;2067:20;2090:44;2113:9;2124;2090:22;:44::i;:::-;2067:67;;2201:9;-1:-1:-1;;;;;2150:86:173;2183:16;:14;:16::i;:::-;-1:-1:-1;;;;;2150:86:173;2164:17;2150:86;2212:12;2226:9;2150:86;;;;;;14937:25:635;;;14993:2;14978:18;;14971:34;14925:2;14910:18;;14763:248;2150:86:173;;;;;;;;2247:84;1364:974;;1121:1217;;;;;;:::o;1319:104:180:-;1366:7;1392:17;:15;:17::i;1501:188:170:-;1578:20;:18;:20::i;:::-;1573:76;;1614:24;;-1:-1:-1;;;1614:24:170;;;;;;;:::i;1573:76::-;1659:23;1677:4;1659:17;:23::i;7782:183:24:-;7838:13;7863:32;7898:31;:29;:31::i;:::-;7863:66;;7946:4;:12;;7939:19;;;;;:::i;4844:288:186:-;4991:20;:18;:20::i;:::-;4986:76;;5027:24;;-1:-1:-1;;;5027:24:186;;;;;;;:::i;4986:76::-;5072:53;5098:8;5108:10;5120:4;5072:25;:53::i;2108:582:172:-;2190:25;2227;2255:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;2227:75;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:12;:19;2339:1;2316:24;2312:82;;;2356:27;;-1:-1:-1;;;2356:27:172;;30404:2:635;2356:27:172;;;30386:21:635;30443:2;30423:18;;;30416:30;-1:-1:-1;;;30462:18:635;;;30455:47;30519:18;;2356:27:172;30202:341:635;2312:82:172;2405:25;2432:22;2469:12;2458:42;;;;;;;;;;;;:::i;:::-;2404:96;;;;2532:34;2547:12;2561:4;;2532:14;:34::i;:::-;2511:56;;2651:14;2613:11;2626:4;;2632:13;2596:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2586:61;;;;;;:79;2578:105;;;;-1:-1:-1;;;2578:105:172;;31988:2:635;2578:105:172;;;31970:21:635;32027:2;32007:18;;;32000:30;-1:-1:-1;;;32046:18:635;;;32039:43;32099:18;;2578:105:172;31786:337:635;2578:105:172;2217:473;;;2108:582;;;;;:::o;1169:147::-;1231:12;1262:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;1255:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:147;;;:::o;14931:174:379:-;15035:8;2392:30:179;:28;:30::i;:::-;:50;;;2388:237;;;343:42;2462:45;:49;2458:157;;2531:69;;-1:-1:-1;;;2531:69:179;;343:42;;2531;;:69;;2582:4;;2589:10;;2531:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2458:157;15055:43:379::1;15079:8;15089;15055:23;:43::i;13083:225::-:0;13129:7;13148:32;13183:31;:29;:31::i;8545:270:173:-;8664:29;8733:14;:12;:14::i;:::-;:29;:65;;;:51;;:65;;;;;;;;-1:-1:-1;;;;;8733:75:173;;;;;;;;-1:-1:-1;8733:75:173;;;;8545:270::o;2990:180:186:-;3055:7;3064:6;3090:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;3090:34:186;3133:17;:15;:17::i;:::-;:28;3082:81;;-1:-1:-1;;;3133:28:186;;;;;;-1:-1:-1;3082:81:186;-1:-1:-1;2990:180:186:o;15880:252:379:-;16062:4;1623:30:179;:28;:30::i;:::-;:50;;;1619:568;;;343:42;1693:45;:49;1689:488;;-1:-1:-1;;;;;1986:18:179;;1994:10;1986:18;1982:94;;;16078:47:379::1;16101:4;16107:2;16111:7;16120:4;16078:22;:47::i;:::-;2051:7:179::0;;1982:94;2093:69;;-1:-1:-1;;;2093:69:179;;343:42;;2093;;:69;;2144:4;;2151:10;;2093:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1689:488;16078:47:379::1;16101:4;16107:2;16111:7;16120:4;16078:22;:47::i;:::-;15880:252:::0;;;;;:::o;1353:970:169:-;1498:39;1540:20;:18;:20::i;:::-;1578:38;;1498:62;;-1:-1:-1;;;;;;1578:52:169;1570:89;;;;-1:-1:-1;;;1570:89:169;;32330:2:635;1570:89:169;;;32312:21:635;32369:2;32349:18;;;32342:30;-1:-1:-1;;;32388:18:635;;;32381:54;32452:18;;1570:89:169;32128:348:635;1570:89:169;1704:29;1674:16;:26;;;:59;;;;;;;;:::i;:::-;;1670:647;;;1757:9;1770:1;1757:14;1749:41;;;;-1:-1:-1;;;1749:41:169;;32683:2:635;1749:41:169;;;32665:21:635;32722:2;32702:18;;;32695:30;-1:-1:-1;;;32741:18:635;;;32734:44;32795:18;;1749:41:169;32481:338:635;1749:41:169;1820:38;;1812:65;;-1:-1:-1;;;1812:65:169;;;;;3147:25:635;;;-1:-1:-1;;;;;1812:80:169;;;;:55;;;;3120:18:635;;1812:65:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1812:80:169;;1804:99;;;;-1:-1:-1;;;1804:99:169;;33282:2:635;1804:99:169;;;33264:21:635;33321:1;33301:18;;;33294:29;-1:-1:-1;;;33339:18:635;;;33332:36;33385:18;;1804:99:169;33080:329:635;1670:647:169;1954:30;1924:16;:26;;;:60;;;;;;;;:::i;:::-;;1920:397;;;2031:24;;;;2078:32;;;2070:61;;;;-1:-1:-1;;;2070:61:169;;33616:2:635;2070:61:169;;;33598:21:635;33655:2;33635:18;;;33628:30;-1:-1:-1;;;33674:18:635;;;33667:46;33730:18;;2070:61:169;33414:340:635;2070:61:169;2179:38;;2170:81;;-1:-1:-1;;;2170:81:169;;2255:9;;-1:-1:-1;;;;;2170:58:169;;;;:81;;2229:11;;2242:8;;2170:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;2145:161;;;;-1:-1:-1;;;2145:161:169;;34150:2:635;2145:161:169;;;34132:21:635;34189:1;34169:18;;;34162:29;-1:-1:-1;;;34207:18:635;;;34200:38;34255:18;;2145:161:169;33948:331:635;7733:473:173;7791:7;7828:9;7887:14;:12;:14::i;:::-;:35;;;7840:14;:12;:14::i;:::-;:44;:82;;;;:::i;:::-;7828:94;;7810:358;7940:14;:12;:14::i;:::-;:44;7936:48;;7810:358;;;8049:14;:12;:14::i;:::-;:40;;:29;8090:5;8094:1;8090;:5;:::i;:::-;8049:47;;;;;;;;;;;:62;;;8030:15;:81;8026:132;;8138:5;8142:1;8138;:5;:::i;:::-;8131:12;;;7733:473;:::o;8026:132::-;7998:3;;;;:::i;:::-;;;;7810:358;;;-1:-1:-1;8178:21:173;;-1:-1:-1;;;8178:21:173;;34757:2:635;8178:21:173;;;34739::635;34796:2;34776:18;;;34769:30;-1:-1:-1;;;34815:18:635;;;34808:41;34866:18;;8178:21:173;34555:335:635;4041:402:379;4107:13;4133:15;4154:21;4166:8;4154:11;:21::i;:::-;4132:43;;;4185:22;4210:21;4222:8;4210:11;:21::i;:::-;4185:46;;4246:25;4263:7;4246:16;:25::i;:::-;4242:195;;;4318:8;4301:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4287:46;;;;4041:402;;;:::o;4242:195::-;4395:8;4405:19;:8;:17;:19::i;:::-;4378:47;;;;;;;;;:::i;5799:415::-;5870:25;5915:35;3173:24;5937:12;:10;:12::i;5915:35::-;5907:59;;;;-1:-1:-1;;;5907:59:379;;36016:2:635;5907:59:379;;;35998:21:635;36055:2;36035:18;;;36028:30;-1:-1:-1;;;36074:18:635;;;36067:41;36125:18;;5907:59:379;35814:335:635;5907:59:379;5976:15;5994:25;6012:6;5994:17;:25::i;:::-;5976:43;;6043:27;6056:7;6065:4;;6043:12;:27::i;:::-;6029:41;;6081:30;6099:7;6081:30;;;;;;;;;;;;:17;:30::i;:::-;6121:33;6133:7;6142:11;6121;:33::i;:::-;6187:6;6170:37;6195:11;6170:37;;;;;;:::i;:::-;;;;;;;;5897:317;5799:415;;;;;:::o;5117:575::-;5264:15;5291:14;5308:23;:21;:23::i;:::-;5291:40;-1:-1:-1;5345:16:379;;5341:278;;5378:25;;5431:35;;;;5442:5;5431:35;:::i;:::-;5377:89;;;;5484:12;:19;5507:1;5484:24;;:48;;;;-1:-1:-1;5512:20:379;;;5484:48;5480:129;;;5552:42;5570:16;5579:7;5570:6;:16;:::i;:::-;5588:5;;5552:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5552:17:379;;-1:-1:-1;;;5552:42:379:i;:::-;5363:256;;5341:278;5636:49;5651:7;5660:17;;5679:5;;5636:14;:49::i;:::-;5629:56;5117:575;-1:-1:-1;;;;;;;5117:575:379:o;1352:191:183:-;1412:7;1421:6;1447:21;:19;:21::i;:::-;:42;-1:-1:-1;;;;;1447:42:183;1498:21;:19;:21::i;721:172:173:-;768:7;777;804:14;:12;:14::i;:::-;:44;850:14;:12;:14::i;:::-;:35;;;796:90;;850:35;;-1:-1:-1;721:172:173;-1:-1:-1;721:172:173:o;3182:1283:172:-;3375:11;;3541:4;3535:11;;3635:19;;;3656:2;3631:28;3618:42;;;3706:22;;;3535:11;3358:14;3802:657;3826:6;3822:1;:10;3802:657;;;3908:12;3950:3;;3955:1;3933:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3933:24:172;;;;;;;;;3923:35;;3933:24;3923:35;;;;4146:21;;;;;4140:28;4234:13;4404:23;;;;;4397:38;3834:7;;-1:-1:-1;4160:1:172;3834:7;:::i;:::-;;;3802:657;;;;3296:1169;3182:1283;;;;;:::o;2067:138:170:-;2128:13;2160:26;:24;:26::i;:::-;2153:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:138;:::o;9985:243:24:-;10082:4;10098:32;10133:31;:29;:31::i;:::-;-1:-1:-1;;;;;10181:30:24;;;;;;;:23;;;;;:30;;;;;;;;:40;;;;;;;;;;-1:-1:-1;;10181:40:24;;;;;9985:243::o;3933:291::-;4026:4;-1:-1:-1;;;;;;4061:40:24;;-1:-1:-1;;;4061:40:24;;:104;;-1:-1:-1;;;;;;;4117:48:24;;-1:-1:-1;;;4117:48:24;4061:104;:156;;;-1:-1:-1;;;;;;;;;;947:40:22;;;4181:36:24;839:155:22;12675:142:379;12745:4;12768:42;12745:4;12797:12;:10;:12::i;2961:141:169:-;3015:36;3070:25;:23;:25::i;1420:205:24:-;523:29;;1420:205::o;2154:141:184:-;2208:36;2263:25;:23;:25::i;11392:258:24:-;11449:4;11465:32;11500:31;:29;:31::i;:::-;11465:66;-1:-1:-1;11588:18:24;;11578:28;;11548:95;;;;-1:-1:-1;11611:25:24;;;;:16;;;:25;;;;;:32;-1:-1:-1;;;11611:32:24;;;;11610:33;11548:95;11541:102;11392:258;-1:-1:-1;;;11392:258:24:o;1351:168:178:-;1414:45;1478:34;:32;:34::i;8734:403:24:-;8814:13;8830:35;8857:7;8830:26;:35::i;:::-;8814:51;;8885:5;-1:-1:-1;;;;;8879:11:24;:2;-1:-1:-1;;;;;8879:11:24;;8875:48;;;8899:24;;-1:-1:-1;;;8899:24:24;;;;;;;;;;;8875:48;8954:5;-1:-1:-1;;;;;8938:21:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8938:21:24;;8934:158;;8978:37;8995:5;9002:12;:10;:12::i;8978:37::-;8973:119;;9042:35;;-1:-1:-1;;;9042:35:24;;;;;;;;;;;8973:119;9102:28;9111:2;9115:7;9124:5;9102:8;:28::i;1887:208:180:-;1946:18;1967:17;:15;:17::i;:::-;:24;-1:-1:-1;;;;;1967:24:180;;-1:-1:-1;2028:9:180;2001:17;:15;:17::i;:::-;:36;;-1:-1:-1;;;;;;2001:36:180;-1:-1:-1;;;;;2001:36:180;;;;;;2053:35;;;;;;;;;;;-1:-1:-1;;2053:35:180;1936:159;1887:208;:::o;8266:580:379:-;8336:47;8386:53;:51;:53::i;:::-;8336:103;;8449:39;8491:31;:29;:31::i;:::-;8559:23;;8616:25;;8449:73;;-1:-1:-1;8559:23:379;8689;:21;:23::i;:::-;8660:25;8676:9;8660:13;:25;:::i;:::-;:52;;8652:72;;;;-1:-1:-1;;;8652:72:379;;37089:2:635;8652:72:379;;;37071:21:635;37128:1;37108:18;;;37101:29;-1:-1:-1;;;37146:18:635;;;37139:37;37193:18;;8652:72:379;36887:330:635;8652:72:379;8742:20;;;:68;;-1:-1:-1;8795:15:379;8766:25;8782:9;8766:13;:25;:::i;:::-;:44;;8742:68;8734:105;;;;-1:-1:-1;;;8734:105:379;;37424:2:635;8734:105:379;;;37406:21:635;37463:2;37443:18;;;37436:30;-1:-1:-1;;;37482:18:635;;;37475:54;37546:18;;8734:105:379;37222:348:635;16342:111:379;16408:7;16434:12;:10;:12::i;2329:573:169:-;2473:39;2515:20;:18;:20::i;:::-;2473:62;-1:-1:-1;2580:29:169;2550:16;:26;;;:59;;;;;;;;:::i;:::-;;2546:350;;;2640:38;;2625:69;;-1:-1:-1;;;2625:69:169;;;;;3147:25:635;;;-1:-1:-1;;;;;2625:59:169;;;;;;3120:18:635;;2625:69:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:350;;;2745:30;2715:16;:26;;;:60;;;;;;;;:::i;:::-;;2711:185;;;2807:38;;2791:94;;-1:-1:-1;;;2791:94:169;;-1:-1:-1;;;;;37795:32:635;;;2791:94:169;;;37777:51:635;37844:18;;;37837:34;;;37887:18;;;37880:34;;;2791:60:169;;;;;;37750:18:635;;2791:94:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9225:1136:379;9425:19;9421:103;;9468:9;:14;9460:33;;;;-1:-1:-1;;;9460:33:379;;38127:2:635;9460:33:379;;;38109:21:635;38166:1;38146:18;;;38139:29;-1:-1:-1;;;38184:18:635;;;38177:36;38230:18;;9460:33:379;37925:329:635;9421:103:379;9535:28;9565:21;9590:20;:18;:20::i;:::-;9534:76;;-1:-1:-1;9534:76:379;-1:-1:-1;9621:21:379;-1:-1:-1;;;;;9645:35:379;;;:84;;9708:21;9645:84;;;9683:22;:20;:22::i;:::-;9621:108;-1:-1:-1;9740:18:379;9761:33;9780:14;9761:16;:33;:::i;:::-;9740:54;-1:-1:-1;9804:20:379;3480:6;9828:27;;;;9740:54;9828:27;:::i;:::-;9827:39;;;;:::i;:::-;9804:62;-1:-1:-1;9877:18:379;-1:-1:-1;;;;;9909:45:379;;408:42:282;9909:45:379;9905:176;;;-1:-1:-1;9986:9:379;:23;;9905:176;;;-1:-1:-1;10056:9:379;:14;9905:176;10098:13;10090:43;;;;-1:-1:-1;;;10090:43:379;;38461:2:635;10090:43:379;;;38443:21:635;38500:2;38480:18;;;38473:30;-1:-1:-1;;;38519:18:635;;;38512:47;38576:18;;10090:43:379;38259:341:635;10090:43:379;10144:97;10181:9;10192:12;:10;:12::i;:::-;10206:20;10228:12;10144:36;:97::i;:::-;10251:103;10288:9;10299:12;:10;:12::i;:::-;10313:13;10328:25;10341:12;10328:10;:25;:::i;:::-;10251:36;:103::i;:::-;9411:950;;;;;;9225:1136;;;;:::o;11729:102:24:-;11797:27;11807:2;11811:8;11797:27;;;;;;;;;;;;:9;:27::i;2364:419:183:-;2492:6;2474:15;:24;2470:80;;;2514:25;;-1:-1:-1;;;2514:25:183;;;;;;;:::i;2470:80::-;2606:15;2560:21;:19;:21::i;:::-;:62;;;;;;;-1:-1:-1;;;2560:62:183;-1:-1:-1;;;;2560:62:183;;;;;;;;;2677:21;2632;:19;:21::i;:::-;:66;;-1:-1:-1;;;;;;2632:66:183;-1:-1:-1;;;;;2632:66:183;;;;;;2714:62;;3147:25:635;;;2714:62:183;;;;;;3135:2:635;3120:18;2714:62:183;;;;;;;;2364:419;;:::o;9842:120:173:-;9889:29;9937:18;:16;:18::i;898:906:284:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;39106:19:635;;;39141:12;;;39134:28;;;39178:12;;1391:44:284;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;39106:19:635;;;39141:12;;;39134:28;;;39178:12;;1578:44:284;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:284;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:284;;;;;-1:-1:-1;;;;898:906:284:o;10290:164:24:-;10419:28;10429:4;10435:2;10439:7;10419:9;:28::i;3943:159:168:-;4003:42;4064:31;:29;:31::i;327:253:380:-;170:43;;327:253::o;1099:191:178:-;1223:12;1170:30;:28;:30::i;:::-;:65;;-1:-1:-1;;1170:65:178;;;;;;;;;;1250:33;;661:14:635;;654:22;636:41;;1250:33:178;;624:2:635;609:18;1250:33:178;;;;;;;1099:191;:::o;1089:129:177:-;1145:7;1171:18;:16;:18::i;16459:176:379:-;16557:14;16590:38;:36;:38::i;16138:198::-;16207:4;16223:36;16262:25;:23;:25::i;:::-;16304:13;:19;;;;;;;;;;;-1:-1:-1;;;;;16304:25:379;;;;;;;;;-1:-1:-1;;16304:25:379;;;;;;16138:198::o;10520:179:24:-;10653:39;10670:4;10676:2;10680:7;10653:39;;;;;;;;;;;;:16;:39::i;18314:2457::-;18393:32;18428:31;:29;:31::i;:::-;18393:66;;18470:35;18508:21;18521:7;18508:12;:21::i;:::-;18555:18;;18470:59;;-1:-1:-1;18584:284:24;;;;18617:22;18659:4;-1:-1:-1;;;;;18643:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18643:20:24;;:76;;;;18683:36;18700:4;18706:12;:10;:12::i;18683:36::-;18643:132;;;;18763:12;:10;:12::i;:::-;-1:-1:-1;;;;;18739:36:24;:20;18751:7;18739:11;:20::i;:::-;-1:-1:-1;;;;;18739:36:24;;18643:132;18617:159;;18796:17;18791:66;;18822:35;;-1:-1:-1;;;18822:35:24;;;;;;;;;;;18791:66;18603:265;18584:284;18878:51;18900:4;18914:1;18918:7;18927:1;18878:21;:51::i;:::-;18991:35;19008:1;19012:7;19021:4;18991:8;:35::i;:::-;-1:-1:-1;;;;;19350:23:24;;;19316:31;19350:23;;;:17;;;:23;;;;;;;;19387:24;;-1:-1:-1;;;;;;;;;;19387:24:24;;;;;;;;;-1:-1:-1;;;;;;19387:24:24;;;;19425:29;;;;;19410:1;19425:29;;;;;;;;-1:-1:-1;;;;;;19425:29:24;;;;;;;;;;19584:25;;;:16;;;:25;;;;;;19623:20;;-1:-1:-1;;;;19690:15:24;19657:49;;;-1:-1:-1;;;19657:49:24;-1:-1:-1;;;;;;19657:49:24;;;;;;;;;;19720:22;-1:-1:-1;;;19720:22:24;;;20008:11;;;20067:29;;;;;20114:13;;19350:23;;20067:29;;20114:13;20110:382;;20321:18;;20306:33;;20302:176;;20363:20;;20431:28;;;;-1:-1:-1;;;;;20405:54:24;-1:-1:-1;;;20405:54:24;-1:-1:-1;;;;;;20405:54:24;;;-1:-1:-1;;;;;20363:20:24;;20405:54;;;;20302:176;-1:-1:-1;;20517:35:24;;20544:7;;-1:-1:-1;20540:1:24;;-1:-1:-1;;;;;;20517:35:24;;;-1:-1:-1;;;;;;;;;;;20517:35:24;20540:1;;20517:35;-1:-1:-1;;20735:17:24;;;;:19;;;;;;;-1:-1:-1;;18314:2457:24:o;4917:147:172:-;4973:38;5030:27;:25;:27::i;5662:129:186:-;5712:32;5763:21;:19;:21::i;2114:150:175:-;2171:39;2229:28;:26;:28::i;3957:370:186:-;4076:6;4062:11;:20;4058:76;;;4098:25;;-1:-1:-1;;;4098:25:186;;;;;;;:::i;4058:76::-;4181:17;4144;:15;:17::i;:::-;:54;;-1:-1:-1;;;;;;4144:54:186;-1:-1:-1;;;;;4144:54:186;;;;;;;;;;4246:11;4208:17;:15;:17::i;:::-;:50;;;;;;;-1:-1:-1;;;4208:50:186;-1:-1:-1;;;;4208:50:186;;;;;;;;;4274:46;;3147:25:635;;;-1:-1:-1;;;;;4274:46:186;;;;;3135:2:635;3120:18;4274:46:186;3001:177:635;6031:1266:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6161:31:24;:29;:31::i;:::-;6126:66;-1:-1:-1;6218:7:24;6316:18;;6309:25;;6305:928;;;6358:31;6392:22;;;:16;;;:22;;;;;;;;;6358:56;;;;;;;;;-1:-1:-1;;;;;6358:56:24;;;;-1:-1:-1;;;6358:56:24;;-1:-1:-1;;;;;6358:56:24;;;;;;;;-1:-1:-1;;;6358:56:24;;;;;;;;;;;;;;6436:779;;6489:14;;-1:-1:-1;;;;;6489:28:24;;6485:107;;6556:9;6031:1266;-1:-1:-1;;;;6031:1266:24:o;6485:107::-;-1:-1:-1;;;6952:6:24;7000:22;;;;:16;;;:22;;;;;;;;;6988:34;;;;;;;;;-1:-1:-1;;;;;6988:34:24;;;;;-1:-1:-1;;;6988:34:24;;-1:-1:-1;;;;;6988:34:24;;;;;;;;-1:-1:-1;;;6988:34:24;;;;;;;;;;;;;7056:28;7052:115;;7127:9;6031:1266;-1:-1:-1;;;;6031:1266:24:o;7052:115::-;6909:284;;;6336:897;6305:928;7259:31;;-1:-1:-1;;;7259:31:24;;;;;;;;;;;1910:192:184;2023:14;1989:21;:19;:21::i;:::-;:48;;-1:-1:-1;;;;;;1989:48:184;-1:-1:-1;;;;;1989:48:184;;;;;;2052:43;;;;;;;;-1:-1:-1;;2052:43:184;1910:192;:::o;8906:229:379:-;9100:28;9118:9;9100:17;:28::i;:::-;8906:229;;;;;;:::o;10414:326::-;10541:20;10577:32;10612:31;:29;:31::i;:::-;10668:18;;;-1:-1:-1;10577:66:379;-1:-1:-1;10696:37:379;10706:3;10711:21;10696:9;:37::i;:::-;10567:173;10414:326;;;;:::o;2143:129:180:-;2193:32;2244:21;:19;:21::i;1771:239:170:-;1837:21;1861:26;:24;:26::i;:::-;1837:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:4;1909:26;:24;:26::i;:::-;:45;;;;;;;;:::i;:::-;;1970:33;1989:7;1998:4;1970:33;;;;;;;:::i;5234:380:186:-;5381:6;5374:4;:13;5370:69;;;5403:25;;-1:-1:-1;;;5403:25:186;;;;;;;:::i;5370:69::-;5499:49;;;;;;;;5524:10;-1:-1:-1;;;;;5499:49:186;;;;;5541:4;5499:49;;;5449:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;:99;;;;-1:-1:-1;;;;;;5449:99:186;-1:-1:-1;;;;;5449:99:186;;;;;;;;;;;;;;;;5564:43;3147:25:635;;;5564:43:186;;;;5449:47;;5564:43;;3120:18:635;5564:43:186;;;;;;;;5234:380;;;:::o;9555:364:24:-;9649:32;9684:31;:29;:31::i;:::-;9649:66;;9742:12;:10;:12::i;:::-;-1:-1:-1;;;;;9730:24:24;:8;-1:-1:-1;;;;;9730:24:24;;9726:54;;;9763:17;;-1:-1:-1;;;9763:17:24;;;;;;;;;;;9726:54;9841:8;9791:4;:23;;:37;9815:12;:10;:12::i;:::-;-1:-1:-1;;;;;9791:37:24;;;;;;;;;;;;;;;;;-1:-1:-1;9791:37:24;;;:47;;;;;;;;;;;;:58;;-1:-1:-1;;9791:58:24;;;;;;;;;;;9879:12;:10;:12::i;:::-;-1:-1:-1;;;;;9864:48:24;;9903:8;9864:48;;;;661:14:635;654:22;636:41;;624:2;609:18;;496:187;10765:381:24;10926:28;10936:4;10942:2;10946:7;10926:9;:28::i;:::-;10968:15;:2;-1:-1:-1;;;;;10968:13:24;;:15::i;:::-;10964:176;;;11002:56;11033:4;11039:2;11043:7;11052:5;11002:30;:56::i;:::-;10997:143;;11085:40;;-1:-1:-1;;;11085:40:24;;;;;;;;;;;2084:499:168;2146:15;2163:13;2188:25;2216:17;:15;:17::i;:::-;2188:45;;2243:24;2270:27;:25;:27::i;:::-;2243:63;;;;;;;;;;;;;;;;;;;;2270:36;2243:63;;;2270:36;2243:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:9;2317:224;2341:17;2337:1;:21;2317:224;;;2397:7;2405:1;2397:10;;;;;;;;:::i;:::-;;;;;;;2386:8;:21;2382:149;;;2435:1;2427:9;;2464:7;2472:1;2464:10;;;;;;;;:::i;:::-;;;;;;;2454:20;;2493:23;;;2084:499;;;:::o;2382:149::-;2360:6;2365:1;2360:6;;:::i;:::-;;;2317:224;;;-1:-1:-1;2551:25:168;;-1:-1:-1;;;2551:25:168;;39791:2:635;2551:25:168;;;39773:21:635;39830:2;39810:18;;;39803:30;-1:-1:-1;;;39849:18:635;;;39842:45;39904:18;;2551:25:168;39589:339:635;2697:446:168;2759:13;2784:25;2812:17;:15;:17::i;:::-;2784:45;;2839:24;2866:27;:25;:27::i;:::-;2839:63;;;;;;;;;;;;;;;;;;;;2866:36;2839:63;;;2866:36;2839:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2918:9;2913:189;2937:17;2933:1;:21;2913:189;;;2993:7;3001:1;2993:10;;;;;;;;:::i;:::-;;;;;;;2982:8;:21;2978:114;;;3030:27;:25;:27::i;:::-;:35;;:47;3066:7;3074:1;3066:10;;;;;;;;:::i;:::-;;;;;;;3030:47;;;;;;;;;;;3023:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:446;;;:::o;2978:114::-;2956:6;2961:1;2956:6;;:::i;:::-;;;2913:189;;305:703:290;361:13;578:10;574:51;;-1:-1:-1;;604:10:290;;;;;;;;;;;;-1:-1:-1;;;604:10:290;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:290;;-1:-1:-1;750:2:290;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:290;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:290;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:290;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:290;;;;;;;;-1:-1:-1;949:11:290;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:290:o;1379:164:172:-;1522:14;1472:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;:64;;;;:47;;:64;;;;;;:::i;3228:145:168:-;3358:8;3310:27;:25;:27::i;:::-;:35;;:45;3346:8;3310:45;;;;;;;;;;;:56;;;;;;;;;;;;:::i;1833:630:177:-;1988:15;2020:14;:12;:14::i;:::-;2015:70;;2050:24;;-1:-1:-1;;;2050:24:177;;;;;;;:::i;2015:70::-;2099:12;2095:58;;2127:15;;-1:-1:-1;;;2127:15:177;;40252:2:635;2127:15:177;;;40234:21:635;40291:1;40271:18;;;40264:29;-1:-1:-1;;;40309:18:635;;;40302:35;40354:18;;2127:15:177;40050:328:635;2095:58:177;2163:15;2181:18;:16;:18::i;:::-;:40;;;2163:58;;2286:55;2305:7;2314;2323:17;;2286:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2286:18:177;;-1:-1:-1;;;2286:55:177:i;:::-;2233:18;:16;:18::i;:::-;2232:109;;;;;-1:-1:-1;2374:7:177;2357:74;2403:1;2383:17;2393:7;2374;2383:17;:::i;:::-;:21;;;;:::i;:::-;2406:17;;2425:5;;2357:74;;;;;;;;;;:::i;:::-;;;;;;;;2442:14;1833:630;;;;;;;:::o;2835:141:183:-;2889:36;2944:25;:23;:25::i;2264:156:170:-;2323:41;2383:30;:28;:30::i;740:189:169:-;779:18;;605:47;651:1;613:34;605:47;:::i;:::-;594:59;;;;;;3147:25:635;;3135:2;3120:18;;3001:177;594:59:169;;;;-1:-1:-1;;594:59:169;;;;;;;;;584:70;;594:59;584:70;;;;;740:189;-1:-1:-1;;740:189:169:o;419:188:184:-;458:18;;312:46;357:1;320:33;312:46;:::i;464:198:178:-;503:18;;340:56;395:1;348:43;340:56;:::i;20882:270:24:-;20992:32;21027:31;:29;:31::i;:::-;21068:29;;;;:20;;;:29;;;;;;:34;;-1:-1:-1;;;;;;21068:34:24;-1:-1:-1;;;;;21068:34:24;;;;;;;;;21117:28;;21068:20;;-1:-1:-1;21068:29:24;;:34;;21117:28;;;;;;21068:29;21117:28;20982:170;20882:270;;;:::o;508:385:282:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:282;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;12191:1820:24:-;12309:32;12344:31;:29;:31::i;:::-;12409:18;;12309:66;;-1:-1:-1;;;;;;12441:16:24;;12437:48;;12466:19;;-1:-1:-1;;;12466:19:24;;;;;;;;;;;12437:48;12499:13;12495:44;;12521:18;;-1:-1:-1;;;12521:18:24;;;;;;;;;;;12495:44;12550:61;12580:1;12584:2;12588:12;12602:8;12550:21;:61::i;:::-;-1:-1:-1;;;;;12882:21:24;;;;;;:17;;;:21;;;;;;;;:49;;-1:-1:-1;;;;;;12945:54:24;;-1:-1:-1;;;;;12882:49:24;;;;;;;12945:54;;;-1:-1:-1;;;;;;;;;12882:49:24;;;;;;12945:54;;;;;;;;;;;;;;;;13014:30;;;:16;;;:30;;;;;;:40;;-1:-1:-1;;;;;;13068:71:24;;;-1:-1:-1;;;13123:15:24;13068:71;;;;;;;;;;;;;13014:30;;13217:23;;;;13259:15;;:13;:15::i;:::-;13255:623;;;13294:308;13324:38;;13349:12;;-1:-1:-1;;;;;13324:38:24;;;13341:1;;-1:-1:-1;;;;;;;;;;;13324:38:24;13341:1;;13324:38;13389:69;13428:1;13432:2;13436:14;;;;;;13452:5;13389:30;:69::i;:::-;13384:172;;13493:40;;-1:-1:-1;;;13493:40:24;;;;;;;;;;;13384:172;13597:3;13582:12;:18;13294:308;;13664:18;;:34;;13660:48;;13700:8;;;13660:48;13255:623;;;13747:117;13777:40;;13802:14;;;;;-1:-1:-1;;;;;13777:40:24;;;13794:1;;-1:-1:-1;;;;;;;;;;;13777:40:24;13794:1;;13777:40;13859:3;13844:12;:18;13747:117;;13255:623;-1:-1:-1;13891:33:24;;13944:60;15348:211:379;499:180:173;538:18;;318:38;355:1;326:25;318:38;:::i;15753:2184:24:-;15863:32;15898:31;:29;:31::i;:::-;15863:66;;15940:35;15978:21;15991:7;15978:12;:21::i;:::-;15940:59;;16036:4;-1:-1:-1;;;;;16014:26:24;:13;:18;;;-1:-1:-1;;;;;16014:26:24;;16010:67;;16049:28;;-1:-1:-1;;;16049:28:24;;;;;;;;;;;16010:67;16088:22;16130:4;-1:-1:-1;;;;;16114:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16114:20:24;;:72;;;;16150:36;16167:4;16173:12;:10;:12::i;16150:36::-;16114:124;;;;16226:12;:10;:12::i;:::-;-1:-1:-1;;;;;16202:36:24;:20;16214:7;16202:11;:20::i;:::-;-1:-1:-1;;;;;16202:36:24;;16114:124;16088:151;;16255:17;16250:66;;16281:35;;-1:-1:-1;;;16281:35:24;;;;;;;;;;;16250:66;-1:-1:-1;;;;;16330:16:24;;16326:52;;16355:23;;-1:-1:-1;;;16355:23:24;;;;;;;;;;;16326:52;16389:43;16411:4;16417:2;16421:7;16430:1;16389:21;:43::i;:::-;16494:35;16511:1;16515:7;16524:4;16494:8;:35::i;:::-;-1:-1:-1;;;;;16819:23:24;;;;;;;:17;;;:23;;;;;;;;:36;;-1:-1:-1;;;;;;16819:36:24;;;-1:-1:-1;;;;;16819:36:24;;;-1:-1:-1;;16819:36:24;;;;;;;16869:21;;;;;;;;;:34;;;;;;;;-1:-1:-1;16869:34:24;;;;;;;;;;;16952:25;;;:16;;;:25;;;;;;16991:18;;-1:-1:-1;;;;;;17023:49:24;;;;-1:-1:-1;;;17056:15:24;17023:49;;;;;;;;;;17342:11;;17401:29;;;;;17448:13;;16952:25;;17401:29;;17448:13;17444:382;;17655:18;;17640:33;;17636:176;;17697:20;;17765:28;;;;-1:-1:-1;;;;;17739:54:24;-1:-1:-1;;;17739:54:24;-1:-1:-1;;;;;;17739:54:24;;;-1:-1:-1;;;;;17697:20:24;;17739:54;;;;17636:176;16795:1041;;;17870:7;17866:2;-1:-1:-1;;;;;17851:27:24;17860:4;-1:-1:-1;;;;;17851:27:24;-1:-1:-1;;;;;;;;;;;17851:27:24;;;;;;;;;17888:42;15348:211:379;606:195:168;645:18;;262:53;314:1;270:40;262:53;:::i;2519:132:177:-;2570:33;2622:22;:20;:22::i;1434:384:175:-;1487:14;1517:30;1536:10;1517:18;:30::i;:::-;1513:299;;;-1:-1:-1;;;1719:14:175;1715:23;1702:37;1698:2;1694:46;1434:384;:::o;1513:299::-;-1:-1:-1;1791:10:175;;1434:384::o;859:187:181:-;898:18;;478:45;522:1;486:32;478:45;:::i;14301:579:379:-;14646:35;-1:-1:-1;;;;;;;;;;;14678:1:379;14646:8;:35::i;:::-;14645:36;:58;;;;-1:-1:-1;;;;;;14685:18:379;;;;14645:58;:78;;;;-1:-1:-1;;;;;;14707:16:379;;;;14645:78;14641:233;;;14744:29;-1:-1:-1;;;;;;;;;;;14768:4:379;14744:8;:29::i;:::-;14743:30;:62;;;;;14778:27;-1:-1:-1;;;;;;;;;;;14802:2:379;14778:8;:27::i;:::-;14777:28;14743:62;14739:125;;;14825:24;;-1:-1:-1;;;14825:24:379;;41096:2:635;14825:24:379;;;41078:21:635;41135:2;41115:18;;;41108:30;-1:-1:-1;;;41154:18:635;;;41147:44;41208:18;;14825:24:379;40894:338:635;535:190:172;574:18;;318:48;365:1;326:35;318:48;:::i;715:183:186:-;754:18;;291:41;331:1;299:28;291:41;:::i;518:191:175:-;557:18;;384:49;432:1;392:36;384:49;:::i;825:183:180:-;864:18;;654:41;694:1;662:28;654:41;:::i;1137:320:286:-;-1:-1:-1;;;;;1427:19:286;;:23;;;1137:320::o;21633:650:24:-;21791:4;21827:2;-1:-1:-1;;;;;21811:36:24;;21848:12;:10;:12::i;:::-;21862:4;21868:7;21877:5;21811:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21811:72:24;;;;;;;;-1:-1:-1;;21811:72:24;;;;;;;;;;;;:::i;:::-;;;21807:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22042:13:24;;22038:229;;22087:40;;-1:-1:-1;;;22087:40:24;;;;;;;;;;;22038:229;22227:6;22221:13;22212:6;22208:2;22204:15;22197:38;21807:470;-1:-1:-1;;;;;;21929:55:24;-1:-1:-1;;;21929:55:24;;-1:-1:-1;21633:650:24;;;;;;:::o;12205:129:379:-;12269:4;12292:35;3173:24;12314:12;:10;:12::i;3468:417:168:-;3618:25;;3682:24;3693:13;3682:8;:24;:::i;:::-;3672:34;;3736:7;3716:27;;3754;:25;:27::i;:::-;:50;;;;;;;:36;:50;;;;;;;;;;;3861:17;3814:27;:25;:27::i;:::-;:35;;:44;3850:7;3814:44;;;;;;;;;;;:64;;;;;;;;;;;;:::i;:::-;;3468:417;;;;;;:::o;640:188:183:-;679:18;;346:46;391:1;354:33;346:46;:::i;845:193:170:-;884:18;;677:51;727:1;685:38;677:51;:::i;2532:292:282:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:282;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:282;;42397:2:635;2769:48:282;;;42379:21:635;42436:2;42416:18;;;42409:30;-1:-1:-1;;;42455:18:635;;;42448:58;42523:18;;2769:48:282;42195:352:635;2073:396:282;2234:3;-1:-1:-1;;;;;2225:12:282;:5;-1:-1:-1;;;;;2225:12:282;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:282;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:282;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:282;;2432:5;2439:3;2444:7;2397:34;:55::i;533:185:177:-;572:18;;337:43;379:1;345:30;337:43;:::i;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;42810:15:635;;;1111:68:228;;;42792:34:635;42862:15;;42842:18;;;42835:43;42894:18;;;42887:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;42727:18:635;;1111:68:228;42552:375:635;3241:706:228;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;43134:2:635;3845:85:228;;;43116:21:635;43173:2;43153:18;;;43146:30;43212:34;43192:18;;;43185:62;-1:-1:-1;;;43263:18:635;;;43256:40;43313:19;;3845:85:228;42932:406:635;3827:223:286;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:286;;43952:2:635;5194:60:286;;;43934:21:635;43991:2;43971:18;;;43964:30;44030:31;44010:18;;;44003:59;44079:18;;5194:60:286;43750:353:635;5194:60:286;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:286;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:286;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:286;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:635;-1:-1:-1;;;;;;88:32:635;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:203::-;783:6;836:3;824:9;815:7;811:23;807:33;804:53;;;853:1;850;843:12;804:53;-1:-1:-1;876:9:635;688:203;-1:-1:-1;688:203:635:o;896:258::-;968:1;978:113;992:6;989:1;986:13;978:113;;;1068:11;;;1062:18;1049:11;;;1042:39;1014:2;1007:10;978:113;;;1109:6;1106:1;1103:13;1100:48;;;-1:-1:-1;;1144:1:635;1126:16;;1119:27;896:258::o;1159:::-;1201:3;1239:5;1233:12;1266:6;1261:3;1254:19;1282:63;1338:6;1331:4;1326:3;1322:14;1315:4;1308:5;1304:16;1282:63;:::i;:::-;1399:2;1378:15;-1:-1:-1;;1374:29:635;1365:39;;;;1406:4;1361:50;;1159:258;-1:-1:-1;;1159:258:635:o;1422:220::-;1571:2;1560:9;1553:21;1534:4;1591:45;1632:2;1621:9;1617:18;1609:6;1591:45;:::i;1855:180::-;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;-1:-1:-1;2006:23:635;;1855:180;-1:-1:-1;1855:180:635:o;2040:131::-;-1:-1:-1;;;;;2115:31:635;;2105:42;;2095:70;;2161:1;2158;2151:12;2176:315;2244:6;2252;2305:2;2293:9;2284:7;2280:23;2276:32;2273:52;;;2321:1;2318;2311:12;2273:52;2360:9;2347:23;2379:31;2404:5;2379:31;:::i;:::-;2429:5;2481:2;2466:18;;;;2453:32;;-1:-1:-1;;;2176:315:635:o;2496:247::-;2555:6;2608:2;2596:9;2587:7;2583:23;2579:32;2576:52;;;2624:1;2621;2614:12;2576:52;2663:9;2650:23;2682:31;2707:5;2682:31;:::i;2748:248::-;2816:6;2824;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;-1:-1:-1;;2916:23:635;;;2986:2;2971:18;;;2958:32;;-1:-1:-1;2748:248:635:o;3183:163::-;3250:5;3295:3;3286:6;3281:3;3277:16;3273:26;3270:46;;;3312:1;3309;3302:12;3351:854;3490:6;3498;3506;3514;3522;3530;3583:3;3571:9;3562:7;3558:23;3554:33;3551:53;;;3600:1;3597;3590:12;3551:53;3636:9;3623:23;3613:33;;3696:2;3685:9;3681:18;3668:32;3709:31;3734:5;3709:31;:::i;:::-;3759:5;-1:-1:-1;3811:2:635;3796:18;;3783:32;;-1:-1:-1;3867:2:635;3852:18;;3839:32;3880:33;3839:32;3880:33;:::i;:::-;3932:7;-1:-1:-1;3986:3:635;3971:19;;3958:33;;-1:-1:-1;4042:3:635;4027:19;;4014:33;-1:-1:-1;;;;;4059:30:635;;4056:50;;;4102:1;4099;4092:12;4056:50;4125:74;4191:7;4182:6;4171:9;4167:22;4125:74;:::i;:::-;4115:84;;;3351:854;;;;;;;;:::o;4210:456::-;4287:6;4295;4303;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4411:9;4398:23;4430:31;4455:5;4430:31;:::i;:::-;4480:5;-1:-1:-1;4537:2:635;4522:18;;4509:32;4550:33;4509:32;4550:33;:::i;:::-;4210:456;;4602:7;;-1:-1:-1;;;4656:2:635;4641:18;;;;4628:32;;4210:456::o;4671:274::-;-1:-1:-1;;;;;4863:32:635;;;;4845:51;;4927:2;4912:18;;4905:34;4833:2;4818:18;;4671:274::o;4950:118::-;5036:5;5029:13;5022:21;5015:5;5012:32;5002:60;;5058:1;5055;5048:12;5073:241;5129:6;5182:2;5170:9;5161:7;5157:23;5153:32;5150:52;;;5198:1;5195;5188:12;5150:52;5237:9;5224:23;5256:28;5278:5;5256:28;:::i;5609:826::-;5804:2;5793:9;5786:21;5849:6;5843:13;5838:2;5827:9;5823:18;5816:41;5911:2;5903:6;5899:15;5893:22;5888:2;5877:9;5873:18;5866:50;5970:2;5962:6;5958:15;5952:22;5947:2;5936:9;5932:18;5925:50;6030:2;6022:6;6018:15;6012:22;6006:3;5995:9;5991:19;5984:51;6090:3;6082:6;6078:16;6072:23;6066:3;6055:9;6051:19;6044:52;6151:3;6143:6;6139:16;6133:23;6127:3;6116:9;6112:19;6105:52;6240:1;6236;6231:3;6227:11;6223:19;6216:3;6208:6;6204:16;6198:23;6194:49;6188:3;6177:9;6173:19;6166:78;5767:4;6291:3;6283:6;6279:16;6273:23;6315:6;6357:2;6352;6341:9;6337:18;6330:30;;6377:52;6424:3;6413:9;6409:19;6395:12;6377:52;:::i;6440:785::-;6567:6;6575;6583;6636:2;6624:9;6615:7;6611:23;6607:32;6604:52;;;6652:1;6649;6642:12;6604:52;6692:9;6679:23;-1:-1:-1;;;;;6762:2:635;6754:6;6751:14;6748:34;;;6778:1;6775;6768:12;6748:34;6816:6;6805:9;6801:22;6791:32;;6861:7;6854:4;6850:2;6846:13;6842:27;6832:55;;6883:1;6880;6873:12;6832:55;6923:2;6910:16;6949:2;6941:6;6938:14;6935:34;;;6965:1;6962;6955:12;6935:34;7020:7;7013:4;7003:6;7000:1;6996:14;6992:2;6988:23;6984:34;6981:47;6978:67;;;7041:1;7038;7031:12;6978:67;7072:4;7064:13;;;;-1:-1:-1;7096:6:635;-1:-1:-1;;7137:20:635;;7124:34;7167:28;7124:34;7167:28;:::i;:::-;7214:5;7204:15;;;6440:785;;;;;:::o;7230:127::-;7291:10;7286:3;7282:20;7279:1;7272:31;7322:4;7319:1;7312:15;7346:4;7343:1;7336:15;7362:761;7637:13;;-1:-1:-1;;;;;7633:22:635;;;7615:41;;7703:4;7691:17;;7685:24;7564:3;7549:19;;;7587;7745:1;7728:19;;7718:150;;7790:10;7785:3;7781:20;7778:1;7771:31;7825:4;7822:1;7815:15;7853:4;7850:1;7843:15;7718:150;7906:12;7899:4;7888:9;7884:20;7877:42;;7975:4;7967:6;7963:17;7957:24;7950:4;7939:9;7935:20;7928:54;8038:4;8030:6;8026:17;8020:24;8013:4;8002:9;7998:20;7991:54;8113:2;8105:4;8097:6;8093:17;8087:24;8083:33;8076:4;8065:9;8061:20;8054:63;;7362:761;;;;:::o;8128:127::-;8189:10;8184:3;8180:20;8177:1;8170:31;8220:4;8217:1;8210:15;8244:4;8241:1;8234:15;8260:275;8331:2;8325:9;8396:2;8377:13;;-1:-1:-1;;8373:27:635;8361:40;;-1:-1:-1;;;;;8416:34:635;;8452:22;;;8413:62;8410:88;;;8478:18;;:::i;:::-;8514:2;8507:22;8260:275;;-1:-1:-1;8260:275:635:o;8540:186::-;8588:4;-1:-1:-1;;;;;8613:6:635;8610:30;8607:56;;;8643:18;;:::i;:::-;-1:-1:-1;8709:2:635;8688:15;-1:-1:-1;;8684:29:635;8715:4;8680:40;;8540:186::o;8731:336::-;8795:5;8824:52;8840:35;8868:6;8840:35;:::i;:::-;8824:52;:::i;:::-;8815:61;;8899:6;8892:5;8885:21;8939:3;8930:6;8925:3;8921:16;8918:25;8915:45;;;8956:1;8953;8946:12;8915:45;9005:6;9000:3;8993:4;8986:5;8982:16;8969:43;9059:1;9052:4;9043:6;9036:5;9032:18;9028:29;9021:40;8731:336;;;;;:::o;9072:220::-;9114:5;9167:3;9160:4;9152:6;9148:17;9144:27;9134:55;;9185:1;9182;9175:12;9134:55;9207:79;9282:3;9273:6;9260:20;9253:4;9245:6;9241:17;9207:79;:::i;9297:1005::-;9445:6;9453;9461;9469;9477;9485;9538:3;9526:9;9517:7;9513:23;9509:33;9506:53;;;9555:1;9552;9545:12;9506:53;9594:9;9581:23;9613:31;9638:5;9613:31;:::i;:::-;9663:5;-1:-1:-1;9715:2:635;9700:18;;9687:32;;-1:-1:-1;9771:2:635;9756:18;;9743:32;9784:33;9743:32;9784:33;:::i;:::-;9836:7;-1:-1:-1;9890:2:635;9875:18;;9862:32;;-1:-1:-1;9945:3:635;9930:19;;9917:33;-1:-1:-1;;;;;9999:14:635;;;9996:34;;;10026:1;10023;10016:12;9996:34;10049:74;10115:7;10106:6;10095:9;10091:22;10049:74;:::i;:::-;10039:84;;10176:3;10165:9;10161:19;10148:33;10132:49;;10206:2;10196:8;10193:16;10190:36;;;10222:1;10219;10212:12;10190:36;;10245:51;10288:7;10277:8;10266:9;10262:24;10245:51;:::i;10307:450::-;10376:6;10429:2;10417:9;10408:7;10404:23;10400:32;10397:52;;;10445:1;10442;10435:12;10397:52;10485:9;10472:23;-1:-1:-1;;;;;10510:6:635;10507:30;10504:50;;;10550:1;10547;10540:12;10504:50;10573:22;;10626:4;10618:13;;10614:27;-1:-1:-1;10604:55:635;;10655:1;10652;10645:12;10604:55;10678:73;10743:7;10738:2;10725:16;10720:2;10716;10712:11;10678:73;:::i;10762:383::-;10839:6;10847;10855;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;10960:9;10947:23;10937:33;;11020:2;11009:9;11005:18;10992:32;11033:31;11058:5;11033:31;:::i;11150:347::-;11201:8;11211:6;11265:3;11258:4;11250:6;11246:17;11242:27;11232:55;;11283:1;11280;11273:12;11232:55;-1:-1:-1;11306:20:635;;-1:-1:-1;;;;;11338:30:635;;11335:50;;;11381:1;11378;11371:12;11335:50;11418:4;11410:6;11406:17;11394:29;;11470:3;11463:4;11454:6;11446;11442:19;11438:30;11435:39;11432:59;;;11487:1;11484;11477:12;11432:59;11150:347;;;;;:::o;11502:477::-;11581:6;11589;11597;11650:2;11638:9;11629:7;11625:23;11621:32;11618:52;;;11666:1;11663;11656:12;11618:52;11702:9;11689:23;11679:33;;11763:2;11752:9;11748:18;11735:32;-1:-1:-1;;;;;11782:6:635;11779:30;11776:50;;;11822:1;11819;11812:12;11776:50;11861:58;11911:7;11902:6;11891:9;11887:22;11861:58;:::i;:::-;11502:477;;11938:8;;-1:-1:-1;11835:84:635;;-1:-1:-1;;;;11502:477:635:o;12207:382::-;12272:6;12280;12333:2;12321:9;12312:7;12308:23;12304:32;12301:52;;;12349:1;12346;12339:12;12301:52;12388:9;12375:23;12407:31;12432:5;12407:31;:::i;:::-;12457:5;-1:-1:-1;12514:2:635;12499:18;;12486:32;12527:30;12486:32;12527:30;:::i;:::-;12576:7;12566:17;;;12207:382;;;;;:::o;12594:315::-;12662:6;12670;12723:2;12711:9;12702:7;12698:23;12694:32;12691:52;;;12739:1;12736;12729:12;12691:52;12775:9;12762:23;12752:33;;12835:2;12824:9;12820:18;12807:32;12848:31;12873:5;12848:31;:::i;12914:665::-;13009:6;13017;13025;13033;13086:3;13074:9;13065:7;13061:23;13057:33;13054:53;;;13103:1;13100;13093:12;13054:53;13142:9;13129:23;13161:31;13186:5;13161:31;:::i;:::-;13211:5;-1:-1:-1;13268:2:635;13253:18;;13240:32;13281:33;13240:32;13281:33;:::i;:::-;13333:7;-1:-1:-1;13387:2:635;13372:18;;13359:32;;-1:-1:-1;13442:2:635;13427:18;;13414:32;-1:-1:-1;;;;;13458:30:635;;13455:50;;;13501:1;13498;13491:12;13455:50;13524:49;13565:7;13556:6;13545:9;13541:22;13524:49;:::i;:::-;13514:59;;;12914:665;;;;;;;:::o;13584:383::-;13661:6;13669;13677;13730:2;13718:9;13709:7;13705:23;13701:32;13698:52;;;13746:1;13743;13736:12;13698:52;13785:9;13772:23;13804:31;13829:5;13804:31;:::i;:::-;13854:5;13906:2;13891:18;;13878:32;;-1:-1:-1;13957:2:635;13942:18;;;13929:32;;13584:383;-1:-1:-1;;;13584:383:635:o;13972:786::-;14072:6;14080;14088;14096;14104;14157:2;14145:9;14136:7;14132:23;14128:32;14125:52;;;14173:1;14170;14163:12;14125:52;14209:9;14196:23;14186:33;;14270:2;14259:9;14255:18;14242:32;-1:-1:-1;;;;;14334:2:635;14326:6;14323:14;14320:34;;;14350:1;14347;14340:12;14320:34;14389:58;14439:7;14430:6;14419:9;14415:22;14389:58;:::i;:::-;14466:8;;-1:-1:-1;14363:84:635;-1:-1:-1;14554:2:635;14539:18;;14526:32;;-1:-1:-1;14570:16:635;;;14567:36;;;14599:1;14596;14589:12;14567:36;;14638:60;14690:7;14679:8;14668:9;14664:24;14638:60;:::i;:::-;13972:786;;;;-1:-1:-1;13972:786:635;;-1:-1:-1;14717:8:635;;14612:86;13972:786;-1:-1:-1;;;13972:786:635:o;15016:628::-;15104:6;15112;15120;15173:2;15161:9;15152:7;15148:23;15144:32;15141:52;;;15189:1;15186;15179:12;15141:52;15229:9;15216:23;-1:-1:-1;;;;;15299:2:635;15291:6;15288:14;15285:34;;;15315:1;15312;15305:12;15285:34;15338:49;15379:7;15370:6;15359:9;15355:22;15338:49;:::i;:::-;15328:59;;15440:2;15429:9;15425:18;15412:32;15396:48;;15469:2;15459:8;15456:16;15453:36;;;15485:1;15482;15475:12;15453:36;;15524:60;15576:7;15565:8;15554:9;15550:24;15524:60;:::i;15649:388::-;15717:6;15725;15778:2;15766:9;15757:7;15753:23;15749:32;15746:52;;;15794:1;15791;15784:12;15746:52;15833:9;15820:23;15852:31;15877:5;15852:31;:::i;:::-;15902:5;-1:-1:-1;15959:2:635;15944:18;;15931:32;15972:33;15931:32;15972:33;:::i;16386:183::-;16490:11;;-1:-1:-1;;;;;;16486:42:635;-1:-1:-1;;;;;16530:31:635;;;;16483:79;;;;16470:93;;16386:183::o;16574:826::-;16757:5;16744:19;16772:33;16797:7;16772:33;:::i;:::-;16814:62;16868:7;16862:4;16814:62;:::i;:::-;;16924:2;16917:5;16913:14;16900:28;16959:1;16950:7;16947:14;16937:42;;16975:1;16972;16965:12;16937:42;16998:11;;-1:-1:-1;;;;17034:27:635;17090:3;17067:17;;;;-1:-1:-1;;;17063:37:635;17031:70;17018:84;;17156:2;17145:14;;17132:28;-1:-1:-1;17118:12:635;;17111:50;17215:2;17204:14;;17191:28;17187:1;17177:12;;17170:50;17268:3;17257:15;;17244:29;17282:33;17244:29;17282:33;:::i;:::-;17324:70;17386:7;17382:1;17376:4;17372:12;17324:70;:::i;17405:380::-;17484:1;17480:12;;;;17527;;;17548:61;;17602:4;17594:6;17590:17;17580:27;;17548:61;17655:2;17647:6;17644:14;17624:18;17621:38;17618:161;;;17701:10;17696:3;17692:20;17689:1;17682:31;17736:4;17733:1;17726:15;17764:4;17761:1;17754:15;17790:304;-1:-1:-1;;;;;18020:15:635;;;18002:34;;18072:15;;18067:2;18052:18;;18045:43;17952:2;17937:18;;17790:304::o;18099:245::-;18166:6;18219:2;18207:9;18198:7;18194:23;18190:32;18187:52;;;18235:1;18232;18225:12;18187:52;18267:9;18261:16;18286:28;18308:5;18286:28;:::i;18349:338::-;18551:2;18533:21;;;18590:2;18570:18;;;18563:30;-1:-1:-1;;;18624:2:635;18609:18;;18602:44;18678:2;18663:18;;18349:338::o;18692:545::-;18785:4;18791:6;18851:11;18838:25;18945:2;18941:7;18930:8;18914:14;18910:29;18906:43;18886:18;18882:68;18872:96;;18964:1;18961;18954:12;18872:96;18991:33;;19043:20;;;-1:-1:-1;;;;;;19075:30:635;;19072:50;;;19118:1;19115;19108:12;19072:50;19151:4;19139:17;;-1:-1:-1;19202:1:635;19198:14;;;19182;19178:35;19168:46;;19165:66;;;19227:1;19224;19217:12;20048:127;20109:10;20104:3;20100:20;20097:1;20090:31;20140:4;20137:1;20130:15;20164:4;20161:1;20154:15;20180:128;20220:3;20251:1;20247:6;20244:1;20241:13;20238:39;;;20257:18;;:::i;:::-;-1:-1:-1;20293:9:635;;20180:128::o;21669:127::-;21730:10;21725:3;21721:20;21718:1;21711:31;21761:4;21758:1;21751:15;21785:4;21782:1;21775:15;21801:168;21841:7;21907:1;21903;21899:6;21895:14;21892:1;21889:21;21884:1;21877:9;21870:17;21866:45;21863:71;;;21914:18;;:::i;:::-;-1:-1:-1;21954:9:635;;21801:168::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:120;22146:1;22172;22162:35;;22177:18;;:::i;:::-;-1:-1:-1;22211:9:635;;22106:120::o;22982:333::-;23083:4;23141:11;23128:25;23235:3;23231:8;23220;23204:14;23200:29;23196:44;23176:18;23172:69;23162:97;;23255:1;23252;23245:12;23162:97;23276:33;;;;;22982:333;-1:-1:-1;;22982:333:635:o;24123:545::-;24225:2;24220:3;24217:11;24214:448;;;24261:1;24286:5;24282:2;24275:17;24331:4;24327:2;24317:19;24401:2;24389:10;24385:19;24382:1;24378:27;24372:4;24368:38;24437:4;24425:10;24422:20;24419:47;;;-1:-1:-1;24460:4:635;24419:47;24515:2;24510:3;24506:12;24503:1;24499:20;24493:4;24489:31;24479:41;;24570:82;24588:2;24581:5;24578:13;24570:82;;;24633:17;;;24614:1;24603:13;24570:82;;24844:1190;-1:-1:-1;;;;;24947:3:635;24944:27;24941:53;;;24974:18;;:::i;:::-;25003:94;25093:3;25053:38;25085:4;25079:11;25053:38;:::i;:::-;25047:4;25003:94;:::i;:::-;25123:1;25148:2;25143:3;25140:11;25165:1;25160:616;;;;25820:1;25837:3;25834:93;;;-1:-1:-1;25893:19:635;;;25880:33;25834:93;-1:-1:-1;;24801:1:635;24797:11;;;24793:24;24789:29;24779:40;24825:1;24821:11;;;24776:57;25940:78;;25133:895;;25160:616;24070:1;24063:14;;;24107:4;24094:18;;-1:-1:-1;;25196:17:635;;;25297:9;25319:229;25333:7;25330:1;25327:14;25319:229;;;25422:19;;;25409:33;25394:49;;25529:4;25514:20;;;;25482:1;25470:14;;;;25349:12;25319:229;;;25323:3;25576;25567:7;25564:16;25561:159;;;25700:1;25696:6;25690:3;25684;25681:1;25677:11;25673:21;25669:34;25665:39;25652:9;25647:3;25643:19;25630:33;25626:79;25618:6;25611:95;25561:159;;;25763:1;25757:3;25754:1;25750:11;25746:19;25740:4;25733:33;25133:895;;24844:1190;;;:::o;26039:1181::-;26218:5;26205:19;26199:4;26192:33;26279:2;26272:5;26268:14;26255:28;26251:1;26245:4;26241:12;26234:50;26338:2;26331:5;26327:14;26314:28;26310:1;26304:4;26300:12;26293:50;26397:2;26390:5;26386:14;26373:28;26369:1;26363:4;26359:12;26352:50;26456:3;26449:5;26445:15;26432:29;26428:1;26422:4;26418:12;26411:51;26516:3;26509:5;26505:15;26492:29;26488:1;26482:4;26478:12;26471:51;26570:3;26563:5;26559:15;26546:29;26584:33;26609:7;26584:33;:::i;:::-;26626:70;26688:7;26684:1;26678:4;26674:12;26626:70;:::i;:::-;;26755:3;26748:5;26744:15;26731:29;26839:2;26835:7;26827:5;26811:14;26807:26;26803:40;26783:18;26779:65;26769:93;;26858:1;26855;26848:12;26769:93;26883:30;;26936:18;;-1:-1:-1;;;;;26966:30:635;;26963:50;;;27009:1;27006;26999:12;26963:50;27046:2;27040:4;27036:13;27022:27;;27093:6;27077:14;27073:27;27065:6;27061:40;27058:60;;;27114:1;27111;27104:12;27058:60;27127:87;27207:6;27199;27195:1;27189:4;27185:12;27127:87;:::i;27225:135::-;27264:3;-1:-1:-1;;27285:17:635;;27282:43;;;27305:18;;:::i;:::-;-1:-1:-1;27352:1:635;27341:13;;27225:135::o;27365:504::-;27424:5;27431:6;27491:3;27478:17;27577:2;27573:7;27562:8;27546:14;27542:29;27538:43;27518:18;27514:68;27504:96;;27596:1;27593;27586:12;27504:96;27624:33;;27728:4;27715:18;;;-1:-1:-1;27676:21:635;;-1:-1:-1;;;;;;27745:30:635;;27742:50;;;27788:1;27785;27778:12;27742:50;27838:6;27822:14;27818:27;27808:8;27804:42;27801:62;;;27859:1;27856;27849:12;27874:267;27963:6;27958:3;27951:19;28015:6;28008:5;28001:4;27996:3;27992:14;27979:43;-1:-1:-1;28067:1:635;28042:16;;;28060:4;28038:27;;;28031:38;;;;28123:2;28102:15;;;-1:-1:-1;;28098:29:635;28089:39;;;28085:50;;27874:267::o;28146:2051::-;28417:2;28469:21;;;28442:18;;;28525:22;;;28388:4;;28566:2;28584:18;;;28648:1;28644:14;;;28629:30;;28625:39;;28687:6;28388:4;;28742:1372;28758:6;28753:3;28750:15;28742:1372;;;28827:22;;;-1:-1:-1;;28823:36:635;28811:49;;28899:20;;28974:14;28970:27;;;-1:-1:-1;;28966:42:635;28942:67;;28932:95;;29023:1;29020;29013:12;28932:95;29053:31;;29141:19;;29126:35;;29184:4;29238:14;;;29225:28;29208:15;;;29201:53;29304:14;;;29291:28;29274:15;;;29267:53;29370:14;;;29357:28;29340:15;;;29333:53;29409:4;29463:14;;;29450:28;29433:15;;;29426:53;29502:4;29556:14;;;29543:28;29526:15;;;29519:53;29107:6;;29595:4;29640:14;;;29627:28;29668:33;29627:28;29668:33;:::i;:::-;-1:-1:-1;;;;;29738:33:635;29721:15;;;29714:58;29795:4;29846:54;29885:14;;;29889:5;29846:54;:::i;:::-;29812:88;;29937:2;29932;29924:6;29920:15;29913:27;29963:71;30030:2;30022:6;30018:15;30004:12;29990;29963:71;:::i;:::-;30092:12;;;;29953:81;-1:-1:-1;;;30057:15:635;;;;;-1:-1:-1;;28784:1:635;28775:11;28742:1372;;;-1:-1:-1;;;470:13:635;;463:21;30185:4;30170:20;;451:34;30131:6;-1:-1:-1;30146:45:635;;-1:-1:-1;;;400:91:635;30548:703;30636:6;30644;30697:2;30685:9;30676:7;30672:23;30668:32;30665:52;;;30713:1;30710;30703:12;30665:52;30746:9;30740:16;-1:-1:-1;;;;;30771:6:635;30768:30;30765:50;;;30811:1;30808;30801:12;30765:50;30834:22;;30887:4;30879:13;;30875:27;-1:-1:-1;30865:55:635;;30916:1;30913;30906:12;30865:55;30945:2;30939:9;30970:48;30986:31;31014:2;30986:31;:::i;30970:48::-;31041:2;31034:5;31027:17;31083:7;31076:4;31071:2;31067;31063:11;31059:22;31056:35;31053:55;;;31104:1;31101;31094:12;31053:55;31117:58;31172:2;31165:4;31158:5;31154:16;31147:4;31143:2;31139:13;31117:58;:::i;:::-;31239:4;31224:20;;;;31218:27;31194:5;;31218:27;;-1:-1:-1;;;;;30548:703:635:o;31256:525::-;31471:3;31509:6;31503:13;31525:53;31571:6;31566:3;31559:4;31551:6;31547:17;31525:53;:::i;:::-;31600:16;;31653:6;31645;31600:16;31625:35;31679:18;;;31728;;;-1:-1:-1;31770:4:635;31762:13;;31256:525;-1:-1:-1;;;31256:525:635:o;32824:251::-;32894:6;32947:2;32935:9;32926:7;32922:23;32918:32;32915:52;;;32963:1;32960;32953:12;32915:52;32995:9;32989:16;33014:31;33039:5;33014:31;:::i;33759:184::-;33829:6;33882:2;33870:9;33861:7;33857:23;33853:32;33850:52;;;33898:1;33895;33888:12;33850:52;-1:-1:-1;33921:16:635;;33759:184;-1:-1:-1;33759:184:635:o;34284:125::-;34324:4;34352:1;34349;34346:8;34343:34;;;34357:18;;:::i;:::-;-1:-1:-1;34394:9:635;;34284:125::o;34414:136::-;34453:3;34481:5;34471:39;;34490:18;;:::i;:::-;-1:-1:-1;;;34526:18:635;;34414:136::o;34895:439::-;35127:3;35165:6;35159:13;35181:53;35227:6;35222:3;35215:4;35207:6;35203:17;35181:53;:::i;:::-;-1:-1:-1;;;35256:16:635;;35281:18;;;-1:-1:-1;35326:1:635;35315:13;;34895:439;-1:-1:-1;34895:439:635:o;35339:470::-;35518:3;35556:6;35550:13;35572:53;35618:6;35613:3;35606:4;35598:6;35594:17;35572:53;:::i;:::-;35688:13;;35647:16;;;;35710:57;35688:13;35647:16;35744:4;35732:17;;35710:57;:::i;:::-;35783:20;;35339:470;-1:-1:-1;;;;35339:470:635:o;36154:388::-;36231:6;36239;36292:2;36280:9;36271:7;36267:23;36263:32;36260:52;;;36308:1;36305;36298:12;36260:52;36348:9;36335:23;-1:-1:-1;;;;;36373:6:635;36370:30;36367:50;;;36413:1;36410;36403:12;36367:50;36436:49;36477:7;36468:6;36457:9;36453:22;36436:49;:::i;:::-;36426:59;36532:2;36517:18;;;;36504:32;;-1:-1:-1;;;;36154:388:635:o;36547:335::-;36758:6;36750;36745:3;36732:33;36784:16;;;36831:18;;;36873:2;36865:11;;36547:335;-1:-1:-1;36547:335:635:o;38605:339::-;38807:2;38789:21;;;38846:2;38826:18;;;38819:30;-1:-1:-1;;;38880:2:635;38865:18;;38858:45;38935:2;38920:18;;38605:339::o;39201:383::-;39398:2;39387:9;39380:21;39361:4;39424:45;39465:2;39454:9;39450:18;39442:6;39424:45;:::i;:::-;39517:9;39509:6;39505:22;39500:2;39489:9;39485:18;39478:50;39545:33;39571:6;39563;39545:33;:::i;:::-;39537:41;39201:383;-1:-1:-1;;;;;39201:383:635:o;39933:112::-;39965:1;39991;39981:35;;39996:18;;:::i;:::-;-1:-1:-1;40030:9:635;;39933:112::o;40383:506::-;40626:6;40615:9;40608:25;40669:2;40664;40653:9;40649:18;40642:30;40589:4;40695:62;40753:2;40742:9;40738:18;40730:6;40722;40695:62;:::i;:::-;40805:9;40797:6;40793:22;40788:2;40777:9;40773:18;40766:50;40833;40876:6;40868;40860;40833:50;:::i;:::-;40825:58;40383:506;-1:-1:-1;;;;;;;;40383:506:635:o;41237:489::-;-1:-1:-1;;;;;41506:15:635;;;41488:34;;41558:15;;41553:2;41538:18;;41531:43;41605:2;41590:18;;41583:34;;;41653:3;41648:2;41633:18;;41626:31;;;41431:4;;41674:46;;41700:19;;41692:6;41674:46;:::i;:::-;41666:54;41237:489;-1:-1:-1;;;;;;41237:489:635:o;41731:249::-;41800:6;41853:2;41841:9;41832:7;41828:23;41824:32;41821:52;;;41869:1;41866;41859:12;41821:52;41901:9;41895:16;41920:30;41944:5;41920:30;:::i;44108:274::-;44237:3;44275:6;44269:13;44291:53;44337:6;44332:3;44325:4;44317:6;44313:17;44291:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnAndClaim(uint256,uint256)": "1567313b",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getBurnToClaimInfo()": "778a4c0e",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getPlatformFeeInfo()": "d45573f6",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply()": "2ab4d052",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "reveal(uint256,bytes)": "ce805642",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBurnToClaimInfo((address,uint8,uint256,uint256,address))": "0689b284",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyBurnToClaim(address,uint256,uint256)": "bb408851",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"TokensBurnedAndClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"burnAndClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnToClaimInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"_burnToClaimInfo\",\"type\":\"tuple\"}],\"name\":\"setBurnToClaimInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyBurnToClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"burnAndClaim(uint256,uint256)\":{\"details\":\"Claim lazy minted after burning required tokens from origin contract.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"encryptedData(uint256)\":{\"details\":\"Mapping from tokenId of a batch of tokens => to delayed reveal data.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"maxTotalSupply()\":{\"details\":\"Global max total supply of NFTs.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"OPERATOR_ROLE\":{\"details\":\"Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":\"BurnToClaimDrop721Logic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xb00aafcce4733231e61e5979c0bcd35f58930f97c874815fc5bb8af1ff3a58f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1092eeb12450e33fb09e6d9085893db82c58391ff7ab5cc868ecf5f1b50296ad\",\"dweb:/ipfs/QmepmNS3ChsEiR25sTc8otjdKthRrKKs7k1UY7VpPieafu\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/interface/IBurnToClaim.sol\":{\"keccak256\":\"0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603\",\"dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/upgradeable/BatchMintMetadata.sol\":{\"keccak256\":\"0xc56c7a44ef170ad187429c9ca89a8548b88798b9aa52ee22283e9b4631d8ef67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21795dc755fce1324aac5e2efcb046ba67f38fe7f1149bd4a2ec6015dd5bad90\",\"dweb:/ipfs/QmQQtgMrgc5A6eKPhrBgHuUbFQbjj5SQ78dQPEMzyAcGPW\"]},\"contracts/extension/upgradeable/BurnToClaim.sol\":{\"keccak256\":\"0x7068baa6f5c4fc844de81fc09bf04566639bbec5f77db0573e004c6221a0df5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06acc4da1b38a9c11502371b886be7473e0bcd07b8123031b22149715c93e725\",\"dweb:/ipfs/QmXC85tumLv4YtYK9xVR3fZGgboXSfZdqaz4j6KiM1n17J\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x3723802e4a7e45461496e8618d2b765120d858618d9e94366e99ff1216b497f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dd48b03b93f4fc15384ddc210978cd97047a8facb03ee52056f41aafae2c222\",\"dweb:/ipfs/QmZkenMQRfTshbmQmF2gBJebz24fQ6Bvq7LqG8wtHaaPkM\"]},\"contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8\",\"dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ\"]},\"contracts/extension/upgradeable/DelayedReveal.sol\":{\"keccak256\":\"0xeb64a27659417c26c40a92826a48ff46bc571e46649b4b2ba0525b339d15ccb5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4df13ebf42255f46376c6be33e604f1805d02f1a95c77c07400167fa5f0f6dac\",\"dweb:/ipfs/QmVivH4mMzuMdRfH33vHsN6ayiVmw8ZmCZhMRZr4hana7u\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0x271009821a07ce70f98610021a8b3a3be3b1959359350e343f3c9ed5bf2b74fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a511339f8f28c7ed8714c28d6c79c5cb08c75e09c2b22b61f29718a47b841eb9\",\"dweb:/ipfs/QmdSUMu7q9d7yXc45QBRbGy7acuwwjhF1gUbJKE58SZ2oS\"]},\"contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x86a7931fcd92ba60f64b440c0a8f252f532b47f732389b9b2083c8b1f01dc698\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f9973a67b9ab2bf931e719d79d564d496e41ad47a8f6abf53966ac2dee8aa780\",\"dweb:/ipfs/QmYZpKPgLBSKyYGEXFSzW8iCM7zkV6uy264FhtZFMoSLSz\"]},\"contracts/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0x824fe88e78128ca8ea7e5e75bf2b32920b9883d8b33e91c969a1bcd1f4223801\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://69da55334ab0360a6857b76ed81ebb630b5798ae1108f5bcc6bb146eb91c6228\",\"dweb:/ipfs/QmcXE7dpUkSGcbMwsifbYSzQRqUGm2nZJiuQpyKAAbcybb\"]},\"contracts/extension/upgradeable/LazyMint.sol\":{\"keccak256\":\"0x4a25bc30db7c0f3c1b2ea4715e7d1777e55912c87f232ff94996ee6f8e675ba4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a7f57cebf49259618d3bc1b3b997d98c5ea31b6c7d6168179c022f89dc0e8374\",\"dweb:/ipfs/QmXKuTrmFWw6DFbHC8y6Sn6SaNF68L39vtqMPidYcWvKdA\"]},\"contracts/extension/upgradeable/OperatorFilterToggle.sol\":{\"keccak256\":\"0x73126c252ce5fa5386e0388616ed4427d48feeb4361b31208293f2589df7deb4\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://90645b102edbe88948c76818012f8e12fe006055f3701d9c44d2a379ddc7fa89\",\"dweb:/ipfs/QmUeyLuVzYCip6LLGTt1KGccmmVeBRyU4LrL5dgGJvnUVj\"]},\"contracts/extension/upgradeable/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x34df2d6d81781de959dc8509e8a57f77b8d08724fab2c78947c17753f03765de\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://1c8ce9573592ad3a44dfde44fdbc173a0b9080b65c346b3a7e2873fd83d67471\",\"dweb:/ipfs/QmVZDS2DRZFJQWVqDPCvNho4T8rraTMEGzRinrVsb8bvUS\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0xc2c7a3bb247e9dec06aca01880f5d17a3e1a35e1ae6d324a1cae26487ae9e57c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b6a0c3954b2993091c2c9655717da4d940cae4d32a185205724d934524842b43\",\"dweb:/ipfs/QmYjKwtF9suUgLzjjdC1kWRkby1AP5DWjcgXS9NFKkkCw5\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60\",\"dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx\"]},\"contracts/extension/upgradeable/PlatformFee.sol\":{\"keccak256\":\"0xc0404db4ba4f5c0823305a5c0da97ba65fd7cc7f29173a0c1ef19e81241b7c89\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eefacf7137b6847bc92e0294bb74647254c3b2c854ae33825b2316a65e80926a\",\"dweb:/ipfs/QmPyibz3FfXuT4nE9fr8545PQmA2Kr2Eawq4eoYajjowtu\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0x41e62b6df712206bc4e3f7ef3a43d74a1263efec5d0c11faabb7312927221ec1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31d450a434238081f4c321ebfac9968f0fb8c036759cf4052dd1859321438bdc\",\"dweb:/ipfs/QmZbMcm6pYeGGMK54TWwmDUCDRrworyjjf831E3QRaHBLo\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x1cd42da5463880831d5b9a7799020e0804b0e11620ce833b4ded1cd8c6fe8441\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b84186b796f42a97f5d362f94a90b5fc5dc726d7e87cda2d98099c0b4fb494d\",\"dweb:/ipfs/QmVbbdhtYJUegEwBhYt6Zj26U6xwSDjjUif2K2kzStC8Nu\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":{\"keccak256\":\"0xb4f03865f30998e7cdffb277d1da80ac3898155dc2aa8f4f34027182b4dfe7bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f205c4777f34641f46b47adac91f7c560ecc9f90d75ddfa10d7474480bd16856\",\"dweb:/ipfs/QmVVrYNg3quCnrmmt2ipaKa53fY1Z3pi54ABJd1QHX9VEu\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol\":{\"keccak256\":\"0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb\",\"dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1\",\"dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e\",\"dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "burnTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensBurnedAndClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_burnTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "burnAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBurnToClaimInfo",
          "outputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "_burnToClaimInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBurnToClaimInfo"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyBurnToClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "burnAndClaim(uint256,uint256)": {
            "details": "Claim lazy minted after burning required tokens from origin contract."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "encryptedData(uint256)": {
            "details": "Mapping from tokenId of a batch of tokens => to delayed reveal data."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "maxTotalSupply()": {
            "details": "Global max total supply of NFTs."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": "BurnToClaimDrop721Logic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AUpgradeable.sol": {
        "keccak256": "0xb00aafcce4733231e61e5979c0bcd35f58930f97c874815fc5bb8af1ff3a58f8",
        "urls": [
          "bzz-raw://1092eeb12450e33fb09e6d9085893db82c58391ff7ab5cc868ecf5f1b50296ad",
          "dweb:/ipfs/QmepmNS3ChsEiR25sTc8otjdKthRrKKs7k1UY7VpPieafu"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IBurnToClaim.sol": {
        "keccak256": "0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6",
        "urls": [
          "bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603",
          "dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BatchMintMetadata.sol": {
        "keccak256": "0xc56c7a44ef170ad187429c9ca89a8548b88798b9aa52ee22283e9b4631d8ef67",
        "urls": [
          "bzz-raw://21795dc755fce1324aac5e2efcb046ba67f38fe7f1149bd4a2ec6015dd5bad90",
          "dweb:/ipfs/QmQQtgMrgc5A6eKPhrBgHuUbFQbjj5SQ78dQPEMzyAcGPW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BurnToClaim.sol": {
        "keccak256": "0x7068baa6f5c4fc844de81fc09bf04566639bbec5f77db0573e004c6221a0df5b",
        "urls": [
          "bzz-raw://06acc4da1b38a9c11502371b886be7473e0bcd07b8123031b22149715c93e725",
          "dweb:/ipfs/QmXC85tumLv4YtYK9xVR3fZGgboXSfZdqaz4j6KiM1n17J"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x3723802e4a7e45461496e8618d2b765120d858618d9e94366e99ff1216b497f3",
        "urls": [
          "bzz-raw://4dd48b03b93f4fc15384ddc210978cd97047a8facb03ee52056f41aafae2c222",
          "dweb:/ipfs/QmZkenMQRfTshbmQmF2gBJebz24fQ6Bvq7LqG8wtHaaPkM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701",
        "urls": [
          "bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8",
          "dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/DelayedReveal.sol": {
        "keccak256": "0xeb64a27659417c26c40a92826a48ff46bc571e46649b4b2ba0525b339d15ccb5",
        "urls": [
          "bzz-raw://4df13ebf42255f46376c6be33e604f1805d02f1a95c77c07400167fa5f0f6dac",
          "dweb:/ipfs/QmVivH4mMzuMdRfH33vHsN6ayiVmw8ZmCZhMRZr4hana7u"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0x271009821a07ce70f98610021a8b3a3be3b1959359350e343f3c9ed5bf2b74fb",
        "urls": [
          "bzz-raw://a511339f8f28c7ed8714c28d6c79c5cb08c75e09c2b22b61f29718a47b841eb9",
          "dweb:/ipfs/QmdSUMu7q9d7yXc45QBRbGy7acuwwjhF1gUbJKE58SZ2oS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x86a7931fcd92ba60f64b440c0a8f252f532b47f732389b9b2083c8b1f01dc698",
        "urls": [
          "bzz-raw://f9973a67b9ab2bf931e719d79d564d496e41ad47a8f6abf53966ac2dee8aa780",
          "dweb:/ipfs/QmYZpKPgLBSKyYGEXFSzW8iCM7zkV6uy264FhtZFMoSLSz"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/Initializable.sol": {
        "keccak256": "0x824fe88e78128ca8ea7e5e75bf2b32920b9883d8b33e91c969a1bcd1f4223801",
        "urls": [
          "bzz-raw://69da55334ab0360a6857b76ed81ebb630b5798ae1108f5bcc6bb146eb91c6228",
          "dweb:/ipfs/QmcXE7dpUkSGcbMwsifbYSzQRqUGm2nZJiuQpyKAAbcybb"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/LazyMint.sol": {
        "keccak256": "0x4a25bc30db7c0f3c1b2ea4715e7d1777e55912c87f232ff94996ee6f8e675ba4",
        "urls": [
          "bzz-raw://a7f57cebf49259618d3bc1b3b997d98c5ea31b6c7d6168179c022f89dc0e8374",
          "dweb:/ipfs/QmXKuTrmFWw6DFbHC8y6Sn6SaNF68L39vtqMPidYcWvKdA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/OperatorFilterToggle.sol": {
        "keccak256": "0x73126c252ce5fa5386e0388616ed4427d48feeb4361b31208293f2589df7deb4",
        "urls": [
          "bzz-raw://90645b102edbe88948c76818012f8e12fe006055f3701d9c44d2a379ddc7fa89",
          "dweb:/ipfs/QmUeyLuVzYCip6LLGTt1KGccmmVeBRyU4LrL5dgGJvnUVj"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0x34df2d6d81781de959dc8509e8a57f77b8d08724fab2c78947c17753f03765de",
        "urls": [
          "bzz-raw://1c8ce9573592ad3a44dfde44fdbc173a0b9080b65c346b3a7e2873fd83d67471",
          "dweb:/ipfs/QmVZDS2DRZFJQWVqDPCvNho4T8rraTMEGzRinrVsb8bvUS"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0xc2c7a3bb247e9dec06aca01880f5d17a3e1a35e1ae6d324a1cae26487ae9e57c",
        "urls": [
          "bzz-raw://b6a0c3954b2993091c2c9655717da4d940cae4d32a185205724d934524842b43",
          "dweb:/ipfs/QmYjKwtF9suUgLzjjdC1kWRkby1AP5DWjcgXS9NFKkkCw5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x28753c3558eaa2b88cdb6ac30c5af0ef77d31adea32a877d2f4c5b06000b95c6",
        "urls": [
          "bzz-raw://ce7c509496bffbb74a17082672c23db9028ba231c892fc15fe4416006a625d60",
          "dweb:/ipfs/QmQY2agGHHKEjyUu2u6AXQtvezZDRhjdHt15JD2hiFgNNx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PlatformFee.sol": {
        "keccak256": "0xc0404db4ba4f5c0823305a5c0da97ba65fd7cc7f29173a0c1ef19e81241b7c89",
        "urls": [
          "bzz-raw://eefacf7137b6847bc92e0294bb74647254c3b2c854ae33825b2316a65e80926a",
          "dweb:/ipfs/QmPyibz3FfXuT4nE9fr8545PQmA2Kr2Eawq4eoYajjowtu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0x41e62b6df712206bc4e3f7ef3a43d74a1263efec5d0c11faabb7312927221ec1",
        "urls": [
          "bzz-raw://31d450a434238081f4c321ebfac9968f0fb8c036759cf4052dd1859321438bdc",
          "dweb:/ipfs/QmZbMcm6pYeGGMK54TWwmDUCDRrworyjjf831E3QRaHBLo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x1cd42da5463880831d5b9a7799020e0804b0e11620ce833b4ded1cd8c6fe8441",
        "urls": [
          "bzz-raw://7b84186b796f42a97f5d362f94a90b5fc5dc726d7e87cda2d98099c0b4fb494d",
          "dweb:/ipfs/QmVbbdhtYJUegEwBhYt6Zj26U6xwSDjjUif2K2kzStC8Nu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": {
        "keccak256": "0xb4f03865f30998e7cdffb277d1da80ac3898155dc2aa8f4f34027182b4dfe7bb",
        "urls": [
          "bzz-raw://f205c4777f34641f46b47adac91f7c560ecc9f90d75ddfa10d7474480bd16856",
          "dweb:/ipfs/QmVVrYNg3quCnrmmt2ipaKa53fY1Z3pi54ABJd1QHX9VEu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol": {
        "keccak256": "0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388",
        "urls": [
          "bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb",
          "dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9",
        "urls": [
          "bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d",
          "dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
        "keccak256": "0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f",
        "urls": [
          "bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1",
          "dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45",
        "urls": [
          "bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e",
          "dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol",
    "id": 99511,
    "exportedSymbols": {
      "BurnToClaim": [
        39352
      ],
      "BurnToClaimDrop721Logic": [
        99510
      ],
      "BurnToClaimDrop721Storage": [
        99534
      ],
      "BurnToClaimStorage": [
        39161
      ],
      "Context": [
        49046
      ],
      "ContractMetadata": [
        39469
      ],
      "CurrencyTransferLib": [
        63443
      ],
      "DefaultOperatorFiltererUpgradeable": [
        39493
      ],
      "DelayedReveal": [
        39717
      ],
      "Drop": [
        40458
      ],
      "ERC2771ContextUpgradeable": [
        40765
      ],
      "ERC721AStorage": [
        10109
      ],
      "ERC721AUpgradeable": [
        11709
      ],
      "IERC165": [
        14687
      ],
      "IERC20": [
        14757
      ],
      "IERC2771Context": [
        33564
      ],
      "IERC2981": [
        14831
      ],
      "IWETH": [
        55120
      ],
      "LazyMint": [
        41146
      ],
      "Ownable": [
        41535
      ],
      "PermissionsStorage": [
        41582
      ],
      "PlatformFee": [
        42484
      ],
      "PrimarySale": [
        42593
      ],
      "Royalty": [
        42983
      ],
      "SafeERC20": [
        48932
      ],
      "TWAddress": [
        64017
      ],
      "TWStrings": [
        64717
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:16777:379",
    "nodes": [
      {
        "id": 98458,
        "nodeType": "PragmaDirective",
        "src": "39:24:379",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 98460,
        "nodeType": "ImportDirective",
        "src": "727:76:379",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol",
        "file": "./BurnToClaimDrop721Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 99535,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98459,
              "name": "BurnToClaimDrop721Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 99534,
              "src": "736:25:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99534_$",
                "typeString": "type(library BurnToClaimDrop721Storage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98461,
        "nodeType": "ImportDirective",
        "src": "805:39:379",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../../../../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 64718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98462,
        "nodeType": "ImportDirective",
        "src": "845:49:379",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 63444,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98464,
        "nodeType": "ImportDirective",
        "src": "896:66:379",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC2981.sol",
        "file": "../../../../eip/interface/IERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 14832,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98463,
              "name": "IERC2981",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14831,
              "src": "905:8:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                "typeString": "type(contract IERC2981)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98468,
        "nodeType": "ImportDirective",
        "src": "963:101:379",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AUpgradeable.sol",
        "file": "../../../../eip/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 11710,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98465,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49046,
              "src": "972:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Context_$49046_$",
                "typeString": "type(contract Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98466,
              "name": "ERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11709,
              "src": "981:18:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AUpgradeable_$11709_$",
                "typeString": "type(contract ERC721AUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98467,
              "name": "ERC721AStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10109,
              "src": "1001:14:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                "typeString": "type(library ERC721AStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98470,
        "nodeType": "ImportDirective",
        "src": "1066:86:379",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../../../extension/interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 33565,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98469,
              "name": "IERC2771Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33564,
              "src": "1075:15:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33564_$",
                "typeString": "type(contract IERC2771Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98472,
        "nodeType": "ImportDirective",
        "src": "1154:108:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "file": "../../../../extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 40766,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98471,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40765,
              "src": "1163:25:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40765_$",
                "typeString": "type(contract ERC2771ContextUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98474,
        "nodeType": "ImportDirective",
        "src": "1263:84:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/DelayedReveal.sol",
        "file": "../../../../extension/upgradeable/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 39718,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98473,
              "name": "DelayedReveal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39717,
              "src": "1272:13:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DelayedReveal_$39717_$",
                "typeString": "type(contract DelayedReveal)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98476,
        "nodeType": "ImportDirective",
        "src": "1348:80:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 42594,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98475,
              "name": "PrimarySale",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42593,
              "src": "1357:11:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PrimarySale_$42593_$",
                "typeString": "type(contract PrimarySale)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98478,
        "nodeType": "ImportDirective",
        "src": "1429:80:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PlatformFee.sol",
        "file": "../../../../extension/upgradeable/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 42485,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98477,
              "name": "PlatformFee",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42484,
              "src": "1438:11:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PlatformFee_$42484_$",
                "typeString": "type(contract PlatformFee)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98481,
        "nodeType": "ImportDirective",
        "src": "1510:81:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 42984,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98479,
              "name": "Royalty",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42983,
              "src": "1519:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Royalty_$42983_$",
                "typeString": "type(contract Royalty)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98480,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14687,
              "src": "1528:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC165_$14687_$",
                "typeString": "type(contract IERC165)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98483,
        "nodeType": "ImportDirective",
        "src": "1592:74:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/LazyMint.sol",
        "file": "../../../../extension/upgradeable/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 41147,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98482,
              "name": "LazyMint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41146,
              "src": "1601:8:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_LazyMint_$41146_$",
                "typeString": "type(contract LazyMint)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98485,
        "nodeType": "ImportDirective",
        "src": "1667:66:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 40459,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98484,
              "name": "Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40458,
              "src": "1676:4:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Drop_$40458_$",
                "typeString": "type(contract Drop)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98487,
        "nodeType": "ImportDirective",
        "src": "1734:90:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 39470,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98486,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39469,
              "src": "1743:16:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ContractMetadata_$39469_$",
                "typeString": "type(contract ContractMetadata)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98489,
        "nodeType": "ImportDirective",
        "src": "1825:72:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 41536,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98488,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41535,
              "src": "1834:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Ownable_$41535_$",
                "typeString": "type(contract Ownable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98491,
        "nodeType": "ImportDirective",
        "src": "1898:126:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../../../extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 39494,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98490,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39493,
              "src": "1907:34:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DefaultOperatorFiltererUpgradeable_$39493_$",
                "typeString": "type(contract DefaultOperatorFiltererUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98493,
        "nodeType": "ImportDirective",
        "src": "2025:87:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 41969,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98492,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41582,
              "src": "2034:18:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41582_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98496,
        "nodeType": "ImportDirective",
        "src": "2113:100:379",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/BurnToClaim.sol",
        "file": "../../../../extension/upgradeable/BurnToClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99511,
        "sourceUnit": 39353,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98494,
              "name": "BurnToClaim",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39352,
              "src": "2122:11:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaim_$39352_$",
                "typeString": "type(contract BurnToClaim)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98495,
              "name": "BurnToClaimStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39161,
              "src": "2135:18:379",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$39161_$",
                "typeString": "type(library BurnToClaimStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99510,
        "nodeType": "ContractDefinition",
        "src": "2215:14600:379",
        "nodes": [
          {
            "id": 98523,
            "nodeType": "UsingForDirective",
            "src": "2493:28:379",
            "nodes": [],
            "libraryName": {
              "id": 98521,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64717,
              "src": "2499:9:379"
            },
            "typeName": {
              "id": 98522,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2513:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 98527,
            "nodeType": "VariableDeclaration",
            "src": "2811:50:379",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98524,
              "nodeType": "StructuredDocumentation",
              "src": "2705:101:379",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2836:18:379",
            "scope": 99510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98525,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 98526,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2857:4:379",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 98533,
            "nodeType": "VariableDeclaration",
            "src": "2970:67:379",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98528,
              "nodeType": "StructuredDocumentation",
              "src": "2867:98:379",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2995:13:379",
            "scope": 99510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98529,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2970:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 98531,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3021:15:379",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 98530,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3011:9:379",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98532,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3011:26:379",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98539,
            "nodeType": "VariableDeclaration",
            "src": "3134:63:379",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98534,
              "nodeType": "StructuredDocumentation",
              "src": "3043:86:379",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "3159:11:379",
            "scope": 99510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98535,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3134:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 98537,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3183:13:379",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 98536,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3173:9:379",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98538,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3173:24:379",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98545,
            "nodeType": "VariableDeclaration",
            "src": "3326:67:379",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98540,
              "nodeType": "StructuredDocumentation",
              "src": "3203:118:379",
              "text": "@dev Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted."
            },
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "3351:13:379",
            "scope": 99510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98541,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3326:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 98543,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3377:15:379",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 98542,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3367:9:379",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98544,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3367:26:379",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98549,
            "nodeType": "VariableDeclaration",
            "src": "3445:41:379",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98546,
              "nodeType": "StructuredDocumentation",
              "src": "3400:40:379",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3470:7:379",
            "scope": 99510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98547,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3445:7:379",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 98548,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3480:6:379",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 98554,
            "nodeType": "EventDefinition",
            "src": "3742:52:379",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 98550,
              "nodeType": "StructuredDocumentation",
              "src": "3672:65:379",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3748:21:379",
            "parameters": {
              "id": 98553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98552,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3778:14:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98554,
                  "src": "3770:22:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:24:379"
            }
          },
          {
            "id": 98602,
            "nodeType": "FunctionDefinition",
            "src": "4041:402:379",
            "nodes": [],
            "body": {
              "id": 98601,
              "nodeType": "Block",
              "src": "4122:321:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98564,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98564,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4141:7:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98601,
                      "src": "4133:15:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98563,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4133:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98568,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98566,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98557,
                        "src": "4166:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98565,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38992,
                      "src": "4154:11:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 98567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:21:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4132:43:379"
                },
                {
                  "assignments": [
                    98570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98570,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4199:8:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98601,
                      "src": "4185:22:379",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 98569,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4185:6:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98574,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98572,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98557,
                        "src": "4222:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98571,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39047,
                      "src": "4210:11:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 98573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:21:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4185:46:379"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 98576,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98564,
                        "src": "4263:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98575,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39702,
                      "src": "4246:16:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 98577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:25:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 98599,
                    "nodeType": "Block",
                    "src": "4350:87:379",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 98592,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98570,
                                  "src": "4395:8:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 98593,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98557,
                                      "src": "4405:8:379",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 98594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64599,
                                    "src": "4405:17:379",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 98595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4405:19:379",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 98590,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4378:3:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 98591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4378:16:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 98596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4378:47:379",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 98589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4371:6:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 98588,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4371:6:379",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4371:55:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 98562,
                        "id": 98598,
                        "nodeType": "Return",
                        "src": "4364:62:379"
                      }
                    ]
                  },
                  "id": 98600,
                  "nodeType": "IfStatement",
                  "src": "4242:195:379",
                  "trueBody": {
                    "id": 98587,
                    "nodeType": "Block",
                    "src": "4273:71:379",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 98582,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98570,
                                  "src": "4318:8:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 98583,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4328:3:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 98580,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4301:3:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 98581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4301:16:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 98584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4301:31:379",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 98579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4294:6:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 98578,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4294:6:379",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4294:39:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 98562,
                        "id": 98586,
                        "nodeType": "Return",
                        "src": "4287:46:379"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              10593
            ],
            "documentation": {
              "id": 98555,
              "nodeType": "StructuredDocumentation",
              "src": "3991:45:379",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4050:8:379",
            "overrides": {
              "id": 98559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4089:8:379"
            },
            "parameters": {
              "id": 98558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98557,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4067:8:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98602,
                  "src": "4059:16:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4058:18:379"
            },
            "returnParameters": {
              "id": 98562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98602,
                  "src": "4107:13:379",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:6:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:15:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98626,
            "nodeType": "FunctionDefinition",
            "src": "4474:269:379",
            "nodes": [],
            "body": {
              "id": 98625,
              "nodeType": "Block",
              "src": "4638:105:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 98623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 98615,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98605,
                          "src": "4679:11:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 98613,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4655:5:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                            "typeString": "type(contract super BurnToClaimDrop721Logic)"
                          }
                        },
                        "id": 98614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10266,
                        "src": "4655:23:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 98616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4655:36:379",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 98622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 98618,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14831,
                              "src": "4700:8:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 98617,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4695:4:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4695:14:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$14831",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 98620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4695:26:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 98621,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98605,
                        "src": "4725:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4695:41:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4655:81:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 98612,
                  "id": 98624,
                  "nodeType": "Return",
                  "src": "4648:88:379"
                }
              ]
            },
            "baseFunctions": [
              10266,
              14686
            ],
            "documentation": {
              "id": 98603,
              "nodeType": "StructuredDocumentation",
              "src": "4449:20:379",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4483:17:379",
            "overrides": {
              "id": 98609,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 98607,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "4582:18:379"
                },
                {
                  "id": 98608,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "4602:7:379"
                }
              ],
              "src": "4573:37:379"
            },
            "parameters": {
              "id": 98606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98605,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4508:11:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98626,
                  "src": "4501:18:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 98604,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:6:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4500:20:379"
            },
            "returnParameters": {
              "id": 98612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98626,
                  "src": "4628:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 98689,
            "nodeType": "FunctionDefinition",
            "src": "5117:575:379",
            "nodes": [],
            "body": {
              "id": 98688,
              "nodeType": "Block",
              "src": "5281:411:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98640,
                      "mutability": "mutable",
                      "name": "nextId",
                      "nameLocation": "5299:6:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98688,
                      "src": "5291:14:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5291:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98643,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98641,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41062,
                      "src": "5308:21:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 98642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:23:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5291:40:379"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 98644,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98633,
                        "src": "5345:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 98645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5345:12:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 98646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5360:1:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5345:16:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98680,
                  "nodeType": "IfStatement",
                  "src": "5341:278:379",
                  "trueBody": {
                    "id": 98679,
                    "nodeType": "Block",
                    "src": "5363:256:379",
                    "statements": [
                      {
                        "assignments": [
                          98649,
                          98651
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98649,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5391:12:379",
                            "nodeType": "VariableDeclaration",
                            "scope": 98679,
                            "src": "5378:25:379",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 98648,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5378:5:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 98651,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5413:14:379",
                            "nodeType": "VariableDeclaration",
                            "scope": 98679,
                            "src": "5405:22:379",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 98650,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5405:7:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 98661,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 98654,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98633,
                              "src": "5442:5:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 98656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5450:5:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 98655,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5450:5:379",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 98658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5457:7:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 98657,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5457:7:379",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 98659,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5449:16:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 98652,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5431:3:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 98653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5431:10:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5431:35:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5377:89:379"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 98669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98662,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98649,
                                "src": "5484:12:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 98663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5484:19:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 98664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5507:1:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5484:24:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 98668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98666,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98651,
                              "src": "5512:14:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 98667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5530:2:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5512:20:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5484:48:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98678,
                        "nodeType": "IfStatement",
                        "src": "5480:129:379",
                        "trueBody": {
                          "id": 98677,
                          "nodeType": "Block",
                          "src": "5534:75:379",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 98673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 98671,
                                      "name": "nextId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98640,
                                      "src": "5570:6:379",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 98672,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98629,
                                      "src": "5579:7:379",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5570:16:379",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 98674,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98633,
                                    "src": "5588:5:379",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 98670,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39566,
                                  "src": "5552:17:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 98675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5552:42:379",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98676,
                              "nodeType": "ExpressionStatement",
                              "src": "5552:42:379"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98683,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98629,
                        "src": "5651:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98684,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98631,
                        "src": "5660:17:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 98685,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98633,
                        "src": "5679:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 98681,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5636:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 98682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41125,
                      "src": "5636:14:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 98686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:49:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98638,
                  "id": 98687,
                  "nodeType": "Return",
                  "src": "5629:56:379"
                }
              ]
            },
            "baseFunctions": [
              41125
            ],
            "documentation": {
              "id": 98627,
              "nodeType": "StructuredDocumentation",
              "src": "4945:167:379",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "5126:8:379",
            "overrides": {
              "id": 98635,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5246:8:379"
            },
            "parameters": {
              "id": 98634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98629,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5152:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98689,
                  "src": "5144:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5144:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98631,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5185:17:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98689,
                  "src": "5169:33:379",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5169:6:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98633,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5227:5:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98689,
                  "src": "5212:20:379",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98632,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:5:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:104:379"
            },
            "returnParameters": {
              "id": 98638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98637,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5272:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98689,
                  "src": "5264:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:17:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98737,
            "nodeType": "FunctionDefinition",
            "src": "5799:415:379",
            "nodes": [],
            "body": {
              "id": 98736,
              "nodeType": "Block",
              "src": "5897:317:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98701,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98539,
                            "src": "5924:11:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98702,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                99496
                              ],
                              "referencedDeclaration": 99496,
                              "src": "5937:10:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 98703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5937:12:379",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98700,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "5915:8:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5915:35:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 98705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5952:13:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 98699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5907:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:59:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98707,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:59:379"
                },
                {
                  "assignments": [
                    98709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98709,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "5984:7:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98736,
                      "src": "5976:15:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98708,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5976:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98711,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98692,
                        "src": "6012:6:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98710,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38929,
                      "src": "5994:17:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 98712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:25:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5976:43:379"
                },
                {
                  "expression": {
                    "id": 98719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98714,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98697,
                      "src": "6029:11:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98716,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98709,
                          "src": "6056:7:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 98717,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98694,
                          "src": "6065:4:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 98715,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39634,
                        "src": "6043:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 98718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6043:27:379",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6029:41:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 98720,
                  "nodeType": "ExpressionStatement",
                  "src": "6029:41:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98722,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98709,
                        "src": "6099:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 98723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6108:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 98721,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39566,
                      "src": "6081:17:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 98724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6081:30:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98725,
                  "nodeType": "ExpressionStatement",
                  "src": "6081:30:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98727,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98709,
                        "src": "6133:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98728,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98697,
                        "src": "6142:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 98726,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39064,
                      "src": "6121:11:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 98729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:33:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98730,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:33:379"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 98732,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98692,
                        "src": "6187:6:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98733,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98697,
                        "src": "6195:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 98731,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33226,
                      "src": "6170:16:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 98734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:37:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98735,
                  "nodeType": "EmitStatement",
                  "src": "6165:42:379"
                }
              ]
            },
            "baseFunctions": [
              33236
            ],
            "documentation": {
              "id": 98690,
              "nodeType": "StructuredDocumentation",
              "src": "5698:96:379",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reveal",
            "nameLocation": "5808:6:379",
            "parameters": {
              "id": 98695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98692,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5823:6:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98737,
                  "src": "5815:14:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5815:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98694,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5846:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98737,
                  "src": "5831:19:379",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98693,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5831:5:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5814:37:379"
            },
            "returnParameters": {
              "id": 98698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98697,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5884:11:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98737,
                  "src": "5870:25:379",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5870:6:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5869:27:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98798,
            "nodeType": "FunctionDefinition",
            "src": "6497:889:379",
            "nodes": [],
            "body": {
              "id": 98797,
              "nodeType": "Block",
              "src": "6577:809:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98746,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "6605:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98745,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98891,
                      "src": "6587:17:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 98747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6587:28:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98748,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:28:379"
                },
                {
                  "assignments": [
                    98750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98750,
                      "mutability": "mutable",
                      "name": "_tokenOwner",
                      "nameLocation": "6687:11:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98797,
                      "src": "6679:19:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 98749,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6679:7:379",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98753,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98751,
                      "name": "_dropMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99483
                      ],
                      "referencedDeclaration": 99483,
                      "src": "6701:14:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 98752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:16:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6679:38:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98755,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98750,
                        "src": "6745:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98756,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98740,
                        "src": "6758:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98757,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "6772:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98754,
                      "name": "verifyBurnToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39282,
                      "src": "6727:17:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 98758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:55:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98759,
                  "nodeType": "ExpressionStatement",
                  "src": "6727:55:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98761,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98750,
                        "src": "6812:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98762,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98740,
                        "src": "6825:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98763,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "6839:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98760,
                      "name": "_burnTokensOnOrigin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39332,
                      "src": "6792:19:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 98764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6792:57:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98765,
                  "nodeType": "ExpressionStatement",
                  "src": "6792:57:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 98769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6927:1:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 98768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6919:7:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6919:7:379",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6919:10:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98771,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "6943:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98772,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39346,
                              "src": "6966:19:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$39148_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 98773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6966:21:379",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39148_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 98774,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39147,
                          "src": "6966:37:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32971_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 98775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32970,
                        "src": "6966:46:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98776,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39346,
                              "src": "7026:19:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$39148_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 98777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7026:21:379",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39148_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 98778,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39147,
                          "src": "7026:37:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32971_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 98779,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPriceForNewToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32968,
                        "src": "7026:58:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98766,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99028
                      ],
                      "referencedDeclaration": 99028,
                      "src": "6885:20:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 98780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6885:209:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98781,
                  "nodeType": "ExpressionStatement",
                  "src": "6885:209:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98783,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98750,
                        "src": "7139:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98784,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "7152:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98782,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10876,
                        11060
                      ],
                      "referencedDeclaration": 10876,
                      "src": "7129:9:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7129:33:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98786,
                  "nodeType": "ExpressionStatement",
                  "src": "7129:33:379"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98788,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39346,
                              "src": "7236:19:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$39148_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 98789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7236:21:379",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39148_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 98790,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39147,
                          "src": "7236:37:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32971_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 98791,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "originContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32961,
                        "src": "7236:59:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98792,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98750,
                        "src": "7309:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98793,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98740,
                        "src": "7334:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98794,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98742,
                        "src": "7360:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98787,
                      "name": "TokensBurnedAndClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32982,
                      "src": "7200:22:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 98795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:179:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98796,
                  "nodeType": "EmitStatement",
                  "src": "7195:184:379"
                }
              ]
            },
            "documentation": {
              "id": 98738,
              "nodeType": "StructuredDocumentation",
              "src": "6414:78:379",
              "text": "@dev Claim lazy minted after burning required tokens from origin contract."
            },
            "functionSelector": "1567313b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndClaim",
            "nameLocation": "6506:12:379",
            "parameters": {
              "id": 98743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98740,
                  "mutability": "mutable",
                  "name": "_burnTokenId",
                  "nameLocation": "6527:12:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98798,
                  "src": "6519:20:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6519:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98742,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "6549:9:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98798,
                  "src": "6541:17:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6541:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:41:379"
            },
            "returnParameters": {
              "id": 98744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:0:379"
            },
            "scope": 99510,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98833,
            "nodeType": "FunctionDefinition",
            "src": "7661:353:379",
            "nodes": [],
            "body": {
              "id": 98832,
              "nodeType": "Block",
              "src": "7722:292:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98806,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98527,
                            "src": "7749:18:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98807,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                99496
                              ],
                              "referencedDeclaration": 99496,
                              "src": "7769:10:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 98808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7769:12:379",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98805,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "7740:8:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7740:42:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742061646d696e2e",
                        "id": 98810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7784:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        },
                        "value": "not admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        }
                      ],
                      "id": 98804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7732:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7732:65:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98812,
                  "nodeType": "ExpressionStatement",
                  "src": "7732:65:379"
                },
                {
                  "assignments": [
                    98817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98817,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7847:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98832,
                      "src": "7808:43:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 98816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98815,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 99521,
                          "src": "7808:30:379"
                        },
                        "referencedDeclaration": 99521,
                        "src": "7808:30:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98821,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 98818,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "7854:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99534_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 98819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99533,
                      "src": "7854:51:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$99521_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 98820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7854:53:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7808:99:379"
                },
                {
                  "expression": {
                    "id": 98826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98822,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98817,
                        "src": "7917:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                        }
                      },
                      "id": 98824,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTotalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99520,
                      "src": "7917:19:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98825,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98801,
                      "src": "7939:15:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7917:37:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98827,
                  "nodeType": "ExpressionStatement",
                  "src": "7917:37:379"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 98829,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98801,
                        "src": "7991:15:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98828,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98554,
                      "src": "7969:21:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 98830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7969:38:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98831,
                  "nodeType": "EmitStatement",
                  "src": "7964:43:379"
                }
              ]
            },
            "documentation": {
              "id": 98799,
              "nodeType": "StructuredDocumentation",
              "src": "7573:83:379",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxTotalSupply",
            "nameLocation": "7670:17:379",
            "parameters": {
              "id": 98802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98801,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7696:15:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98833,
                  "src": "7688:23:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7688:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7687:25:379"
            },
            "returnParameters": {
              "id": 98803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7722:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98891,
            "nodeType": "FunctionDefinition",
            "src": "8266:580:379",
            "nodes": [],
            "body": {
              "id": 98890,
              "nodeType": "Block",
              "src": "8326:520:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98843,
                      "mutability": "mutable",
                      "name": "dropData",
                      "nameLocation": "8375:8:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98890,
                      "src": "8336:47:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 98842,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98841,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 99521,
                          "src": "8336:30:379"
                        },
                        "referencedDeclaration": 99521,
                        "src": "8336:30:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98847,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 98844,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "8386:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99534_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 98845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99533,
                      "src": "8386:51:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$99521_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 98846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8386:53:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8336:103:379"
                },
                {
                  "assignments": [
                    98852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98852,
                      "mutability": "mutable",
                      "name": "erc721AData",
                      "nameLocation": "8477:11:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98890,
                      "src": "8449:39:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 98851,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98850,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "8449:19:379"
                        },
                        "referencedDeclaration": 10096,
                        "src": "8449:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98856,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 98853,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "8491:14:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 98854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "8491:29:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 98855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8491:31:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8449:73:379"
                },
                {
                  "assignments": [
                    98858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98858,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "8541:15:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98890,
                      "src": "8533:23:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8533:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98861,
                  "initialValue": {
                    "expression": {
                      "id": 98859,
                      "name": "dropData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98843,
                      "src": "8559:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 98860,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 99520,
                    "src": "8559:23:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8533:49:379"
                },
                {
                  "assignments": [
                    98863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98863,
                      "mutability": "mutable",
                      "name": "currentIndex_",
                      "nameLocation": "8600:13:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 98890,
                      "src": "8592:21:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8592:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98866,
                  "initialValue": {
                    "expression": {
                      "id": 98864,
                      "name": "erc721AData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98852,
                      "src": "8616:11:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 98865,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10069,
                    "src": "8616:25:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8592:49:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 98870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98868,
                            "name": "currentIndex_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98863,
                            "src": "8660:13:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 98869,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98836,
                            "src": "8676:9:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8660:25:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 98871,
                            "name": "nextTokenIdToLazyMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41062,
                            "src": "8689:21:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 98872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8689:23:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8660:52:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 98874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8714:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 98867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8652:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8652:72:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98876,
                  "nodeType": "ExpressionStatement",
                  "src": "8652:72:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 98886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 98880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98878,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98858,
                            "src": "8742:15:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 98879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8761:1:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8742:20:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 98885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98881,
                              "name": "currentIndex_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98863,
                              "src": "8766:13:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 98882,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98836,
                              "src": "8782:9:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8766:25:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 98884,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98858,
                            "src": "8795:15:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8766:44:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8742:68:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 98887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8812:26:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 98877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8734:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8734:105:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98889,
                  "nodeType": "ExpressionStatement",
                  "src": "8734:105:379"
                }
              ]
            },
            "documentation": {
              "id": 98834,
              "nodeType": "StructuredDocumentation",
              "src": "8203:58:379",
              "text": "@dev Check if given quantity is available for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkTokenSupply",
            "nameLocation": "8275:17:379",
            "parameters": {
              "id": 98837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98836,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8301:9:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98891,
                  "src": "8293:17:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8293:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8292:19:379"
            },
            "returnParameters": {
              "id": 98838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8326:0:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 98914,
            "nodeType": "FunctionDefinition",
            "src": "8906:229:379",
            "nodes": [],
            "body": {
              "id": 98913,
              "nodeType": "Block",
              "src": "9090:45:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98910,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98896,
                        "src": "9118:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98909,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98891,
                      "src": "9100:17:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 98911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9100:28:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98912,
                  "nodeType": "ExpressionStatement",
                  "src": "9100:28:379"
                }
              ]
            },
            "baseFunctions": [
              40397
            ],
            "documentation": {
              "id": 98892,
              "nodeType": "StructuredDocumentation",
              "src": "8852:49:379",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8915:12:379",
            "overrides": {
              "id": 98907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9081:8:379"
            },
            "parameters": {
              "id": 98906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "8937:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8937:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98896,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8962:9:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "8954:17:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8954:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "8981:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8981:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98900,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "8998:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "9015:23:379",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33302_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 98902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98901,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33302,
                      "src": "9015:14:379"
                    },
                    "referencedDeclaration": 33302,
                    "src": "9015:14:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33302_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98905,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98914,
                  "src": "9048:12:379",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98904,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9048:5:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8927:139:379"
            },
            "returnParameters": {
              "id": 98908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9090:0:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99028,
            "nodeType": "FunctionDefinition",
            "src": "9225:1136:379",
            "nodes": [],
            "body": {
              "id": 99027,
              "nodeType": "Block",
              "src": "9411:950:379",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98927,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98923,
                      "src": "9425:14:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 98928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9443:1:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9425:19:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98940,
                  "nodeType": "IfStatement",
                  "src": "9421:103:379",
                  "trueBody": {
                    "id": 98939,
                    "nodeType": "Block",
                    "src": "9446:78:379",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 98934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 98931,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9468:3:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 98932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9468:9:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 98933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9481:1:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9468:14:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 98935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9484:8:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 98930,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9460:7:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9460:33:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98937,
                        "nodeType": "ExpressionStatement",
                        "src": "9460:33:379"
                      },
                      {
                        "functionReturnParameters": 98926,
                        "id": 98938,
                        "nodeType": "Return",
                        "src": "9507:7:379"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    98942,
                    98944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98942,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9543:20:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9535:28:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 98941,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9535:7:379",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 98944,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9572:14:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9565:21:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 98943,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9565:6:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98947,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98945,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42401,
                      "src": "9590:18:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 98946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9590:20:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9534:76:379"
                },
                {
                  "assignments": [
                    98949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98949,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "9629:13:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9621:21:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 98948,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:7:379",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98960,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 98955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 98950,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98917,
                        "src": "9645:21:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 98953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9678:1:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 98952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9670:7:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9670:7:379",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9670:10:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9645:35:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 98958,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98917,
                      "src": "9708:21:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9645:84:379",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 98956,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42534,
                        "src": "9683:20:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 98957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9683:22:379",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9621:108:379"
                },
                {
                  "assignments": [
                    98962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98962,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9748:10:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9740:18:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9740:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98966,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98963,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98919,
                      "src": "9761:16:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 98964,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98923,
                      "src": "9780:14:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9761:33:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9740:54:379"
                },
                {
                  "assignments": [
                    98968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98968,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9812:12:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9804:20:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9804:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98975,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 98971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98969,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98962,
                            "src": "9828:10:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 98970,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98944,
                            "src": "9841:14:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9828:27:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 98972,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9827:29:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 98973,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98549,
                      "src": "9859:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9827:39:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9804:62:379"
                },
                {
                  "assignments": [
                    98977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98977,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9882:13:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99027,
                      "src": "9877:18:379",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 98976,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9877:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98978,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9877:18:379"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 98982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98979,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98921,
                      "src": "9909:9:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 98980,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "9922:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 98981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63211,
                      "src": "9922:32:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9909:45:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 98998,
                    "nodeType": "Block",
                    "src": "10026:55:379",
                    "statements": [
                      {
                        "expression": {
                          "id": 98996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98991,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98977,
                            "src": "10040:13:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98992,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10056:3:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 98993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10056:9:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 98994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10069:1:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10056:14:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10040:30:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98997,
                        "nodeType": "ExpressionStatement",
                        "src": "10040:30:379"
                      }
                    ]
                  },
                  "id": 98999,
                  "nodeType": "IfStatement",
                  "src": "9905:176:379",
                  "trueBody": {
                    "id": 98990,
                    "nodeType": "Block",
                    "src": "9956:64:379",
                    "statements": [
                      {
                        "expression": {
                          "id": 98988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98983,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98977,
                            "src": "9970:13:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98984,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9986:3:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 98985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9986:9:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 98986,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98962,
                              "src": "9999:10:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9986:23:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9970:39:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98989,
                        "nodeType": "ExpressionStatement",
                        "src": "9970:39:379"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99001,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98977,
                        "src": "10098:13:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 99002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10113:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 99000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10090:7:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10090:43:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99004,
                  "nodeType": "ExpressionStatement",
                  "src": "10090:43:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99008,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98921,
                        "src": "10181:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99009,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "10192:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10192:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99011,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98942,
                        "src": "10206:20:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99012,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98968,
                        "src": "10228:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99005,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "10144:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 99007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63248,
                      "src": "10144:36:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 99013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10144:97:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99014,
                  "nodeType": "ExpressionStatement",
                  "src": "10144:97:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99018,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98921,
                        "src": "10288:9:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99019,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "10299:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10299:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99021,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98949,
                        "src": "10313:13:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99022,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98962,
                          "src": "10328:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 99023,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98968,
                          "src": "10341:12:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10328:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99015,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63443,
                        "src": "10251:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63443_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 99017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63248,
                      "src": "10251:36:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 99025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10251:103:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99026,
                  "nodeType": "ExpressionStatement",
                  "src": "10251:103:379"
                }
              ]
            },
            "baseFunctions": [
              40441
            ],
            "documentation": {
              "id": 98915,
              "nodeType": "StructuredDocumentation",
              "src": "9141:79:379",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "9234:20:379",
            "overrides": {
              "id": 98925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9402:8:379"
            },
            "parameters": {
              "id": 98924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98917,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9272:21:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99028,
                  "src": "9264:29:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9264:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98919,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9311:16:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99028,
                  "src": "9303:24:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9303:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98921,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9345:9:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99028,
                  "src": "9337:17:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9337:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98923,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9372:14:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99028,
                  "src": "9364:22:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9364:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9254:138:379"
            },
            "returnParameters": {
              "id": 98926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9411:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99059,
            "nodeType": "FunctionDefinition",
            "src": "10414:326:379",
            "nodes": [],
            "body": {
              "id": 99058,
              "nodeType": "Block",
              "src": "10567:173:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99043,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "10605:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99058,
                      "src": "10577:32:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99042,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99041,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "10577:19:379"
                        },
                        "referencedDeclaration": 10096,
                        "src": "10577:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99047,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99044,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "10612:14:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "10612:29:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10612:31:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10577:66:379"
                },
                {
                  "expression": {
                    "id": 99051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99048,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99037,
                      "src": "10653:12:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 99049,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99043,
                        "src": "10668:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data storage pointer"
                        }
                      },
                      "id": 99050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10069,
                      "src": "10668:18:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10653:33:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99052,
                  "nodeType": "ExpressionStatement",
                  "src": "10653:33:379"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99054,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99031,
                        "src": "10706:3:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99055,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99033,
                        "src": "10711:21:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99053,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10876,
                        11060
                      ],
                      "referencedDeclaration": 10876,
                      "src": "10696:9:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10696:37:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99057,
                  "nodeType": "ExpressionStatement",
                  "src": "10696:37:379"
                }
              ]
            },
            "baseFunctions": [
              40451
            ],
            "documentation": {
              "id": 99029,
              "nodeType": "StructuredDocumentation",
              "src": "10367:42:379",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10423:22:379",
            "overrides": {
              "id": 99035,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10515:8:379"
            },
            "parameters": {
              "id": 99034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99031,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10454:3:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99059,
                  "src": "10446:11:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10446:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99033,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10467:21:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99059,
                  "src": "10459:29:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10459:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10445:44:379"
            },
            "returnParameters": {
              "id": 99038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99037,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "10549:12:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99059,
                  "src": "10541:20:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10541:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10540:22:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99073,
            "nodeType": "FunctionDefinition",
            "src": "10835:138:379",
            "nodes": [],
            "body": {
              "id": 99072,
              "nodeType": "Block",
              "src": "10907:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99067,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "10933:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99068,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "10953:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10953:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99066,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "10924:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99065,
                  "id": 99071,
                  "nodeType": "Return",
                  "src": "10917:49:379"
                }
              ]
            },
            "baseFunctions": [
              42483
            ],
            "documentation": {
              "id": 99060,
              "nodeType": "StructuredDocumentation",
              "src": "10746:84:379",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10844:22:379",
            "overrides": {
              "id": 99062,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10883:8:379"
            },
            "parameters": {
              "id": 99061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10866:2:379"
            },
            "returnParameters": {
              "id": 99065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99073,
                  "src": "10901:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99063,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10901:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10900:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99087,
            "nodeType": "FunctionDefinition",
            "src": "11073:143:379",
            "nodes": [],
            "body": {
              "id": 99086,
              "nodeType": "Block",
              "src": "11150:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99081,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "11176:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99082,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "11196:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11196:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99080,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "11167:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11167:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99079,
                  "id": 99085,
                  "nodeType": "Return",
                  "src": "11160:49:379"
                }
              ]
            },
            "baseFunctions": [
              42592
            ],
            "documentation": {
              "id": 99074,
              "nodeType": "StructuredDocumentation",
              "src": "10979:89:379",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "11082:27:379",
            "overrides": {
              "id": 99076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11126:8:379"
            },
            "parameters": {
              "id": 99075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:2:379"
            },
            "returnParameters": {
              "id": 99079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99087,
                  "src": "11144:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11144:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11143:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99101,
            "nodeType": "FunctionDefinition",
            "src": "11299:128:379",
            "nodes": [],
            "body": {
              "id": 99100,
              "nodeType": "Block",
              "src": "11361:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99095,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "11387:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99096,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "11407:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11407:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99094,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "11378:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11378:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99093,
                  "id": 99099,
                  "nodeType": "Return",
                  "src": "11371:49:379"
                }
              ]
            },
            "baseFunctions": [
              41534
            ],
            "documentation": {
              "id": 99088,
              "nodeType": "StructuredDocumentation",
              "src": "11222:72:379",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11308:12:379",
            "overrides": {
              "id": 99090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11337:8:379"
            },
            "parameters": {
              "id": 99089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11320:2:379"
            },
            "returnParameters": {
              "id": 99093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99101,
                  "src": "11355:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11355:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11354:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99115,
            "nodeType": "FunctionDefinition",
            "src": "11517:134:379",
            "nodes": [],
            "body": {
              "id": 99114,
              "nodeType": "Block",
              "src": "11585:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99109,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "11611:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99110,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "11631:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11631:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99108,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "11602:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11602:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99107,
                  "id": 99113,
                  "nodeType": "Return",
                  "src": "11595:49:379"
                }
              ]
            },
            "baseFunctions": [
              42982
            ],
            "documentation": {
              "id": 99102,
              "nodeType": "StructuredDocumentation",
              "src": "11433:79:379",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11526:18:379",
            "overrides": {
              "id": 99104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11561:8:379"
            },
            "parameters": {
              "id": 99103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11544:2:379"
            },
            "returnParameters": {
              "id": 99107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99115,
                  "src": "11579:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11579:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11578:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99129,
            "nodeType": "FunctionDefinition",
            "src": "11746:134:379",
            "nodes": [],
            "body": {
              "id": 99128,
              "nodeType": "Block",
              "src": "11814:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99123,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "11840:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99124,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "11860:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11860:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99122,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "11831:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99121,
                  "id": 99127,
                  "nodeType": "Return",
                  "src": "11824:49:379"
                }
              ]
            },
            "baseFunctions": [
              39468
            ],
            "documentation": {
              "id": 99116,
              "nodeType": "StructuredDocumentation",
              "src": "11657:84:379",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11755:18:379",
            "overrides": {
              "id": 99118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11790:8:379"
            },
            "parameters": {
              "id": 99117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11773:2:379"
            },
            "returnParameters": {
              "id": 99121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99129,
                  "src": "11808:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99119,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11808:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11807:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99143,
            "nodeType": "FunctionDefinition",
            "src": "11975:138:379",
            "nodes": [],
            "body": {
              "id": 99142,
              "nodeType": "Block",
              "src": "12047:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99137,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "12073:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99138,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "12093:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12093:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99136,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "12064:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12064:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99135,
                  "id": 99141,
                  "nodeType": "Return",
                  "src": "12057:49:379"
                }
              ]
            },
            "baseFunctions": [
              40457
            ],
            "documentation": {
              "id": 99130,
              "nodeType": "StructuredDocumentation",
              "src": "11886:84:379",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11984:22:379",
            "overrides": {
              "id": 99132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12023:8:379"
            },
            "parameters": {
              "id": 99131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12006:2:379"
            },
            "returnParameters": {
              "id": 99135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99143,
                  "src": "12041:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12041:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12040:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99157,
            "nodeType": "FunctionDefinition",
            "src": "12205:129:379",
            "nodes": [],
            "body": {
              "id": 99156,
              "nodeType": "Block",
              "src": "12275:59:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99151,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98539,
                        "src": "12301:11:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99152,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "12314:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12314:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99150,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "12292:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12292:35:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99149,
                  "id": 99155,
                  "nodeType": "Return",
                  "src": "12285:42:379"
                }
              ]
            },
            "baseFunctions": [
              41145
            ],
            "documentation": {
              "id": 99144,
              "nodeType": "StructuredDocumentation",
              "src": "12119:81:379",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "12214:12:379",
            "overrides": {
              "id": 99146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12251:8:379"
            },
            "parameters": {
              "id": 99145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12226:2:379"
            },
            "returnParameters": {
              "id": 99149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99157,
                  "src": "12269:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12268:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99171,
            "nodeType": "FunctionDefinition",
            "src": "12433:145:379",
            "nodes": [],
            "body": {
              "id": 99170,
              "nodeType": "Block",
              "src": "12512:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99165,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "12538:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99166,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "12558:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12558:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99164,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "12529:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12529:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99163,
                  "id": 99169,
                  "nodeType": "Return",
                  "src": "12522:49:379"
                }
              ]
            },
            "baseFunctions": [
              41245
            ],
            "documentation": {
              "id": 99158,
              "nodeType": "StructuredDocumentation",
              "src": "12340:88:379",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "12442:26:379",
            "overrides": {
              "id": 99160,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12488:8:379"
            },
            "parameters": {
              "id": 99159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12468:2:379"
            },
            "returnParameters": {
              "id": 99163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99171,
                  "src": "12506:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12506:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12505:6:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99185,
            "nodeType": "FunctionDefinition",
            "src": "12675:142:379",
            "nodes": [],
            "body": {
              "id": 99184,
              "nodeType": "Block",
              "src": "12751:66:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99179,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98527,
                        "src": "12777:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99180,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99496
                          ],
                          "referencedDeclaration": 99496,
                          "src": "12797:10:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12797:12:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99178,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "12768:8:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12768:42:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99177,
                  "id": 99183,
                  "nodeType": "Return",
                  "src": "12761:49:379"
                }
              ]
            },
            "baseFunctions": [
              39351
            ],
            "documentation": {
              "id": 99172,
              "nodeType": "StructuredDocumentation",
              "src": "12584:86:379",
              "text": "@dev Returns whether burn-to-claim info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetBurnToClaim",
            "nameLocation": "12684:18:379",
            "overrides": {
              "id": 99174,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12727:8:379"
            },
            "parameters": {
              "id": 99173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12702:2:379"
            },
            "returnParameters": {
              "id": 99177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99185,
                  "src": "12745:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12745:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12744:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99208,
            "nodeType": "FunctionDefinition",
            "src": "13083:225:379",
            "nodes": [],
            "body": {
              "id": 99207,
              "nodeType": "Block",
              "src": "13138:170:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99195,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13176:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99207,
                      "src": "13148:32:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99194,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99193,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "13148:19:379"
                        },
                        "referencedDeclaration": 10096,
                        "src": "13148:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99199,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99196,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "13183:14:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "13183:29:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13183:31:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13148:66:379"
                },
                {
                  "id": 99206,
                  "nodeType": "UncheckedBlock",
                  "src": "13224:78:379",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99200,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99195,
                            "src": "13255:4:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                              "typeString": "struct ERC721AStorage.Data storage pointer"
                            }
                          },
                          "id": 99201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_currentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10069,
                          "src": "13255:18:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99202,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10186,
                            "src": "13276:13:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 99203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13276:15:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13255:36:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 99190,
                      "id": 99205,
                      "nodeType": "Return",
                      "src": "13248:43:379"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 99186,
              "nodeType": "StructuredDocumentation",
              "src": "13001:77:379",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "13092:11:379",
            "parameters": {
              "id": 99187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13103:2:379"
            },
            "returnParameters": {
              "id": 99190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99208,
                  "src": "13129:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13129:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13128:9:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99218,
            "nodeType": "FunctionDefinition",
            "src": "13390:108:379",
            "nodes": [],
            "body": {
              "id": 99217,
              "nodeType": "Block",
              "src": "13451:47:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99214,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41062,
                      "src": "13468:21:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13468:23:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99213,
                  "id": 99216,
                  "nodeType": "Return",
                  "src": "13461:30:379"
                }
              ]
            },
            "documentation": {
              "id": 99209,
              "nodeType": "StructuredDocumentation",
              "src": "13314:71:379",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "13399:17:379",
            "parameters": {
              "id": 99210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13416:2:379"
            },
            "returnParameters": {
              "id": 99213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99218,
                  "src": "13442:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13442:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13441:9:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99237,
            "nodeType": "FunctionDefinition",
            "src": "13567:180:379",
            "nodes": [],
            "body": {
              "id": 99236,
              "nodeType": "Block",
              "src": "13629:118:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99228,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13667:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99236,
                      "src": "13639:32:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99227,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99226,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "13639:19:379"
                        },
                        "referencedDeclaration": 10096,
                        "src": "13639:19:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99232,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99229,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "13674:14:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "13674:29:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13674:31:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13639:66:379"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 99233,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99228,
                      "src": "13722:4:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 99234,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10069,
                    "src": "13722:18:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99223,
                  "id": 99235,
                  "nodeType": "Return",
                  "src": "13715:25:379"
                }
              ]
            },
            "documentation": {
              "id": 99219,
              "nodeType": "StructuredDocumentation",
              "src": "13504:58:379",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "13576:18:379",
            "parameters": {
              "id": 99220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13594:2:379"
            },
            "returnParameters": {
              "id": 99223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99237,
                  "src": "13620:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13620:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13619:9:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99256,
            "nodeType": "FunctionDefinition",
            "src": "13799:208:379",
            "nodes": [],
            "body": {
              "id": 99255,
              "nodeType": "Block",
              "src": "13855:152:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99247,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13904:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99255,
                      "src": "13865:43:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 99246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99245,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 99521,
                          "src": "13865:30:379"
                        },
                        "referencedDeclaration": 99521,
                        "src": "13865:30:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99251,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99248,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "13911:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99534_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 99249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99533,
                      "src": "13911:51:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$99521_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 99250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13911:53:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13865:99:379"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 99252,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99247,
                      "src": "13981:4:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99521_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 99253,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 99520,
                    "src": "13981:19:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99242,
                  "id": 99254,
                  "nodeType": "Return",
                  "src": "13974:26:379"
                }
              ]
            },
            "documentation": {
              "id": 99238,
              "nodeType": "StructuredDocumentation",
              "src": "13753:41:379",
              "text": "@dev Global max total supply of NFTs."
            },
            "functionSelector": "2ab4d052",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxTotalSupply",
            "nameLocation": "13808:14:379",
            "parameters": {
              "id": 99239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13822:2:379"
            },
            "returnParameters": {
              "id": 99242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99256,
                  "src": "13846:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13846:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13845:9:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99268,
            "nodeType": "FunctionDefinition",
            "src": "14063:184:379",
            "nodes": [],
            "body": {
              "id": 99267,
              "nodeType": "Block",
              "src": "14111:136:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99263,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99259,
                        "src": "14226:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 99264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14235:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99262,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11396,
                        11593
                      ],
                      "referencedDeclaration": 11593,
                      "src": "14220:5:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 99265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14220:20:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99266,
                  "nodeType": "ExpressionStatement",
                  "src": "14220:20:379"
                }
              ]
            },
            "documentation": {
              "id": 99257,
              "nodeType": "StructuredDocumentation",
              "src": "14013:45:379",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "14072:4:379",
            "parameters": {
              "id": 99260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99259,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14085:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99268,
                  "src": "14077:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14077:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14076:17:379"
            },
            "returnParameters": {
              "id": 99261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14111:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 99332,
            "nodeType": "FunctionDefinition",
            "src": "14301:579:379",
            "nodes": [],
            "body": {
              "id": 99331,
              "nodeType": "Block",
              "src": "14462:418:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99284,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99271,
                        "src": "14500:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99285,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99273,
                        "src": "14506:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99286,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99275,
                        "src": "14510:12:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99287,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99277,
                        "src": "14524:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99281,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14472:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11695,
                      "src": "14472:27:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 99288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14472:61:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99289,
                  "nodeType": "ExpressionStatement",
                  "src": "14472:61:379"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 99311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 99304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 99297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14645:36:379",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 99291,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98533,
                              "src": "14655:13:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 99294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14678:1:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 99293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14670:7:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 99292,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14670:7:379",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 99295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14670:10:379",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 99290,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99473,
                            "src": "14646:8:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 99296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14646:35:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99298,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99271,
                          "src": "14685:4:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 99301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14701:1:379",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 99300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14693:7:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99299,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14693:7:379",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14693:10:379",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14685:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14645:58:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 99310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 99305,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99273,
                        "src": "14707:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 99308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14721:1:379",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 99307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14713:7:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99306,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14713:7:379",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14713:10:379",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14707:16:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14645:78:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99330,
                  "nodeType": "IfStatement",
                  "src": "14641:233:379",
                  "trueBody": {
                    "id": 99329,
                    "nodeType": "Block",
                    "src": "14725:149:379",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 99322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14743:30:379",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 99313,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98533,
                                  "src": "14753:13:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 99314,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99271,
                                  "src": "14768:4:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99312,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99473,
                                "src": "14744:8:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 99315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14744:29:379",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 99321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14777:28:379",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 99318,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98533,
                                  "src": "14787:13:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 99319,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99273,
                                  "src": "14802:2:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99317,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99473,
                                "src": "14778:8:379",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 99320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14778:27:379",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14743:62:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99328,
                        "nodeType": "IfStatement",
                        "src": "14739:125:379",
                        "trueBody": {
                          "id": 99327,
                          "nodeType": "Block",
                          "src": "14807:57:379",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 99324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14832:16:379",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 99323,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14825:6:379",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 99325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14825:24:379",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 99326,
                              "nodeType": "ExpressionStatement",
                              "src": "14825:24:379"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              11695
            ],
            "documentation": {
              "id": 99269,
              "nodeType": "StructuredDocumentation",
              "src": "14253:43:379",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "14310:21:379",
            "overrides": {
              "id": 99279,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14453:8:379"
            },
            "parameters": {
              "id": 99278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99271,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14349:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99332,
                  "src": "14341:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14341:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99273,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14371:2:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99332,
                  "src": "14363:10:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14363:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99275,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "14391:12:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99332,
                  "src": "14383:20:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14383:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99277,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "14421:8:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99332,
                  "src": "14413:16:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14413:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14331:104:379"
            },
            "returnParameters": {
              "id": 99280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14462:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99352,
            "nodeType": "FunctionDefinition",
            "src": "14931:174:379",
            "nodes": [],
            "body": {
              "id": 99351,
              "nodeType": "Block",
              "src": "15045:60:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99335,
                        "src": "15079:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99348,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99337,
                        "src": "15089:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 99344,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15055:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10725,
                      "src": "15055:23:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 99349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15055:43:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99350,
                  "nodeType": "ExpressionStatement",
                  "src": "15055:43:379"
                }
              ]
            },
            "baseFunctions": [
              10725
            ],
            "documentation": {
              "id": 99333,
              "nodeType": "StructuredDocumentation",
              "src": "14886:40:379",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99341,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99335,
                    "src": "15035:8:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 99342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99340,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41400,
                  "src": "15007:27:379"
                },
                "nodeType": "ModifierInvocation",
                "src": "15007:37:379"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "14940:17:379",
            "overrides": {
              "id": 99339,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14998:8:379"
            },
            "parameters": {
              "id": 99338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99335,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14966:8:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99352,
                  "src": "14958:16:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14958:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99337,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "14981:8:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99352,
                  "src": "14976:13:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14976:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14957:33:379"
            },
            "returnParameters": {
              "id": 99343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15045:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99372,
            "nodeType": "FunctionDefinition",
            "src": "15146:155:379",
            "nodes": [],
            "body": {
              "id": 99371,
              "nodeType": "Block",
              "src": "15252:49:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99367,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99355,
                        "src": "15276:8:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99368,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99357,
                        "src": "15286:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99364,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15262:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10648,
                      "src": "15262:13:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15262:32:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99370,
                  "nodeType": "ExpressionStatement",
                  "src": "15262:32:379"
                }
              ]
            },
            "baseFunctions": [
              10648
            ],
            "documentation": {
              "id": 99353,
              "nodeType": "StructuredDocumentation",
              "src": "15111:30:379",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99361,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99355,
                    "src": "15242:8:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 99362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99360,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41400,
                  "src": "15214:27:379"
                },
                "nodeType": "ModifierInvocation",
                "src": "15214:37:379"
              }
            ],
            "name": "approve",
            "nameLocation": "15155:7:379",
            "overrides": {
              "id": 99359,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15205:8:379"
            },
            "parameters": {
              "id": 99358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99355,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15171:8:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99372,
                  "src": "15163:16:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15163:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15189:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99372,
                  "src": "15181:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15181:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15162:35:379"
            },
            "returnParameters": {
              "id": 99363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15252:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99396,
            "nodeType": "FunctionDefinition",
            "src": "15348:211:379",
            "nodes": [],
            "body": {
              "id": 99395,
              "nodeType": "Block",
              "src": "15505:54:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99390,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99375,
                        "src": "15534:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99391,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99377,
                        "src": "15540:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99392,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99379,
                        "src": "15544:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99387,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15515:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10771,
                      "src": "15515:18:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 99393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15515:37:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99394,
                  "nodeType": "ExpressionStatement",
                  "src": "15515:37:379"
                }
              ]
            },
            "baseFunctions": [
              10771
            ],
            "documentation": {
              "id": 99373,
              "nodeType": "StructuredDocumentation",
              "src": "15307:36:379",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99384,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99375,
                    "src": "15499:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 99385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99383,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41368,
                  "src": "15479:19:379"
                },
                "nodeType": "ModifierInvocation",
                "src": "15479:25:379"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "15357:12:379",
            "overrides": {
              "id": 99382,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99381,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "15459:18:379"
                }
              ],
              "src": "15450:28:379"
            },
            "parameters": {
              "id": 99380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99375,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15387:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99396,
                  "src": "15379:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15379:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99377,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15409:2:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99396,
                  "src": "15401:10:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15401:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99379,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15429:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99396,
                  "src": "15421:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15421:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15369:73:379"
            },
            "returnParameters": {
              "id": 99386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15505:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99420,
            "nodeType": "FunctionDefinition",
            "src": "15610:219:379",
            "nodes": [],
            "body": {
              "id": 99419,
              "nodeType": "Block",
              "src": "15771:58:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99414,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99399,
                        "src": "15804:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99415,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99401,
                        "src": "15810:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99416,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99403,
                        "src": "15814:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99411,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15781:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10790,
                      "src": "15781:22:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 99417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15781:41:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99418,
                  "nodeType": "ExpressionStatement",
                  "src": "15781:41:379"
                }
              ]
            },
            "baseFunctions": [
              10790
            ],
            "documentation": {
              "id": 99397,
              "nodeType": "StructuredDocumentation",
              "src": "15565:40:379",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99408,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99399,
                    "src": "15765:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 99409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99407,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41368,
                  "src": "15745:19:379"
                },
                "nodeType": "ModifierInvocation",
                "src": "15745:25:379"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15619:16:379",
            "overrides": {
              "id": 99406,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99405,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "15725:18:379"
                }
              ],
              "src": "15716:28:379"
            },
            "parameters": {
              "id": 99404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99399,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15653:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99420,
                  "src": "15645:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15645:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99401,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15675:2:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99420,
                  "src": "15667:10:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15667:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99403,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15695:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99420,
                  "src": "15687:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15687:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15635:73:379"
            },
            "returnParameters": {
              "id": 99410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15771:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99447,
            "nodeType": "FunctionDefinition",
            "src": "15880:252:379",
            "nodes": [],
            "body": {
              "id": 99446,
              "nodeType": "Block",
              "src": "16068:64:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99440,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99423,
                        "src": "16101:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99441,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99425,
                        "src": "16107:2:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99442,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99427,
                        "src": "16111:7:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99443,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99429,
                        "src": "16120:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99437,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "16078:5:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99510_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10826,
                      "src": "16078:22:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 99444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16078:47:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99445,
                  "nodeType": "ExpressionStatement",
                  "src": "16078:47:379"
                }
              ]
            },
            "baseFunctions": [
              10826
            ],
            "documentation": {
              "id": 99421,
              "nodeType": "StructuredDocumentation",
              "src": "15835:40:379",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99434,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99423,
                    "src": "16062:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 99435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99433,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41368,
                  "src": "16042:19:379"
                },
                "nodeType": "ModifierInvocation",
                "src": "16042:25:379"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15889:16:379",
            "overrides": {
              "id": 99432,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99431,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "16022:18:379"
                }
              ],
              "src": "16013:28:379"
            },
            "parameters": {
              "id": 99430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99423,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15923:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99447,
                  "src": "15915:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15915:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99425,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15945:2:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99447,
                  "src": "15937:10:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15937:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99427,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15965:7:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99447,
                  "src": "15957:15:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15957:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99429,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15995:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99447,
                  "src": "15982:17:379",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15982:5:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15905:100:379"
            },
            "returnParameters": {
              "id": 99436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16068:0:379"
            },
            "scope": 99510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99473,
            "nodeType": "FunctionDefinition",
            "src": "16138:198:379",
            "nodes": [],
            "body": {
              "id": 99472,
              "nodeType": "Block",
              "src": "16213:123:379",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99460,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "16255:4:379",
                      "nodeType": "VariableDeclaration",
                      "scope": 99472,
                      "src": "16223:36:379",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 99459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99458,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41569,
                          "src": "16223:23:379"
                        },
                        "referencedDeclaration": 41569,
                        "src": "16223:23:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99464,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99461,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41582,
                        "src": "16262:18:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41582_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 99462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41581,
                      "src": "16262:23:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$41569_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 99463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16262:25:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16223:64:379"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 99465,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99460,
                          "src": "16304:4:379",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$41569_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 99466,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41563,
                        "src": "16304:13:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 99468,
                      "indexExpression": {
                        "id": 99467,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99449,
                        "src": "16318:4:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16304:19:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 99470,
                    "indexExpression": {
                      "id": 99469,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99451,
                      "src": "16324:4:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16304:25:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99455,
                  "id": 99471,
                  "nodeType": "Return",
                  "src": "16297:32:379"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "16147:8:379",
            "parameters": {
              "id": 99452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99449,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "16164:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99473,
                  "src": "16156:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 99448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16156:7:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99451,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "16178:4:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99473,
                  "src": "16170:12:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16170:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16155:28:379"
            },
            "returnParameters": {
              "id": 99455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99454,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99473,
                  "src": "16207:4:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99453,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16207:4:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16206:6:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99483,
            "nodeType": "FunctionDefinition",
            "src": "16342:111:379",
            "nodes": [],
            "body": {
              "id": 99482,
              "nodeType": "Block",
              "src": "16417:36:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99479,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99496
                      ],
                      "referencedDeclaration": 99496,
                      "src": "16434:10:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16434:12:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99478,
                  "id": 99481,
                  "nodeType": "Return",
                  "src": "16427:19:379"
                }
              ]
            },
            "baseFunctions": [
              40379
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "16351:14:379",
            "overrides": {
              "id": 99475,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16390:8:379"
            },
            "parameters": {
              "id": 99474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16365:2:379"
            },
            "returnParameters": {
              "id": 99478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99483,
                  "src": "16408:7:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16408:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16407:9:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99496,
            "nodeType": "FunctionDefinition",
            "src": "16459:176:379",
            "nodes": [],
            "body": {
              "id": 99495,
              "nodeType": "Block",
              "src": "16573:62:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99491,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40765,
                        "src": "16590:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 99492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40721,
                      "src": "16590:36:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16590:38:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99490,
                  "id": 99494,
                  "nodeType": "Return",
                  "src": "16583:45:379"
                }
              ]
            },
            "baseFunctions": [
              40721,
              49036
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "16468:10:379",
            "overrides": {
              "id": 99487,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99485,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49046,
                  "src": "16512:7:379"
                },
                {
                  "id": 99486,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40765,
                  "src": "16521:25:379"
                }
              ],
              "src": "16503:44:379"
            },
            "parameters": {
              "id": 99484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16478:2:379"
            },
            "returnParameters": {
              "id": 99490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99489,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "16565:6:379",
                  "nodeType": "VariableDeclaration",
                  "scope": 99496,
                  "src": "16557:14:379",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16557:7:379",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16556:16:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99509,
            "nodeType": "FunctionDefinition",
            "src": "16641:172:379",
            "nodes": [],
            "body": {
              "id": 99508,
              "nodeType": "Block",
              "src": "16753:60:379",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99504,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40765,
                        "src": "16770:25:379",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 99505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40746,
                      "src": "16770:34:379",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 99506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16770:36:379",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 99503,
                  "id": 99507,
                  "nodeType": "Return",
                  "src": "16763:43:379"
                }
              ]
            },
            "baseFunctions": [
              40746,
              49045
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "16650:8:379",
            "overrides": {
              "id": 99500,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99498,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49046,
                  "src": "16692:7:379"
                },
                {
                  "id": 99499,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40765,
                  "src": "16701:25:379"
                }
              ],
              "src": "16683:44:379"
            },
            "parameters": {
              "id": 99497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16658:2:379"
            },
            "returnParameters": {
              "id": 99503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99509,
                  "src": "16737:14:379",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99501,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16737:5:379",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16736:16:379"
            },
            "scope": 99510,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98497,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39469,
              "src": "2255:16:379"
            },
            "id": 98498,
            "nodeType": "InheritanceSpecifier",
            "src": "2255:16:379"
          },
          {
            "baseName": {
              "id": 98499,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42484,
              "src": "2277:11:379"
            },
            "id": 98500,
            "nodeType": "InheritanceSpecifier",
            "src": "2277:11:379"
          },
          {
            "baseName": {
              "id": 98501,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42983,
              "src": "2294:7:379"
            },
            "id": 98502,
            "nodeType": "InheritanceSpecifier",
            "src": "2294:7:379"
          },
          {
            "baseName": {
              "id": 98503,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42593,
              "src": "2307:11:379"
            },
            "id": 98504,
            "nodeType": "InheritanceSpecifier",
            "src": "2307:11:379"
          },
          {
            "baseName": {
              "id": 98505,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41535,
              "src": "2324:7:379"
            },
            "id": 98506,
            "nodeType": "InheritanceSpecifier",
            "src": "2324:7:379"
          },
          {
            "baseName": {
              "id": 98507,
              "name": "BurnToClaim",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39352,
              "src": "2337:11:379"
            },
            "id": 98508,
            "nodeType": "InheritanceSpecifier",
            "src": "2337:11:379"
          },
          {
            "baseName": {
              "id": 98509,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39717,
              "src": "2354:13:379"
            },
            "id": 98510,
            "nodeType": "InheritanceSpecifier",
            "src": "2354:13:379"
          },
          {
            "baseName": {
              "id": 98511,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41146,
              "src": "2373:8:379"
            },
            "id": 98512,
            "nodeType": "InheritanceSpecifier",
            "src": "2373:8:379"
          },
          {
            "baseName": {
              "id": 98513,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40458,
              "src": "2387:4:379"
            },
            "id": 98514,
            "nodeType": "InheritanceSpecifier",
            "src": "2387:4:379"
          },
          {
            "baseName": {
              "id": 98515,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40765,
              "src": "2397:25:379"
            },
            "id": 98516,
            "nodeType": "InheritanceSpecifier",
            "src": "2397:25:379"
          },
          {
            "baseName": {
              "id": 98517,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39493,
              "src": "2428:34:379"
            },
            "id": 98518,
            "nodeType": "InheritanceSpecifier",
            "src": "2428:34:379"
          },
          {
            "baseName": {
              "id": 98519,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11709,
              "src": "2468:18:379"
            },
            "id": 98520,
            "nodeType": "InheritanceSpecifier",
            "src": "2468:18:379"
          }
        ],
        "canonicalName": "BurnToClaimDrop721Logic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          99510,
          11709,
          15034,
          15080,
          14963,
          8680,
          39493,
          41401,
          41246,
          33932,
          40765,
          40458,
          33352,
          33087,
          33064,
          41146,
          39119,
          33591,
          39717,
          33247,
          39352,
          32989,
          41535,
          33955,
          42593,
          34117,
          42983,
          34181,
          14831,
          14687,
          49046,
          41010,
          42484,
          34096,
          39469,
          33216
        ],
        "name": "BurnToClaimDrop721Logic",
        "nameLocation": "2224:23:379",
        "scope": 99511,
        "usedErrors": [
          14975,
          14978,
          14981,
          14984,
          14987,
          14990,
          14993,
          14996,
          14999,
          15002,
          15005,
          15008,
          15011
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 379
}