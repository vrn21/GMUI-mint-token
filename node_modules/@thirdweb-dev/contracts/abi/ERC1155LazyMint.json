{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1757:10251:3:-:0;;;2585:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:42:55;516:4;2766:5:3;2773:7;1090:5:20;1083:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1105:16:20;;;;:6;;:16;;;;;:::i;:::-;;1017:111;;1313:52:68;1323:30;1355:9;1313;;;:52;;:::i;:::-;-1:-1:-1;;202:1:220;307:7;:22;2792:26:3::1;2804:13:::0;2792:11:::1;:26::i;:::-;2828:56;2853:17:::0;-1:-1:-1;;;;;2828:56:3;::::1;:24;:56::i;:::-;2894:29;2918:4;2894:23;:29::i;:::-;2585:345:::0;;;;;1757:10251;;2349:783:68;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:68;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:68;;2817:4;2763:92;;;2336:34:635;-1:-1:-1;;;;;2406:15:635;;2386:18;;;2379:43;905:42:68;;2763:45;;2271:18:635;;2763:92:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:68;;2958:4;2902:94;;;2336:34:635;-1:-1:-1;;;;;2406:15:635;;2386:18;;;2379:43;905:42:68;;2902:47;;2271:18:635;;2902:94:68;2124:304:635;2603:513:68;3053:48;;-1:-1:-1;;;3053:48:68;;3095:4;3053:48;;;2579:51:635;905:42:68;;3053:33;;2552:18:635;;3053:48:68;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:77:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:77;;2843:2:635;3571:25:77;;;2825:21:635;2882:2;2862:18;;;2855:30;-1:-1:-1;;;2901:18:635;;;2894:45;2956:18;;3571:25:77;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:77;;-1:-1:-1;;;;;;3663:32:77;;;;;-1:-1:-1;;;3663:32:77;;;;;;;;3711:46;;3131:25:635;;;3711:46:77;;3119:2:635;3104:18;3711:46:77;;;;;;;3430:334;;:::o;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;3307:41:635;;;577:33:67;;3295:2:635;3280:18;577:33:67;;;;;;;457:160;:::o;1757:10251:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1757:10251:3;;;-1:-1:-1;1757:10251:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:635;93:13;;-1:-1:-1;;;;;135:31:635;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:635;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:635;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:635:o;1218:901::-;1344:6;1352;1360;1368;1376;1429:3;1417:9;1408:7;1404:23;1400:33;1397:53;;;1446:1;1443;1436:12;1397:53;1469:40;1499:9;1469:40;:::i;:::-;1553:2;1538:18;;1532:25;1459:50;;-1:-1:-1;;;;;;1606:14:635;;;1603:34;;;1633:1;1630;1623:12;1603:34;1656:61;1709:7;1700:6;1689:9;1685:22;1656:61;:::i;:::-;1646:71;;1763:2;1752:9;1748:18;1742:25;1726:41;;1792:2;1782:8;1779:16;1776:36;;;1808:1;1805;1798:12;1776:36;;1831:63;1886:7;1875:8;1864:9;1860:24;1831:63;:::i;:::-;1821:73;;;1913:49;1958:2;1947:9;1943:18;1913:49;:::i;:::-;2005:3;1990:19;;1984:26;1903:59;;-1:-1:-1;;;;;;2039:31:635;;2029:42;;2019:70;;2085:1;2082;2075:12;2019:70;2108:5;2098:15;;;1218:901;;;;;;;;:::o;3359:380::-;3438:1;3434:12;;;;3481;;;3502:61;;3556:4;3548:6;3544:17;3534:27;;3502:61;3609:2;3601:6;3598:14;3578:18;3575:38;3572:161;;;3655:10;3650:3;3646:20;3643:1;3636:31;3690:4;3687:1;3680:15;3718:4;3715:1;3708:15;3572:161;;3359:380;;;:::o;:::-;1757:10251:3;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061018d5760003560e01c806357fd8455116100dd57806357fd845514610410578063600dd5ea1461043057806363b45e2d146104505780636b20c454146104655780638da5cb5b14610485578063938e3d7b1461049a57806395d89b41146104ba5780639bcf7a15146104cf578063a22cb465146104ef578063ac9650d81461050f578063b24f2d391461053c578063bd85b03914610567578063d37c353b14610594578063e8a3d485146105b4578063e985e9c5146105c9578063f242432a14610604578063f5298aca1461062457600080fd5b8062fdd58e1461019257806301ffc9a7146101dd57806306fdde031461020d5780630e89341c1461022f57806313af40351461024f5780632419f51b146102715780632a55205a146102915780632bc43fd9146102d05780632eb2c2d6146102e357806332f0cd64146103035780633b1475a71461032357806341f43434146103385780634bbb1abf146103675780634cc157df146103875780634e1273f4146103c9578063504c6e01146103f6575b600080fd5b34801561019e57600080fd5b506101ca6101ad366004612542565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101e957600080fd5b506101fd6101f8366004612582565b610644565b60405190151581526020016101d4565b34801561021957600080fd5b506102226106b1565b6040516101d491906125f7565b34801561023b57600080fd5b5061022261024a36600461260a565b61073f565b34801561025b57600080fd5b5061026f61026a366004612623565b610780565b005b34801561027d57600080fd5b506101ca61028c36600461260a565b6107b9565b34801561029d57600080fd5b506102b16102ac36600461263e565b610827565b604080516001600160a01b0390931683526020830191909152016101d4565b61026f6102de366004612660565b610864565b3480156102ef57600080fd5b5061026f6102fe3660046127e6565b61095d565b34801561030f57600080fd5b5061026f61031e36600461289d565b61098c565b34801561032f57600080fd5b50600b546101ca565b34801561034457600080fd5b5061035a6daaeb6d7670e522a718067333cd4e81565b6040516101d491906128ba565b34801561037357600080fd5b5061026f610382366004612660565b505050565b34801561039357600080fd5b506103a76103a236600461260a565b6109fd565b604080516001600160a01b03909316835261ffff9091166020830152016101d4565b3480156103d557600080fd5b506103e96103e43660046128ce565b610a68565b6040516101d491906129d3565b34801561040257600080fd5b50600c546101fd9060ff1681565b34801561041c57600080fd5b5061026f61042b366004612623565b610b7c565b34801561043c57600080fd5b5061026f61044b366004612542565b610bec565b34801561045c57600080fd5b506009546101ca565b34801561047157600080fd5b5061026f6104803660046129e6565b610c1e565b34801561049157600080fd5b5061035a610d72565b3480156104a657600080fd5b5061026f6104b5366004612a59565b610d81565b3480156104c657600080fd5b50610222610dae565b3480156104db57600080fd5b5061026f6104ea366004612aa1565b610dbb565b3480156104fb57600080fd5b5061026f61050a366004612ad6565b610dea565b34801561051b57600080fd5b5061052f61052a366004612b0d565b610dfe565b6040516101d49190612b81565b34801561054857600080fd5b506007546001600160a01b03811690600160a01b900461ffff166103a7565b34801561057357600080fd5b506101ca61058236600461260a565b600e6020526000908152604090205481565b3480156105a057600080fd5b506101ca6105af366004612c2b565b610ef2565b3480156105c057600080fd5b50610222610ffc565b3480156105d557600080fd5b506101fd6105e4366004612ca4565b600360209081526000928352604080842090915290825290205460ff1681565b34801561061057600080fd5b5061026f61061f366004612cd7565b611009565b34801561063057600080fd5b5061026f61063f366004612660565b611030565b60006301ffc9a760e01b6001600160e01b0319831614806106755750636cdb3d1360e11b6001600160e01b03198316145b8061069057506303a24d0760e21b6001600160e01b03198316145b806106ab57506001600160e01b0319821663152a902d60e11b145b92915050565b600080546106be90612d3b565b80601f01602080910402602001604051908101604052809291908181526020018280546106ea90612d3b565b80156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b505050505081565b6060600061074c836110d7565b90508061075884611273565b604051602001610769929190612d76565b604051602081830303815290604052915050919050565b610788611378565b6107ad5760405162461bcd60e51b81526004016107a490612da5565b60405180910390fd5b6107b68161139b565b50565b60006107c460095490565b82106108025760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016107a4565b6009828154811061081557610815612dcd565b90600052602060002001549050919050565b600080600080610836866109fd565b90945084925061ffff16905061271061084f8287612df9565b6108599190612e2e565b925050509250929050565b6002600d5414156108b75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a4565b6002600d55600b5482106108fa5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b60448201526064016107a4565b6109058383836113ed565b81836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68460405161094b91815260200190565b60405180910390a450506001600d5550565b846001600160a01b03811633146109775761097733611408565b61098486868686866114bb565b505050505050565b610994611378565b6109f45760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016107a4565b6107b681611525565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610a445780516020820151610a5e565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610a8b5760405162461bcd60e51b81526004016107a490612e42565b600083516001600160401b03811115610aa657610aa6612693565b604051908082528060200260200182016040528015610acf578160200160208202803683370190505b50905060005b8451811015610b745760026000868381518110610af457610af4612dcd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610b3057610b30612dcd565b6020026020010151815260200190815260200160002054828281518110610b5957610b59612dcd565b6020908102919091010152610b6d81612e6b565b9050610ad5565b509392505050565b610b84611378565b610be15760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b60648201526084016107a4565b6107b681600161156c565b610bf4611378565b610c105760405162461bcd60e51b81526004016107a490612da5565b610c1a828261165c565b5050565b336001600160a01b038416811480610c5b57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610c775760405162461bcd60e51b81526004016107a490612e86565b8151835114610cba5760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016107a4565b60005b8351811015610d6057828181518110610cd857610cd8612dcd565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610d1957610d19612dcd565b60200260200101518152602001908152602001600020541015610d4e5760405162461bcd60e51b81526004016107a490612eb1565b610d59600182612ee2565b9050610cbd565b50610d6c8484846116e0565b50505050565b6006546001600160a01b031690565b610d89611378565b610da55760405162461bcd60e51b81526004016107a490612da5565b6107b681611874565b600180546106be90612d3b565b610dc3611378565b610ddf5760405162461bcd60e51b81526004016107a490612da5565b610382838383611956565b81610df481611408565b61038283836119fe565b6060816001600160401b03811115610e1857610e18612693565b604051908082528060200260200182016040528015610e4b57816020015b6060815260200190600190039081610e365790505b50905060005b82811015610eeb57610ebb30858584818110610e6f57610e6f612dcd565b9050602002810190610e819190612efa565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611aae92505050565b828281518110610ecd57610ecd612dcd565b60200260200101819052508080610ee390612e6b565b915050610e51565b5092915050565b6000610efc611378565b610f185760405162461bcd60e51b81526004016107a490612da5565b85610f4d5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b60448201526064016107a4565b6000600b549050610f95818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ada92505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001610fcb8a84612ee2565b610fd59190612f40565b88888888604051610fea959493929190612f80565b60405180910390a25095945050505050565b600580546106be90612d3b565b846001600160a01b03811633146110235761102333611408565b6109848686868686611b47565b336001600160a01b03841681148061106d57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6110895760405162461bcd60e51b81526004016107a490612e86565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156110cc5760405162461bcd60e51b81526004016107a490612eb1565b610d6c848484611baa565b606060006110e460095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561113457602002820191906000526020600020905b815481526020019060010190808311611120575b5050505050905060005b828110156112385781818151811061115857611158612dcd565b602002602001015185101561122657600a600083838151811061117d5761117d612dcd565b60200260200101518152602001908152602001600020805461119e90612d3b565b80601f01602080910402602001604051908101604052809291908181526020018280546111ca90612d3b565b80156112175780601f106111ec57610100808354040283529160200191611217565b820191906000526020600020905b8154815290600101906020018083116111fa57829003601f168201915b50505050509350505050919050565b611231600182612ee2565b905061113e565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016107a4565b6060816112975750506040805180820190915260018152600360fc1b602082015290565b8160005b81156112c157806112ab81612e6b565b91506112ba9050600a83612e2e565b915061129b565b6000816001600160401b038111156112db576112db612693565b6040519080825280601f01601f191660200182016040528015611305576020820181803683370190505b5090505b84156113705761131a600183612f40565b9150611327600a86612fb9565b611332906030612ee2565b60f81b81838151811061134757611347612dcd565b60200101906001600160f81b031916908160001a905350611369600a86612e2e565b9450611309565b949350505050565b6000611382610d72565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61038283838360405180602001604052806000815250611c9c565b600c5460ff16156107b6576daaeb6d7670e522a718067333cd4e3b156107b657604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061145b9030908590600401612fcd565b602060405180830381865afa158015611478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149c9190612fe7565b6107b65780604051633b79c77360e21b81526004016107a491906128ba565b6001600160a01b0385163314806114f557506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6115115760405162461bcd60e51b81526004016107a490613004565b61151e8585858585611d63565b5050505050565b600c805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6daaeb6d7670e522a718067333cd4e3b15610c1a576001600160a01b0382163b1561162b5780156115f857604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe906115ca9030908690600401612fcd565b600060405180830381600087803b1580156115e457600080fd5b505af1158015610984573d6000803e3d6000fd5b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af2903906115ca9030908690600401612fcd565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e486906115ca9030906004016128ba565b61271081111561167e5760405162461bcd60e51b81526004016107a490613030565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166117065760405162461bcd60e51b81526004016107a490613059565b80518251146117275760405162461bcd60e51b81526004016107a490612e42565b600033905061174a81856000868660405180602001604052806000815250611f16565b60005b835181101561181557600084828151811061176a5761176a612dcd565b60200260200101519050600084838151811061178857611788612dcd565b6020908102919091018101516001600160a01b03891660009081526002835260408082208683529093529190912054909150818110156117da5760405162461bcd60e51b81526004016107a490613081565b6001600160a01b038816600090815260026020908152604080832095835294905292909220910390558061180d81612e6b565b91505061174d565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118669291906130ab565b60405180910390a450505050565b60006005805461188390612d3b565b80601f01602080910402602001604051908101604052809291908181526020018280546118af90612d3b565b80156118fc5780601f106118d1576101008083540402835291602001916118fc565b820191906000526020600020905b8154815290600101906020018083116118df57829003601f168201915b505085519394506119189360059350602087019250905061248d565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161194a9291906130d9565b60405180910390a15050565b6127108111156119785760405162461bcd60e51b81526004016107a490613030565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b336001600160a01b038316811415611a495760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016107a4565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016119f1565b6060611ad383836040518060600160405280602781526020016132e36027913961202b565b9392505050565b600080611ae78486612ee2565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350611b3e92909186019061248d565b50935093915050565b6001600160a01b038516331480611b8157506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b611b9d5760405162461bcd60e51b81526004016107a490613004565b61151e8585858585612108565b6001600160a01b038316611bd05760405162461bcd60e51b81526004016107a490613059565b33611bff81856000611be18761221c565b611bea8761221c565b60405180602001604052806000815250611f16565b6001600160a01b038416600090815260026020908152604080832086845290915290205482811015611c435760405162461bcd60e51b81526004016107a490613081565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616916000805160206132c3833981519152910160405180910390a45050505050565b6001600160a01b038416611cc25760405162461bcd60e51b81526004016107a4906130fe565b33611ce281600087611cd38861221c565b611cdc8861221c565b87611f16565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611d15908490612ee2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206132c3833981519152910160405180910390a461151e81600087878787612267565b8151835114611d845760405162461bcd60e51b81526004016107a490612e42565b6001600160a01b038416611daa5760405162461bcd60e51b81526004016107a4906130fe565b33611db9818787878787611f16565b60005b8451811015611eb0576000858281518110611dd957611dd9612dcd565b602002602001015190506000858381518110611df757611df7612dcd565b6020908102919091018101516001600160a01b038b166000908152600283526040808220868352909352919091205490915081811015611e495760405162461bcd60e51b81526004016107a490613081565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290611e95908490612ee2565b9250508190555050505080611ea990612e6b565b9050611dbc565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611f009291906130ab565b60405180910390a4610984818787878787612399565b6001600160a01b038516611f9d5760005b8351811015611f9b57828181518110611f4257611f42612dcd565b6020026020010151600e6000868481518110611f6057611f60612dcd565b602002602001015181526020019081526020016000206000828254611f859190612ee2565b90915550611f94905081612e6b565b9050611f27565b505b6001600160a01b0384166109845760005b835181101561202257828181518110611fc957611fc9612dcd565b6020026020010151600e6000868481518110611fe757611fe7612dcd565b60200260200101518152602001908152602001600020600082825461200c9190612f40565b9091555061201b905081612e6b565b9050611fae565b50505050505050565b60606001600160a01b0384163b6120935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016107a4565b600080856001600160a01b0316856040516120ae9190613124565b600060405180830381855af49150503d80600081146120e9576040519150601f19603f3d011682016040523d82523d6000602084013e6120ee565b606091505b50915091506120fe828286612454565b9695505050505050565b6001600160a01b03841661212e5760405162461bcd60e51b81526004016107a4906130fe565b3361213e818787611cd38861221c565b6001600160a01b0386166000908152600260209081526040808320878452909152902054838110156121825760405162461bcd60e51b81526004016107a490613081565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906121ce908490612ee2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206132c3833981519152910160405180910390a4612022828888888888612267565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061225657612256612dcd565b602090810291909101015292915050565b6001600160a01b0384163b156109845760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906122ab9089908990889088908890600401613140565b6020604051808303816000875af19250505080156122e6575060408051601f3d908101601f191682019092526122e391810190613185565b60015b612369576122f26131a2565b806308c379a0141561232c57506123076131be565b80612312575061232e565b8060405162461bcd60e51b81526004016107a491906125f7565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b60448201526064016107a4565b6001600160e01b0319811663f23a6e6160e01b146120225760405162461bcd60e51b81526004016107a490613247565b6001600160a01b0384163b156109845760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906123dd9089908990889088908890600401613270565b6020604051808303816000875af1925050508015612418575060408051601f3d908101601f1916820190925261241591810190613185565b60015b612424576122f26131a2565b6001600160e01b0319811663bc197c8160e01b146120225760405162461bcd60e51b81526004016107a490613247565b60608315612463575081611ad3565b8251156124735782518084602001fd5b8160405162461bcd60e51b81526004016107a491906125f7565b82805461249990612d3b565b90600052602060002090601f0160209004810192826124bb5760008555612501565b82601f106124d457805160ff1916838001178555612501565b82800160010185558215612501579182015b828111156125015782518255916020019190600101906124e6565b5061250d929150612511565b5090565b5b8082111561250d5760008155600101612512565b80356001600160a01b038116811461253d57600080fd5b919050565b6000806040838503121561255557600080fd5b61255e83612526565b946020939093013593505050565b6001600160e01b0319811681146107b657600080fd5b60006020828403121561259457600080fd5b8135611ad38161256c565b60005b838110156125ba5781810151838201526020016125a2565b83811115610d6c5750506000910152565b600081518084526125e381602086016020860161259f565b601f01601f19169290920160200192915050565b602081526000611ad360208301846125cb565b60006020828403121561261c57600080fd5b5035919050565b60006020828403121561263557600080fd5b611ad382612526565b6000806040838503121561265157600080fd5b50508035926020909101359150565b60008060006060848603121561267557600080fd5b61267e84612526565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156126ce576126ce612693565b6040525050565b60006001600160401b038211156126ee576126ee612693565b5060051b60200190565b600082601f83011261270957600080fd5b81356020612716826126d5565b60405161272382826126a9565b83815260059390931b850182019282810191508684111561274357600080fd5b8286015b8481101561275e5780358352918301918301612747565b509695505050505050565b60006001600160401b0383111561278257612782612693565b604051612799601f8501601f1916602001826126a9565b8091508381528484840111156127ae57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126127d757600080fd5b611ad383833560208501612769565b600080600080600060a086880312156127fe57600080fd5b61280786612526565b945061281560208701612526565b935060408601356001600160401b038082111561283157600080fd5b61283d89838a016126f8565b9450606088013591508082111561285357600080fd5b61285f89838a016126f8565b9350608088013591508082111561287557600080fd5b50612882888289016127c6565b9150509295509295909350565b80151581146107b657600080fd5b6000602082840312156128af57600080fd5b8135611ad38161288f565b6001600160a01b0391909116815260200190565b600080604083850312156128e157600080fd5b82356001600160401b03808211156128f857600080fd5b818501915085601f83011261290c57600080fd5b81356020612919826126d5565b60405161292682826126a9565b83815260059390931b850182019282810191508984111561294657600080fd5b948201945b8386101561296b5761295c86612526565b8252948201949082019061294b565b9650508601359250508082111561298157600080fd5b5061298e858286016126f8565b9150509250929050565b600081518084526020808501945080840160005b838110156129c8578151875295820195908201906001016129ac565b509495945050505050565b602081526000611ad36020830184612998565b6000806000606084860312156129fb57600080fd5b612a0484612526565b925060208401356001600160401b0380821115612a2057600080fd5b612a2c878388016126f8565b93506040860135915080821115612a4257600080fd5b50612a4f868287016126f8565b9150509250925092565b600060208284031215612a6b57600080fd5b81356001600160401b03811115612a8157600080fd5b8201601f81018413612a9257600080fd5b61137084823560208401612769565b600080600060608486031215612ab657600080fd5b83359250612ac660208501612526565b9150604084013590509250925092565b60008060408385031215612ae957600080fd5b612af283612526565b91506020830135612b028161288f565b809150509250929050565b60008060208385031215612b2057600080fd5b82356001600160401b0380821115612b3757600080fd5b818501915085601f830112612b4b57600080fd5b813581811115612b5a57600080fd5b8660208260051b8501011115612b6f57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612bd657603f19888603018452612bc48583516125cb565b94509285019290850190600101612ba8565b5092979650505050505050565b60008083601f840112612bf557600080fd5b5081356001600160401b03811115612c0c57600080fd5b602083019150836020828501011115612c2457600080fd5b9250929050565b600080600080600060608688031215612c4357600080fd5b8535945060208601356001600160401b0380821115612c6157600080fd5b612c6d89838a01612be3565b90965094506040880135915080821115612c8657600080fd5b50612c9388828901612be3565b969995985093965092949392505050565b60008060408385031215612cb757600080fd5b612cc083612526565b9150612cce60208401612526565b90509250929050565b600080600080600060a08688031215612cef57600080fd5b612cf886612526565b9450612d0660208701612526565b9350604086013592506060860135915060808601356001600160401b03811115612d2f57600080fd5b612882888289016127c6565b600181811c90821680612d4f57607f821691505b60208210811415612d7057634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612d8881846020880161259f565b835190830190612d9c81836020880161259f565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e1357612e13612de3565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612e3d57612e3d612e18565b500490565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6000600019821415612e7f57612e7f612de3565b5060010190565b6020808252601190820152702ab730b8383937bb32b21031b0b63632b960791b604082015260600190565b602080825260179082015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604082015260600190565b60008219821115612ef557612ef5612de3565b500190565b6000808335601e19843603018112612f1157600080fd5b8301803591506001600160401b03821115612f2b57600080fd5b602001915036819003821315612c2457600080fd5b600082821015612f5257612f52612de3565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612f9a606083018688612f57565b8281036040840152612fad818587612f57565b98975050505050505050565b600082612fc857612fc8612e18565b500690565b6001600160a01b0392831681529116602082015260400190565b600060208284031215612ff957600080fd5b8151611ad38161288f565b6020808252601290820152710853d5d3915497d3d497d054141493d5915160721b604082015260600190565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252600e908201526d232927a6afad22a927afa0a2222960911b604082015260600190565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b6040815260006130be6040830185612998565b82810360208401526130d08185612998565b95945050505050565b6040815260006130ec60408301856125cb565b82810360208401526130d081856125cb565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b6000825161313681846020870161259f565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061317a908301846125cb565b979650505050505050565b60006020828403121561319757600080fd5b8151611ad38161256c565b600060033d11156131bb5760046000803e5060005160e01c5b90565b600060443d10156131cc5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156131fb57505050505090565b82850191508151818111156132135750505050505090565b843d870101602082850101111561322d5750505050505090565b61323c602082860101876126a9565b509095945050505050565b6020808252600f908201526e1513d2d15394d7d491529150d51151608a1b604082015260600190565b6001600160a01b0386811682528516602082015260a06040820181905260009061329c90830186612998565b82810360608401526132ae8186612998565b90508281036080840152612fad81856125cb56fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201bcd565281a35433e2474a61ee4f50229fadea1e6c54092d8d949840ca02130d64736f6c634300080c0033",
    "sourceMap": "1757:10251:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:20;;;;;;;;;;-1:-1:-1;645:64:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:635;;;585:2;570:18;645:64:20;;;;;;;;7487:449:3;;;;;;;;;;-1:-1:-1;7487:449:3;;;;;:::i;:::-;;:::i;:::-;;;1184:14:635;;1177:22;1159:41;;1147:2;1132:18;7487:449:3;1019:187:635;418:18:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3184:219:3:-;;;;;;;;;;-1:-1:-1;3184:219:3;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;:::-;;1277:203:52;;;;;;;;;;-1:-1:-1;1277:203:52;;;;;:::i;:::-;;:::i;1421:347:77:-;;;;;;;;;;-1:-1:-1;1421:347:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2783:32:635;;;2765:51;;2847:2;2832:18;;2825:34;;;;2738:18;1421:347:77;2591:274:635;4564:534:3;;;;;;:::i;:::-;;:::i;9182:303::-;;;;;;;;;;-1:-1:-1;9182:303:3;;;;;:::i;:::-;;:::i;243:208:67:-;;;;;;;;;;-1:-1:-1;243:208:67;;;;;:::i;:::-;;:::i;8200:112:3:-;;;;;;;;;;-1:-1:-1;8284:21:3;;8200:112;;806:142:68;;;;;;;;;;;;905:42;806:142;;;;;;;;;:::i;5578:128:3:-;;;;;;;;;;-1:-1:-1;5578:128:3;;;;;:::i;:::-;;;;;2008:381:77;;;;;;;;;;-1:-1:-1;2008:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6946:32:635;;;6928:51;;7027:6;7015:19;;;7010:2;6995:18;;6988:47;6901:18;2008:381:77;6756:285:635;1788:482:20;;;;;;;;;;-1:-1:-1;1788:482:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;205:31:67:-;;;;;;;;;;-1:-1:-1;205:31:67;;;;;;;;530:199:55;;;;;;;;;;-1:-1:-1;530:199:55;;;;;:::i;:::-;;:::i;3087:256:77:-;;;;;;;;;;-1:-1:-1;3087:256:77;;;;;:::i;:::-;;:::i;980:96:52:-;;;;;;;;;;-1:-1:-1;1054:8:52;:15;980:96;;6661:564:3;;;;;;;;;;-1:-1:-1;6661:564:3;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;442:20:20:-;;;;;;;;;;;;;:::i;4281:288:77:-;;;;;;;;;;-1:-1:-1;4281:288:77;;;;;:::i;:::-;;:::i;8545:227:3:-;;;;;;;;;;-1:-1:-1;8545:227:3;;;;;:::i;:::-;;:::i;698:319:65:-;;;;;;;;;;-1:-1:-1;698:319:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:77:-;;;;;;;;;;-1:-1:-1;2599:16:77;;-1:-1:-1;;;;;2599:16:77;;;-1:-1:-1;;;2624:10:77;;;;2499:144;;2353:46:3;;;;;;;;;;-1:-1:-1;2353:46:3;;;;;:::i;:::-;;;;;;;;;;;;;;1254:592:63;;;;;;;;;;-1:-1:-1;1254:592:63;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;716:68:20:-;;;;;;;;;;-1:-1:-1;716:68:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8839:271:3;;;;;;;;;;-1:-1:-1;8839:271:3;;;;;:::i;:::-;;:::i;5991:376::-;;;;;;;;;;-1:-1:-1;5991:376:3;;;;;:::i;:::-;;:::i;7487:449::-;7590:4;-1:-1:-1;;;;;;;;;7625:25:3;;;;:100;;-1:-1:-1;;;;;;;;;;7700:25:3;;;7625:100;:176;;;-1:-1:-1;;;;;;;;;;7776:25:3;;;7625:176;:279;;;-1:-1:-1;;;;;;;7863:41:3;;-1:-1:-1;;;7863:41:3;7625:279;7606:298;7487:449;-1:-1:-1;;7487:449:3:o;418:18:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3184:219:3:-;3253:13;3278:22;3303:21;3315:8;3303:11;:21::i;:::-;3278:46;;3365:8;3375:19;:8;:17;:19::i;:::-;3348:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3334:62;;;3184:219;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;1277:203:52:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:52;;15813:2:635;1407:23:52;;;15795:21:635;15852:2;15832:18;;;15825:30;-1:-1:-1;;;15871:18:635;;;15864:43;15924:18;;1407:23:52;15611:337:635;1360:81:52;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:77:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:77;;-1:-1:-1;1613:66:77;;;-1:-1:-1;1755:6:77;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;4564:534:3:-;245:1:220;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:220;;16849:2:635;540:63:220;;;16831:21:635;16888:2;16868:18;;;16861:30;16927:33;16907:18;;;16900:61;16978:18;;540:63:220;16647:355:635;540:63:220;245:1;678:7;:18;8284:21:3;;4719:8:::1;:30;4711:53;;;::::0;-1:-1:-1;;;4711:53:3;;17209:2:635;4711:53:3::1;::::0;::::1;17191:21:635::0;17248:2;17228:18;;;17221:30;-1:-1:-1;;;17267:18:635;;;17260:40;17317:18;;4711:53:3::1;17007:334:635::0;4711:53:3::1;4895:54;4918:9;4929:8;4939:9;4895:22;:54::i;:::-;5071:8;5060:9;-1:-1:-1::0;;;;;5034:57:3::1;5048:10;-1:-1:-1::0;;;;;5034:57:3::1;;5081:9;5034:57;;;;597:25:635::0;;585:2;570:18;;451:177;5034:57:3::1;;;;;;;;-1:-1:-1::0;;202:1:220;851:7;:22;-1:-1:-1;4564:534:3:o;9182:303::-;9405:4;-1:-1:-1;;;;;1639:18:68;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;9421:57:3::1;9449:4;9455:2;9459:3;9464:7;9473:4;9421:27;:57::i;:::-;9182:303:::0;;;;;;:::o;243:208:67:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:67;;17548:2:635;313:84:67;;;17530:21:635;17587:2;17567:18;;;17560:30;17626:34;17606:18;;;17599:62;-1:-1:-1;;;17677:18:635;;;17670:41;17728:19;;313:84:67;17346:407:635;313:84:67;407:37;431:12;407:23;:37::i;2008:381:77:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:77;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:77;;;-1:-1:-1;;;2295:10:77;;;;2211:171;2192:190;;;;;2008:381;;;:::o;1788:482:20:-;1939:16;1998:3;:10;1979:8;:15;:29;1971:57;;;;-1:-1:-1;;;1971:57:20;;;;;;;:::i;:::-;2039:30;2086:8;:15;-1:-1:-1;;;;;2072:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2072:30:20;;2039:63;;2118:9;2113:120;2137:8;:15;2133:1;:19;2113:120;;;2192:9;:22;2202:8;2211:1;2202:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2192:22:20;-1:-1:-1;;;;;2192:22:20;;;;;;;;;;;;:30;2215:3;2219:1;2215:6;;;;;;;;:::i;:::-;;;;;;;2192:30;;;;;;;;;;;;2173:13;2187:1;2173:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2154:3;;;:::i;:::-;;;2113:120;;;-1:-1:-1;2250:13:20;1788:482;-1:-1:-1;;;1788:482:20:o;530:199:55:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:55;;18444:2:635;601:81:55;;;18426:21:635;18483:2;18463:18;;;18456:30;18522:34;18502:18;;;18495:62;-1:-1:-1;;;18573:18:635;;;18566:38;18621:19;;601:81:55;18242:404:635;601:81:55;692:30;702:13;717:4;692:9;:30::i;3087:256:77:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:77;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;:::-;3087:256;;:::o;6661:564:3:-;6825:10;-1:-1:-1;;;;;6854:16:3;;;;;:52;;-1:-1:-1;;;;;;6874:24:3;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6854:52;6846:82;;;;-1:-1:-1;;;6846:82:3;;;;;;;:::i;:::-;6966:8;:15;6946:9;:16;:35;6938:63;;;;-1:-1:-1;;;6938:63:3;;19199:2:635;6938:63:3;;;19181:21:635;19238:2;19218:18;;;19211:30;-1:-1:-1;;;19257:18:635;;;19250:45;19312:18;;6938:63:3;18997:339:635;6938:63:3;7017:9;7012:157;7036:9;:16;7032:1;:20;7012:157;;;7119:8;7128:1;7119:11;;;;;;;;:::i;:::-;;;;;;;7084:9;:17;7094:6;-1:-1:-1;;;;;7084:17:3;-1:-1:-1;;;;;7084:17:3;;;;;;;;;;;;:31;7102:9;7112:1;7102:12;;;;;;;;:::i;:::-;;;;;;;7084:31;;;;;;;;;;;;:46;;7076:82;;;;-1:-1:-1;;;7076:82:3;;;;;;;:::i;:::-;7054:6;7059:1;7054:6;;:::i;:::-;;;7012:157;;;;7179:39;7190:6;7198:9;7209:8;7179:10;:39::i;:::-;6798:427;6661:564;;;:::o;871:86:70:-;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;442:20:20:-;;;;;;;:::i;4281:288:77:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:77;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;8545:227:3:-;8698:8;1812:30:68;1833:8;1812:20;:30::i;:::-;8722:43:3::1;8746:8;8756;8722:23;:43::i;698:319:65:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:65;;-1:-1:-1;;;922:54:65:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;1254:592:63:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:63;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:63;;20554:2:635;1548:15:63;;;20536:21:635;20593:1;20573:18;;;20566:29;-1:-1:-1;;;20611:18:635;;;20604:35;20656:18;;1548:15:63;20352:328:635;1516:58:63;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:63;;-1:-1:-1;;;1669:55:63:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:63;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;565:34:54:-;;;;;;;:::i;8839:271:3:-;9037:4;-1:-1:-1;;;;;1639:18:68;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;9053:50:3::1;9076:4;9082:2;9086;9090:6;9098:4;9053:22;:50::i;5991:376::-:0;6130:10;-1:-1:-1;;;;;6159:16:3;;;;;:52;;-1:-1:-1;;;;;;6179:24:3;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6159:52;6151:82;;;;-1:-1:-1;;;6151:82:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;6251:17:3;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;6251:38:3;6243:74;;;;-1:-1:-1;;;6243:74:3;;;;;;;:::i;:::-;6328:32;6334:6;6342:8;6352:7;6328:5;:32::i;2153:390:52:-;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:52;;-1:-1:-1;;;2511:25:52;;21800:2:635;2511:25:52;;;21782:21:635;21839:2;21819:18;;;21812:30;-1:-1:-1;;;21858:18:635;;;21851:45;21913:18;;2511:25:52;21598:339:635;305:703:290;361:13;578:10;574:51;;-1:-1:-1;;604:10:290;;;;;;;;;;;;-1:-1:-1;;;604:10:290;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:290;;-1:-1:-1;750:2:290;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:290;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:290;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:290;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:290;;;;;;;;-1:-1:-1;949:11:290;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:290:o;10757:115:3:-;10821:4;10858:7;:5;:7::i;:::-;-1:-1:-1;;;;;10844:21:3;:10;-1:-1:-1;;;;;10844:21:3;;10837:28;;10757:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10056:193:3:-;10201:41;10207:9;10218:8;10228:9;10201:41;;;;;;;;;;;;:5;:41::i;1866:477:68:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:68;;905:42;;2168;;:67;;2219:4;;2226:8;;2168:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2285:8;2266:28;;-1:-1:-1;;;2266:28:68;;;;;;;;:::i;3088:360:20:-;-1:-1:-1;;;;;3300:18:20;;3308:10;3300:18;;:56;;-1:-1:-1;;;;;;3322:22:20;;;;;;:16;:22;;;;;;;;3345:10;3322:34;;;;;;;;;;3300:56;3292:87;;;;-1:-1:-1;;;3292:87:20;;;;;;;:::i;:::-;3389:52;3412:4;3418:2;3422:3;3427:7;3436:4;3389:22;:52::i;:::-;3088:360;;;;;:::o;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;1159:41:635;;;577:33:67;;1147:2:635;1132:18;577:33:67;;;;;;;457:160;:::o;2349:783:68:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:68;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:68;;905:42;;2763:45;;:92;;2817:4;;2824:30;;2763:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:289;2902:94;;-1:-1:-1;;;2902:94:68;;905:42;;2902:47;;:94;;2958:4;;2965:30;;2902:94;;;:::i;2603:513::-;3053:48;;-1:-1:-1;;;3053:48:68;;905:42;;3053:33;;:48;;3095:4;;3053:48;;;:::i;3430:334:77:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:77;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:77;;-1:-1:-1;;;;;;3663:32:77;;;;;-1:-1:-1;;;3663:32:77;;;;;;;;3711:46;;597:25:635;;;3711:46:77;;585:2:635;570:18;3711:46:77;;;;;;;3430:334;;:::o;7284:799:20:-;-1:-1:-1;;;;;7431:18:20;;7423:45;;;;-1:-1:-1;;;7423:45:20;;;;;;;:::i;:::-;7500:7;:14;7486:3;:10;:28;7478:56;;;;-1:-1:-1;;;7478:56:20;;;;;;;:::i;:::-;7545:16;7564:10;7545:29;;7585:66;7606:8;7616:4;7630:1;7634:3;7639:7;7585:66;;;;;;;;;;;;:20;:66::i;:::-;7667:9;7662:344;7686:3;:10;7682:1;:14;7662:344;;;7717:10;7730:3;7734:1;7730:6;;;;;;;;:::i;:::-;;;;;;;7717:19;;7750:14;7767:7;7775:1;7767:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7814:15:20;;7792:19;7814:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7767:10;;-1:-1:-1;7855:21:20;;;;7847:50;;;;-1:-1:-1;;;7847:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7939:15:20;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7961:20;;7939:42;;7698:3;;;;:::i;:::-;;;;7662:344;;;;8059:1;-1:-1:-1;;;;;8021:55:20;8045:4;-1:-1:-1;;;;;8021:55:20;8035:8;-1:-1:-1;;;;;8021:55:20;;8063:3;8068:7;8021:55;;;;;;;:::i;:::-;;;;;;;;7413:670;7284:799;;;:::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:77:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:77;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:77;;;;;;;;;;;;;-1:-1:-1;4886:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:77;;;;;;;;;;;-1:-1:-1;4886:81:77;;;;;;;4983:43;;597:25:635;;;4918:49:77;;4886:29;;4983:43;;570:18:635;4983:43:77;;;;;;;;4671:362;;;:::o;2457:291:20:-;2567:10;-1:-1:-1;;;;;2595:17:20;;;;;2587:44;;;;-1:-1:-1;;;2587:44:20;;25057:2:635;2587:44:20;;;25039:21:635;25096:2;25076:18;;;25069:30;-1:-1:-1;;;25115:18:635;;;25108:44;25169:18;;2587:44:20;24855:338:635;2587:44:20;-1:-1:-1;;;;;2641:23:20;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2641:44:20;;;;;;;;;;2700:41;;1159::635;;;2700::20;;1132:18:635;2700:41:20;1019:187:635;6538:198:286;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:286:o;2840:362:52:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:52;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:52;;-1:-1:-1;3159:36:52;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;2754:328:20:-;-1:-1:-1;;;;;2941:18:20;;2949:10;2941:18;;:56;;-1:-1:-1;;;;;;2963:22:20;;;;;;:16;:22;;;;;;;;2986:10;2963:34;;;;;;;;;;2941:56;2933:87;;;;-1:-1:-1;;;2933:87:20;;;;;;;:::i;:::-;3030:45;3048:4;3054:2;3058;3062:6;3070:4;3030:17;:45::i;6691:587::-;-1:-1:-1;;;;;6813:18:20;;6805:45;;;;-1:-1:-1;;;6805:45:20;;;;;;;:::i;:::-;6880:10;6901:102;6880:10;6932:4;6861:16;6950:21;6968:2;6950:17;:21::i;:::-;6973:25;6991:6;6973:17;:25::i;:::-;6901:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;7036:15:20;;7014:19;7036:15;;;:9;:15;;;;;;;;:19;;;;;;;;;7073:21;;;;7065:50;;;;-1:-1:-1;;;7065:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7149:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7171:20;;;7149:42;;7217:54;;25372:25:635;;;25413:18;;;25406:34;;;7149:15:20;;7217:54;;;-1:-1:-1;;;;;;;;;;;7217:54:20;25345:18:635;7217:54:20;;;;;;;6795:483;;6691:587;;;:::o;5482:530::-;-1:-1:-1;;;;;5629:16:20;;5621:41;;;;-1:-1:-1;;;5621:41:20;;;;;;;:::i;:::-;5692:10;5713:102;5692:10;5673:16;5756:2;5760:21;5778:2;5760:17;:21::i;:::-;5783:25;5801:6;5783:17;:25::i;:::-;5810:4;5713:20;:102::i;:::-;-1:-1:-1;;;;;5826:13:20;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5847:6;;5826:13;:27;;5847:6;;5826:27;:::i;:::-;;;;-1:-1:-1;;5868:52:20;;;25372:25:635;;;25428:2;25413:18;;25406:34;;;-1:-1:-1;;;;;5868:52:20;;;;5901:1;;5868:52;;;;-1:-1:-1;;;;;;;;;;;5868:52:20;25345:18:635;5868:52:20;;;;;;;5931:74;5962:8;5980:1;5984:2;5988;5992:6;6000:4;5931:30;:74::i;4386:967::-;4606:7;:14;4592:3;:10;:28;4584:56;;;;-1:-1:-1;;;4584:56:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4658:16:20;;4650:41;;;;-1:-1:-1;;;4650:41:20;;;;;;;:::i;:::-;4721:10;4742:60;4721:10;4773:4;4779:2;4783:3;4788:7;4797:4;4742:20;:60::i;:::-;4818:9;4813:385;4837:3;:10;4833:1;:14;4813:385;;;4868:10;4881:3;4885:1;4881:6;;;;;;;;:::i;:::-;;;;;;;4868:19;;4901:14;4918:7;4926:1;4918:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4965:15:20;;4943:19;4965:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4918:10;;-1:-1:-1;5006:21:20;;;;4998:50;;;;-1:-1:-1;;;4998:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;5090:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5112:20;;;5090:42;;5160:13;;;;;;;;;;;:17;;;;;;;;:27;;5126:6;;5090:15;5160:27;;5126:6;;5160:27;:::i;:::-;;;;;;;;4854:344;;;4849:3;;;;:::i;:::-;;;4813:385;;;;5243:2;-1:-1:-1;;;;;5213:47:20;5237:4;-1:-1:-1;;;;;5213:47:20;5227:8;-1:-1:-1;;;;;5213:47:20;;5247:3;5252:7;5213:47;;;;;;;:::i;:::-;;;;;;;;5271:75;5307:8;5317:4;5323:2;5327:3;5332:7;5341:4;5271:35;:75::i;11374:632:3:-;-1:-1:-1;;;;;11686:18:3;;11682:155;;11725:9;11720:107;11744:3;:10;11740:1;:14;11720:107;;;11802:7;11810:1;11802:10;;;;;;;;:::i;:::-;;;;;;;11779:11;:19;11791:3;11795:1;11791:6;;;;;;;;:::i;:::-;;;;;;;11779:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11756:3:3;;-1:-1:-1;11756:3:3;;:::i;:::-;;;11720:107;;;;11682:155;-1:-1:-1;;;;;11851:16:3;;11847:153;;11888:9;11883:107;11907:3;:10;11903:1;:14;11883:107;;;11965:7;11973:1;11965:10;;;;;;;;:::i;:::-;;;;;;;11942:11;:19;11954:3;11958:1;11954:6;;;;;;;;:::i;:::-;;;;;;;11942:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11919:3:3;;-1:-1:-1;11919:3:3;;:::i;:::-;;;11883:107;;;;11374:632;;;;;;:::o;6922:387:286:-;7063:12;-1:-1:-1;;;;;1427:19:286;;;7087:69;;;;-1:-1:-1;;;7087:69:286;;25994:2:635;7087:69:286;;;25976:21:635;26033:2;26013:18;;;26006:30;26072:34;26052:18;;;26045:62;-1:-1:-1;;;26123:18:635;;;26116:36;26169:19;;7087:69:286;25792:402:635;7087:69:286;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:286;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:286:o;3636:744:20:-;-1:-1:-1;;;;;3817:16:20;;3809:41;;;;-1:-1:-1;;;3809:41:20;;;;;;;:::i;:::-;3880:10;3901:96;3880:10;3932:4;3938:2;3942:21;3960:2;3942:17;:21::i;3901:96::-;-1:-1:-1;;;;;4030:15:20;;4008:19;4030:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4067:21;;;;4059:50;;;;-1:-1:-1;;;4059:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4143:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4165:20;;;4143:42;;4205:13;;;;;;;;;;;:17;;;;;;;;:27;;4179:6;;4143:15;4205:27;;4179:6;;4205:27;:::i;:::-;;;;-1:-1:-1;;4248:46:20;;;25372:25:635;;;25428:2;25413:18;;25406:34;;;-1:-1:-1;;;;;4248:46:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4248:46:20;25345:18:635;4248:46:20;;;;;;;4305:68;4336:8;4346:4;4352:2;4356;4360:6;4368:4;4305:30;:68::i;9722:193::-;9841:16;;;9855:1;9841:16;;;;;;;;;9788;;9816:22;;9841:16;;;;;;;;;;;;-1:-1:-1;9841:16:20;9816:41;;9878:7;9867:5;9873:1;9867:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9903:5;9722:193;-1:-1:-1;;9722:193:20:o;8309:667::-;-1:-1:-1;;;;;8516:14:20;;;:18;8512:458;;8554:72;;-1:-1:-1;;;8554:72:20;;-1:-1:-1;;;;;8554:38:20;;;;;:72;;8593:8;;8603:4;;8609:2;;8613:6;;8621:4;;8554:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8554:72:20;;;;;;;;-1:-1:-1;;8554:72:20;;;;;;;;;;;;:::i;:::-;;;8550:410;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8872:6;8865:14;;-1:-1:-1;;;8865:14:20;;;;;;;;:::i;8550:410::-;;;8919:26;;-1:-1:-1;;;8919:26:20;;28360:2:635;8919:26:20;;;28342:21:635;28399:2;28379:18;;;28372:30;-1:-1:-1;;;28418:18:635;;;28411:46;28474:18;;8919:26:20;28158:340:635;8550:410:20;-1:-1:-1;;;;;;8675:55:20;;-1:-1:-1;;;8675:55:20;8671:127;;8754:25;;-1:-1:-1;;;8754:25:20;;;;;;;:::i;8982:734::-;-1:-1:-1;;;;;9214:14:20;;;:18;9210:500;;9252:79;;-1:-1:-1;;;9252:79:20;;-1:-1:-1;;;;;9252:43:20;;;;;:79;;9296:8;;9306:4;;9312:3;;9317:7;;9326:4;;9252:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9252:79:20;;;;;;;;-1:-1:-1;;9252:79:20;;;;;;;;;;;;:::i;:::-;;;9248:452;;;;:::i;:::-;-1:-1:-1;;;;;;9410:60:20;;-1:-1:-1;;;9410:60:20;9406:132;;9494:25;;-1:-1:-1;;;9494:25:20;;;;;;;:::i;7529:692:286:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:286;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:286;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:635;82:20;;-1:-1:-1;;;;;131:31:635;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:635:o;633:131::-;-1:-1:-1;;;;;;707:32:635;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:258::-;1283:1;1293:113;1307:6;1304:1;1301:13;1293:113;;;1383:11;;;1377:18;1364:11;;;1357:39;1329:2;1322:10;1293:113;;;1424:6;1421:1;1418:13;1415:48;;;-1:-1:-1;;1459:1:635;1441:16;;1434:27;1211:258::o;1474:::-;1516:3;1554:5;1548:12;1581:6;1576:3;1569:19;1597:63;1653:6;1646:4;1641:3;1637:14;1630:4;1623:5;1619:16;1597:63;:::i;:::-;1714:2;1693:15;-1:-1:-1;;1689:29:635;1680:39;;;;1721:4;1676:50;;1474:258;-1:-1:-1;;1474:258:635:o;1737:220::-;1886:2;1875:9;1868:21;1849:4;1906:45;1947:2;1936:9;1932:18;1924:6;1906:45;:::i;1962:180::-;2021:6;2074:2;2062:9;2053:7;2049:23;2045:32;2042:52;;;2090:1;2087;2080:12;2042:52;-1:-1:-1;2113:23:635;;1962:180;-1:-1:-1;1962:180:635:o;2147:186::-;2206:6;2259:2;2247:9;2238:7;2234:23;2230:32;2227:52;;;2275:1;2272;2265:12;2227:52;2298:29;2317:9;2298:29;:::i;2338:248::-;2406:6;2414;2467:2;2455:9;2446:7;2442:23;2438:32;2435:52;;;2483:1;2480;2473:12;2435:52;-1:-1:-1;;2506:23:635;;;2576:2;2561:18;;;2548:32;;-1:-1:-1;2338:248:635:o;2870:322::-;2947:6;2955;2963;3016:2;3004:9;2995:7;2991:23;2987:32;2984:52;;;3032:1;3029;3022:12;2984:52;3055:29;3074:9;3055:29;:::i;:::-;3045:39;3131:2;3116:18;;3103:32;;-1:-1:-1;3182:2:635;3167:18;;;3154:32;;2870:322;-1:-1:-1;;;2870:322:635:o;3197:127::-;3258:10;3253:3;3249:20;3246:1;3239:31;3289:4;3286:1;3279:15;3313:4;3310:1;3303:15;3329:249;3439:2;3420:13;;-1:-1:-1;;3416:27:635;3404:40;;-1:-1:-1;;;;;3459:34:635;;3495:22;;;3456:62;3453:88;;;3521:18;;:::i;:::-;3557:2;3550:22;-1:-1:-1;;3329:249:635:o;3583:183::-;3643:4;-1:-1:-1;;;;;3668:6:635;3665:30;3662:56;;;3698:18;;:::i;:::-;-1:-1:-1;3743:1:635;3739:14;3755:4;3735:25;;3583:183::o;3771:724::-;3825:5;3878:3;3871:4;3863:6;3859:17;3855:27;3845:55;;3896:1;3893;3886:12;3845:55;3932:6;3919:20;3958:4;3981:43;4021:2;3981:43;:::i;:::-;4053:2;4047:9;4065:31;4093:2;4085:6;4065:31;:::i;:::-;4131:18;;;4223:1;4219:10;;;;4207:23;;4203:32;;;4165:15;;;;-1:-1:-1;4247:15:635;;;4244:35;;;4275:1;4272;4265:12;4244:35;4311:2;4303:6;4299:15;4323:142;4339:6;4334:3;4331:15;4323:142;;;4405:17;;4393:30;;4443:12;;;;4356;;4323:142;;;-1:-1:-1;4483:6:635;3771:724;-1:-1:-1;;;;;;3771:724:635:o;4500:468::-;4564:5;-1:-1:-1;;;;;4590:6:635;4587:30;4584:56;;;4620:18;;:::i;:::-;4669:2;4663:9;4681:69;4738:2;4717:15;;-1:-1:-1;;4713:29:635;4744:4;4709:40;4663:9;4681:69;:::i;:::-;4768:6;4759:15;;4798:6;4790;4783:22;4838:3;4829:6;4824:3;4820:16;4817:25;4814:45;;;4855:1;4852;4845:12;4814:45;4905:6;4900:3;4893:4;4885:6;4881:17;4868:44;4960:1;4953:4;4944:6;4936;4932:19;4928:30;4921:41;;4500:468;;;;;:::o;4973:220::-;5015:5;5068:3;5061:4;5053:6;5049:17;5045:27;5035:55;;5086:1;5083;5076:12;5035:55;5108:79;5183:3;5174:6;5161:20;5154:4;5146:6;5142:17;5108:79;:::i;5198:943::-;5352:6;5360;5368;5376;5384;5437:3;5425:9;5416:7;5412:23;5408:33;5405:53;;;5454:1;5451;5444:12;5405:53;5477:29;5496:9;5477:29;:::i;:::-;5467:39;;5525:38;5559:2;5548:9;5544:18;5525:38;:::i;:::-;5515:48;;5614:2;5603:9;5599:18;5586:32;-1:-1:-1;;;;;5678:2:635;5670:6;5667:14;5664:34;;;5694:1;5691;5684:12;5664:34;5717:61;5770:7;5761:6;5750:9;5746:22;5717:61;:::i;:::-;5707:71;;5831:2;5820:9;5816:18;5803:32;5787:48;;5860:2;5850:8;5847:16;5844:36;;;5876:1;5873;5866:12;5844:36;5899:63;5954:7;5943:8;5932:9;5928:24;5899:63;:::i;:::-;5889:73;;6015:3;6004:9;6000:19;5987:33;5971:49;;6045:2;6035:8;6032:16;6029:36;;;6061:1;6058;6051:12;6029:36;;6084:51;6127:7;6116:8;6105:9;6101:24;6084:51;:::i;:::-;6074:61;;;5198:943;;;;;;;;:::o;6146:118::-;6232:5;6225:13;6218:21;6211:5;6208:32;6198:60;;6254:1;6251;6244:12;6269:241;6325:6;6378:2;6366:9;6357:7;6353:23;6349:32;6346:52;;;6394:1;6391;6384:12;6346:52;6433:9;6420:23;6452:28;6474:5;6452:28;:::i;6515:236::-;-1:-1:-1;;;;;6712:32:635;;;;6694:51;;6682:2;6667:18;;6515:236::o;7046:1208::-;7164:6;7172;7225:2;7213:9;7204:7;7200:23;7196:32;7193:52;;;7241:1;7238;7231:12;7193:52;7281:9;7268:23;-1:-1:-1;;;;;7351:2:635;7343:6;7340:14;7337:34;;;7367:1;7364;7357:12;7337:34;7405:6;7394:9;7390:22;7380:32;;7450:7;7443:4;7439:2;7435:13;7431:27;7421:55;;7472:1;7469;7462:12;7421:55;7508:2;7495:16;7530:4;7553:43;7593:2;7553:43;:::i;:::-;7625:2;7619:9;7637:31;7665:2;7657:6;7637:31;:::i;:::-;7703:18;;;7791:1;7787:10;;;;7779:19;;7775:28;;;7737:15;;;;-1:-1:-1;7815:19:635;;;7812:39;;;7847:1;7844;7837:12;7812:39;7871:11;;;;7891:148;7907:6;7902:3;7899:15;7891:148;;;7973:23;7992:3;7973:23;:::i;:::-;7961:36;;7924:12;;;;8017;;;;7891:148;;;8058:6;-1:-1:-1;;8102:18:635;;8089:32;;-1:-1:-1;;8133:16:635;;;8130:36;;;8162:1;8159;8152:12;8130:36;;8185:63;8240:7;8229:8;8218:9;8214:24;8185:63;:::i;:::-;8175:73;;;7046:1208;;;;;:::o;8259:435::-;8312:3;8350:5;8344:12;8377:6;8372:3;8365:19;8403:4;8432:2;8427:3;8423:12;8416:19;;8469:2;8462:5;8458:14;8490:1;8500:169;8514:6;8511:1;8508:13;8500:169;;;8575:13;;8563:26;;8609:12;;;;8644:15;;;;8536:1;8529:9;8500:169;;;-1:-1:-1;8685:3:635;;8259:435;-1:-1:-1;;;;;8259:435:635:o;8699:261::-;8878:2;8867:9;8860:21;8841:4;8898:56;8950:2;8939:9;8935:18;8927:6;8898:56;:::i;8965:669::-;9092:6;9100;9108;9161:2;9149:9;9140:7;9136:23;9132:32;9129:52;;;9177:1;9174;9167:12;9129:52;9200:29;9219:9;9200:29;:::i;:::-;9190:39;;9280:2;9269:9;9265:18;9252:32;-1:-1:-1;;;;;9344:2:635;9336:6;9333:14;9330:34;;;9360:1;9357;9350:12;9330:34;9383:61;9436:7;9427:6;9416:9;9412:22;9383:61;:::i;:::-;9373:71;;9497:2;9486:9;9482:18;9469:32;9453:48;;9526:2;9516:8;9513:16;9510:36;;;9542:1;9539;9532:12;9510:36;;9565:63;9620:7;9609:8;9598:9;9594:24;9565:63;:::i;:::-;9555:73;;;8965:669;;;;;:::o;9847:450::-;9916:6;9969:2;9957:9;9948:7;9944:23;9940:32;9937:52;;;9985:1;9982;9975:12;9937:52;10025:9;10012:23;-1:-1:-1;;;;;10050:6:635;10047:30;10044:50;;;10090:1;10087;10080:12;10044:50;10113:22;;10166:4;10158:13;;10154:27;-1:-1:-1;10144:55:635;;10195:1;10192;10185:12;10144:55;10218:73;10283:7;10278:2;10265:16;10260:2;10256;10252:11;10218:73;:::i;10302:322::-;10379:6;10387;10395;10448:2;10436:9;10427:7;10423:23;10419:32;10416:52;;;10464:1;10461;10454:12;10416:52;10500:9;10487:23;10477:33;;10529:38;10563:2;10552:9;10548:18;10529:38;:::i;:::-;10519:48;;10614:2;10603:9;10599:18;10586:32;10576:42;;10302:322;;;;;:::o;10629:315::-;10694:6;10702;10755:2;10743:9;10734:7;10730:23;10726:32;10723:52;;;10771:1;10768;10761:12;10723:52;10794:29;10813:9;10794:29;:::i;:::-;10784:39;;10873:2;10862:9;10858:18;10845:32;10886:28;10908:5;10886:28;:::i;:::-;10933:5;10923:15;;;10629:315;;;;;:::o;10949:626::-;11046:6;11054;11107:2;11095:9;11086:7;11082:23;11078:32;11075:52;;;11123:1;11120;11113:12;11075:52;11163:9;11150:23;-1:-1:-1;;;;;11233:2:635;11225:6;11222:14;11219:34;;;11249:1;11246;11239:12;11219:34;11287:6;11276:9;11272:22;11262:32;;11332:7;11325:4;11321:2;11317:13;11313:27;11303:55;;11354:1;11351;11344:12;11303:55;11394:2;11381:16;11420:2;11412:6;11409:14;11406:34;;;11436:1;11433;11426:12;11406:34;11489:7;11484:2;11474:6;11471:1;11467:14;11463:2;11459:23;11455:32;11452:45;11449:65;;;11510:1;11507;11500:12;11449:65;11541:2;11533:11;;;;;11563:6;;-1:-1:-1;10949:626:635;;-1:-1:-1;;;;10949:626:635:o;11580:801::-;11740:4;11769:2;11809;11798:9;11794:18;11839:2;11828:9;11821:21;11862:6;11897;11891:13;11928:6;11920;11913:22;11966:2;11955:9;11951:18;11944:25;;12028:2;12018:6;12015:1;12011:14;12000:9;11996:30;11992:39;11978:53;;12066:2;12058:6;12054:15;12087:1;12097:255;12111:6;12108:1;12105:13;12097:255;;;12204:2;12200:7;12188:9;12180:6;12176:22;12172:36;12167:3;12160:49;12232:40;12265:6;12256;12250:13;12232:40;:::i;:::-;12222:50;-1:-1:-1;12330:12:635;;;;12295:15;;;;12133:1;12126:9;12097:255;;;-1:-1:-1;12369:6:635;;11580:801;-1:-1:-1;;;;;;;11580:801:635:o;12386:348::-;12438:8;12448:6;12502:3;12495:4;12487:6;12483:17;12479:27;12469:55;;12520:1;12517;12510:12;12469:55;-1:-1:-1;12543:20:635;;-1:-1:-1;;;;;12575:30:635;;12572:50;;;12618:1;12615;12608:12;12572:50;12655:4;12647:6;12643:17;12631:29;;12707:3;12700:4;12691:6;12683;12679:19;12675:30;12672:39;12669:59;;;12724:1;12721;12714:12;12669:59;12386:348;;;;;:::o;12739:788::-;12839:6;12847;12855;12863;12871;12924:2;12912:9;12903:7;12899:23;12895:32;12892:52;;;12940:1;12937;12930:12;12892:52;12976:9;12963:23;12953:33;;13037:2;13026:9;13022:18;13009:32;-1:-1:-1;;;;;13101:2:635;13093:6;13090:14;13087:34;;;13117:1;13114;13107:12;13087:34;13156:59;13207:7;13198:6;13187:9;13183:22;13156:59;:::i;:::-;13234:8;;-1:-1:-1;13130:85:635;-1:-1:-1;13322:2:635;13307:18;;13294:32;;-1:-1:-1;13338:16:635;;;13335:36;;;13367:1;13364;13357:12;13335:36;;13406:61;13459:7;13448:8;13437:9;13433:24;13406:61;:::i;:::-;12739:788;;;;-1:-1:-1;12739:788:635;;-1:-1:-1;13486:8:635;;13380:87;12739:788;-1:-1:-1;;;12739:788:635:o;13532:260::-;13600:6;13608;13661:2;13649:9;13640:7;13636:23;13632:32;13629:52;;;13677:1;13674;13667:12;13629:52;13700:29;13719:9;13700:29;:::i;:::-;13690:39;;13748:38;13782:2;13771:9;13767:18;13748:38;:::i;:::-;13738:48;;13532:260;;;;;:::o;13797:606::-;13901:6;13909;13917;13925;13933;13986:3;13974:9;13965:7;13961:23;13957:33;13954:53;;;14003:1;14000;13993:12;13954:53;14026:29;14045:9;14026:29;:::i;:::-;14016:39;;14074:38;14108:2;14097:9;14093:18;14074:38;:::i;:::-;14064:48;;14159:2;14148:9;14144:18;14131:32;14121:42;;14210:2;14199:9;14195:18;14182:32;14172:42;;14265:3;14254:9;14250:19;14237:33;-1:-1:-1;;;;;14285:6:635;14282:30;14279:50;;;14325:1;14322;14315:12;14279:50;14348:49;14389:7;14380:6;14369:9;14365:22;14348:49;:::i;14408:380::-;14487:1;14483:12;;;;14530;;;14551:61;;14605:4;14597:6;14593:17;14583:27;;14551:61;14658:2;14650:6;14647:14;14627:18;14624:38;14621:161;;;14704:10;14699:3;14695:20;14692:1;14685:31;14739:4;14736:1;14729:15;14767:4;14764:1;14757:15;14621:161;;14408:380;;;:::o;14793:470::-;14972:3;15010:6;15004:13;15026:53;15072:6;15067:3;15060:4;15052:6;15048:17;15026:53;:::i;:::-;15142:13;;15101:16;;;;15164:57;15142:13;15101:16;15198:4;15186:17;;15164:57;:::i;:::-;15237:20;;14793:470;-1:-1:-1;;;;14793:470:635:o;15268:338::-;15470:2;15452:21;;;15509:2;15489:18;;;15482:30;-1:-1:-1;;;15543:2:635;15528:18;;15521:44;15597:2;15582:18;;15268:338::o;15953:127::-;16014:10;16009:3;16005:20;16002:1;15995:31;16045:4;16042:1;16035:15;16069:4;16066:1;16059:15;16085:127;16146:10;16141:3;16137:20;16134:1;16127:31;16177:4;16174:1;16167:15;16201:4;16198:1;16191:15;16217:168;16257:7;16323:1;16319;16315:6;16311:14;16308:1;16305:21;16300:1;16293:9;16286:17;16282:45;16279:71;;;16330:18;;:::i;:::-;-1:-1:-1;16370:9:635;;16217:168::o;16390:127::-;16451:10;16446:3;16442:20;16439:1;16432:31;16482:4;16479:1;16472:15;16506:4;16503:1;16496:15;16522:120;16562:1;16588;16578:35;;16593:18;;:::i;:::-;-1:-1:-1;16627:9:635;;16522:120::o;17758:339::-;17960:2;17942:21;;;17999:2;17979:18;;;17972:30;-1:-1:-1;;;18033:2:635;18018:18;;18011:45;18088:2;18073:18;;17758:339::o;18102:135::-;18141:3;-1:-1:-1;;18162:17:635;;18159:43;;;18182:18;;:::i;:::-;-1:-1:-1;18229:1:635;18218:13;;18102:135::o;18651:341::-;18853:2;18835:21;;;18892:2;18872:18;;;18865:30;-1:-1:-1;;;18926:2:635;18911:18;;18904:47;18983:2;18968:18;;18651:341::o;19341:347::-;19543:2;19525:21;;;19582:2;19562:18;;;19555:30;-1:-1:-1;;;19616:2:635;19601:18;;19594:53;19679:2;19664:18;;19341:347::o;19693:128::-;19733:3;19764:1;19760:6;19757:1;19754:13;19751:39;;;19770:18;;:::i;:::-;-1:-1:-1;19806:9:635;;19693:128::o;19826:521::-;19903:4;19909:6;19969:11;19956:25;20063:2;20059:7;20048:8;20032:14;20028:29;20024:43;20004:18;20000:68;19990:96;;20082:1;20079;20072:12;19990:96;20109:33;;20161:20;;;-1:-1:-1;;;;;;20193:30:635;;20190:50;;;20236:1;20233;20226:12;20190:50;20269:4;20257:17;;-1:-1:-1;20300:14:635;20296:27;;;20286:38;;20283:58;;;20337:1;20334;20327:12;20685:125;20725:4;20753:1;20750;20747:8;20744:34;;;20758:18;;:::i;:::-;-1:-1:-1;20795:9:635;;20685:125::o;20815:267::-;20904:6;20899:3;20892:19;20956:6;20949:5;20942:4;20937:3;20933:14;20920:43;-1:-1:-1;21008:1:635;20983:16;;;21001:4;20979:27;;;20972:38;;;;21064:2;21043:15;;;-1:-1:-1;;21039:29:635;21030:39;;;21026:50;;20815:267::o;21087:506::-;21330:6;21319:9;21312:25;21373:2;21368;21357:9;21353:18;21346:30;21293:4;21399:62;21457:2;21446:9;21442:18;21434:6;21426;21399:62;:::i;:::-;21509:9;21501:6;21497:22;21492:2;21481:9;21477:18;21470:50;21537;21580:6;21572;21564;21537:50;:::i;:::-;21529:58;21087:506;-1:-1:-1;;;;;;;;21087:506:635:o;21942:112::-;21974:1;22000;21990:35;;22005:18;;:::i;:::-;-1:-1:-1;22039:9:635;;21942:112::o;22059:304::-;-1:-1:-1;;;;;22289:15:635;;;22271:34;;22341:15;;22336:2;22321:18;;22314:43;22221:2;22206:18;;22059:304::o;22368:245::-;22435:6;22488:2;22476:9;22467:7;22463:23;22459:32;22456:52;;;22504:1;22501;22494:12;22456:52;22536:9;22530:16;22555:28;22577:5;22555:28;:::i;22618:342::-;22820:2;22802:21;;;22859:2;22839:18;;;22832:30;-1:-1:-1;;;22893:2:635;22878:18;;22871:48;22951:2;22936:18;;22618:342::o;22965:339::-;23167:2;23149:21;;;23206:2;23186:18;;;23179:30;-1:-1:-1;;;23240:2:635;23225:18;;23218:45;23295:2;23280:18;;22965:339::o;23309:338::-;23511:2;23493:21;;;23550:2;23530:18;;;23523:30;-1:-1:-1;;;23584:2:635;23569:18;;23562:44;23638:2;23623:18;;23309:338::o;23652:340::-;23854:2;23836:21;;;23893:2;23873:18;;;23866:30;-1:-1:-1;;;23927:2:635;23912:18;;23905:46;23983:2;23968:18;;23652:340::o;23997:465::-;24254:2;24243:9;24236:21;24217:4;24280:56;24332:2;24321:9;24317:18;24309:6;24280:56;:::i;:::-;24384:9;24376:6;24372:22;24367:2;24356:9;24352:18;24345:50;24412:44;24449:6;24441;24412:44;:::i;:::-;24404:52;23997:465;-1:-1:-1;;;;;23997:465:635:o;24467:383::-;24664:2;24653:9;24646:21;24627:4;24690:45;24731:2;24720:9;24716:18;24708:6;24690:45;:::i;:::-;24783:9;24775:6;24771:22;24766:2;24755:9;24751:18;24744:50;24811:33;24837:6;24829;24811:33;:::i;25451:336::-;25653:2;25635:21;;;25692:2;25672:18;;;25665:30;-1:-1:-1;;;25726:2:635;25711:18;;25704:42;25778:2;25763:18;;25451:336::o;26199:274::-;26328:3;26366:6;26360:13;26382:53;26428:6;26423:3;26416:4;26408:6;26404:17;26382:53;:::i;:::-;26451:16;;;;;26199:274;-1:-1:-1;;26199:274:635:o;26478:561::-;-1:-1:-1;;;;;26775:15:635;;;26757:34;;26827:15;;26822:2;26807:18;;26800:43;26874:2;26859:18;;26852:34;;;26917:2;26902:18;;26895:34;;;26737:3;26960;26945:19;;26938:32;;;26700:4;;26987:46;;27013:19;;27005:6;26987:46;:::i;:::-;26979:54;26478:561;-1:-1:-1;;;;;;;26478:561:635:o;27044:249::-;27113:6;27166:2;27154:9;27145:7;27141:23;27137:32;27134:52;;;27182:1;27179;27172:12;27134:52;27214:9;27208:16;27233:30;27257:5;27233:30;:::i;27298:179::-;27333:3;27375:1;27357:16;27354:23;27351:120;;;27421:1;27418;27415;27400:23;-1:-1:-1;27458:1:635;27452:8;27447:3;27443:18;27351:120;27298:179;:::o;27482:671::-;27521:3;27563:4;27545:16;27542:26;27539:39;;;27482:671;:::o;27539:39::-;27605:2;27599:9;-1:-1:-1;;27670:16:635;27666:25;;27663:1;27599:9;27642:50;27721:4;27715:11;27745:16;-1:-1:-1;;;;;27851:2:635;27844:4;27836:6;27832:17;27829:25;27824:2;27816:6;27813:14;27810:45;27807:58;;;27858:5;;;;;27482:671;:::o;27807:58::-;27895:6;27889:4;27885:17;27874:28;;27931:3;27925:10;27958:2;27950:6;27947:14;27944:27;;;27964:5;;;;;;27482:671;:::o;27944:27::-;28048:2;28029:16;28023:4;28019:27;28015:36;28008:4;27999:6;27994:3;27990:16;27986:27;27983:69;27980:82;;;28055:5;;;;;;27482:671;:::o;27980:82::-;28071:57;28122:4;28113:6;28105;28101:19;28097:30;28091:4;28071:57;:::i;:::-;-1:-1:-1;28144:3:635;;27482:671;-1:-1:-1;;;;;27482:671:635:o;28503:339::-;28705:2;28687:21;;;28744:2;28724:18;;;28717:30;-1:-1:-1;;;28778:2:635;28763:18;;28756:45;28833:2;28818:18;;28503:339::o;28847:827::-;-1:-1:-1;;;;;29244:15:635;;;29226:34;;29296:15;;29291:2;29276:18;;29269:43;29206:3;29343:2;29328:18;;29321:31;;;29169:4;;29375:57;;29412:19;;29404:6;29375:57;:::i;:::-;29480:9;29472:6;29468:22;29463:2;29452:9;29448:18;29441:50;29514:44;29551:6;29543;29514:44;:::i;:::-;29500:58;;29607:9;29599:6;29595:22;29589:3;29578:9;29574:19;29567:51;29635:33;29661:6;29653;29635:33;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256)": "2bc43fd9",
    "contractURI()": "e8a3d485",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verifyClaim(address,uint256,uint256)": "4bbb1abf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"claim(address,uint256,uint256)\":{\"details\":\"The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.\",\"params\":{\"_quantity\":\"The number of tokens to mint.\",\"_receiver\":\"The recipient of the tokens to mint.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC1155-setApprovalForAll}\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"verifyClaim(address,uint256,uint256)\":{\"details\":\"Checks a request to claim NFTs against a custom condition.\",\"params\":{\"_claimer\":\"Caller of the claim function.\",\"_quantity\":\"The number of NFTs being claimed.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}}},\"stateVariables\":{\"totalSupply\":{\"details\":\"Mapping from tokenId => total circulating supply of NFTs of that tokenId.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"claim(address,uint256,uint256)\":{\"notice\":\"Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be lazy minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract supports the given interface.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"},\"verifyClaim(address,uint256,uint256)\":{\"notice\":\"Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc.\"}},\"notice\":\"BASE:      ERC1155Base      EXTENSION: LazyMint  The `ERC1155LazyMint` smart contract implements the ERC1155 NFT standard.  It includes the following additions to standard ERC1155 logic:      - Lazy minting      - Ability to mint NFTs via the provided `mintTo` and `batchMintTo` functions.      - Contract metadata for royalty support on platforms such as OpenSea that use        off-chain information to distribute roaylties.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - EIP 2981 compliance for royalty support on NFT marketplaces.  The `ERC1155LazyMint` contract uses the `LazyMint` extension.  'Lazy minting' means defining the metadata of NFTs without minting it to an address. Regular 'minting'  of  NFTs means actually assigning an owner to an NFT.  As a contract admin, this lets you prepare the metadata for NFTs that will be minted by an external party,  without paying the gas cost for actually minting the NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC1155LazyMint.sol\":\"ERC1155LazyMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC1155LazyMint.sol\":{\"keccak256\":\"0xbdbf54ebb3db64e34ccfc82c99d0a2880d26a999af0404de4cc84abd406d27db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://65f4f6609ade48387aa9993e71e8421f77da6449cfe08c7d694570aa07894783\",\"dweb:/ipfs/QmV95oHsY3vz7GViyg6PfNgsn7vDKKmUren7ZS6XcT45BC\"]},\"contracts/eip/ERC1155.sol\":{\"keccak256\":\"0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b\",\"dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/interface/IClaimableERC1155.sol\":{\"keccak256\":\"0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df\",\"dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "claim(address,uint256,uint256)": {
            "details": "The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.",
            "params": {
              "_quantity": "The number of tokens to mint.",
              "_receiver": "The recipient of the tokens to mint.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC1155-setApprovalForAll}"
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "verifyClaim(address,uint256,uint256)": {
            "details": "Checks a request to claim NFTs against a custom condition.",
            "params": {
              "_claimer": "Caller of the claim function.",
              "_quantity": "The number of NFTs being claimed.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "claim(address,uint256,uint256)": {
            "notice": "Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be lazy minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "supportsInterface(bytes4)": {
            "notice": "Returns whether this contract supports the given interface."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          },
          "verifyClaim(address,uint256,uint256)": {
            "notice": "Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC1155LazyMint.sol": "ERC1155LazyMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC1155LazyMint.sol": {
        "keccak256": "0xbdbf54ebb3db64e34ccfc82c99d0a2880d26a999af0404de4cc84abd406d27db",
        "urls": [
          "bzz-raw://65f4f6609ade48387aa9993e71e8421f77da6449cfe08c7d694570aa07894783",
          "dweb:/ipfs/QmV95oHsY3vz7GViyg6PfNgsn7vDKKmUren7ZS6XcT45BC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC1155.sol": {
        "keccak256": "0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6",
        "urls": [
          "bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b",
          "dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimableERC1155.sol": {
        "keccak256": "0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db",
        "urls": [
          "bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df",
          "dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC1155LazyMint.sol",
    "id": 2307,
    "exportedSymbols": {
      "BatchMintMetadata": [
        18037
      ],
      "ContractMetadata": [
        18264
      ],
      "DefaultOperatorFilterer": [
        18303
      ],
      "ERC1155": [
        8640
      ],
      "ERC1155LazyMint": [
        2306
      ],
      "IClaimableERC1155": [
        33146
      ],
      "IContractMetadata": [
        33216
      ],
      "IERC165": [
        14687
      ],
      "IERC2981": [
        14831
      ],
      "ILazyMint": [
        33591
      ],
      "IMulticall": [
        33705
      ],
      "IOwnable": [
        33955
      ],
      "IRoyalty": [
        34181
      ],
      "LazyMint": [
        21079
      ],
      "Multicall": [
        21413
      ],
      "OperatorFilterer": [
        21689
      ],
      "Ownable": [
        21941
      ],
      "ReentrancyGuard": [
        47047
      ],
      "Royalty": [
        23183
      ],
      "TWAddress": [
        64017
      ],
      "TWStrings": [
        64717
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11970:3",
    "nodes": [
      {
        "id": 1728,
        "nodeType": "PragmaDirective",
        "src": "39:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1730,
        "nodeType": "ImportDirective",
        "src": "86:45:3",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC1155.sol",
        "file": "../eip/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 8641,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1729,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8640,
              "src": "95:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC1155_$8640_$",
                "typeString": "type(contract ERC1155)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1731,
        "nodeType": "ImportDirective",
        "src": "133:43:3",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 18265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1732,
        "nodeType": "ImportDirective",
        "src": "177:36:3",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 21414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1733,
        "nodeType": "ImportDirective",
        "src": "214:34:3",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 21942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1734,
        "nodeType": "ImportDirective",
        "src": "249:34:3",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 23184,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1735,
        "nodeType": "ImportDirective",
        "src": "284:44:3",
        "nodes": [],
        "absolutePath": "contracts/extension/BatchMintMetadata.sol",
        "file": "../extension/BatchMintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 18038,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1736,
        "nodeType": "ImportDirective",
        "src": "329:35:3",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 21080,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1737,
        "nodeType": "ImportDirective",
        "src": "365:54:3",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IClaimableERC1155.sol",
        "file": "../extension/interface/IClaimableERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 33147,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1738,
        "nodeType": "ImportDirective",
        "src": "420:50:3",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFilterer.sol",
        "file": "../extension/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 18304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1739,
        "nodeType": "ImportDirective",
        "src": "472:30:3",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 64718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1740,
        "nodeType": "ImportDirective",
        "src": "503:68:3",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol",
        "file": "../external-deps/openzeppelin/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2307,
        "sourceUnit": 47048,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2306,
        "nodeType": "ContractDefinition",
        "src": "1757:10251:3",
        "nodes": [
          {
            "id": 1764,
            "nodeType": "UsingForDirective",
            "src": "1976:28:3",
            "nodes": [],
            "libraryName": {
              "id": 1762,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64717,
              "src": "1982:9:3"
            },
            "typeName": {
              "id": 1763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1996:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1769,
            "nodeType": "VariableDeclaration",
            "src": "2353:46:3",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1765,
              "nodeType": "StructuredDocumentation",
              "src": "2182:166:3",
              "text": "  @notice Returns the total supply of NFTs of a given tokenId\n  @dev Mapping from tokenId => total circulating supply of NFTs of that tokenId."
            },
            "functionSelector": "bd85b039",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2388:11:3",
            "scope": 2306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1768,
              "keyType": {
                "id": 1766,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2361:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2353:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1767,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2372:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1800,
            "nodeType": "FunctionDefinition",
            "src": "2585:345:3",
            "nodes": [],
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "2782:148:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1787,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "2804:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1786,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21934,
                      "src": "2792:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2792:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1789,
                  "nodeType": "ExpressionStatement",
                  "src": "2792:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1791,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "2853:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1792,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1779,
                        "src": "2872:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1790,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23114,
                      "src": "2828:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2828:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "2828:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2918:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1795,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21529,
                      "src": "2894:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1798,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:29:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1782,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1773,
                    "src": "2766:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1783,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1775,
                    "src": "2773:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1784,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1781,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8640,
                  "src": "2758:7:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2758:23:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2614:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2606:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2651:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2637:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1775,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2680:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2666:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2705:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2697:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1779,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2740:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "2732:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2596:161:3"
            },
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1827,
            "nodeType": "FunctionDefinition",
            "src": "3184:219:3",
            "nodes": [],
            "body": {
              "id": 1826,
              "nodeType": "Block",
              "src": "3268:135:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1810,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3292:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1826,
                      "src": "3278:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1809,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3278:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1814,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1812,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "3315:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1811,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17984,
                      "src": "3303:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1819,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "3365:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1820,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1803,
                                "src": "3375:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64599,
                              "src": "3375:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 1822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3375:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1817,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3348:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3348:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3348:47:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3341:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1815,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3341:6:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1808,
                  "id": 1825,
                  "nodeType": "Return",
                  "src": "3334:62:3"
                }
              ]
            },
            "baseFunctions": [
              7692
            ],
            "documentation": {
              "id": 1801,
              "nodeType": "StructuredDocumentation",
              "src": "3120:59:3",
              "text": "@notice Returns the metadata URI for the given tokenId."
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "3193:3:3",
            "overrides": {
              "id": 1805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3235:8:3"
            },
            "parameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3205:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "3197:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3197:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3196:18:3"
            },
            "returnParameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "3253:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:15:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1869,
            "nodeType": "FunctionDefinition",
            "src": "4564:534:3",
            "nodes": [],
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "4701:397:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1840,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "4719:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1841,
                            "name": "nextTokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "4730:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4730:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4719:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206964",
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4751:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        },
                        "value": "invalid id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        }
                      ],
                      "id": 1839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4711:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4711:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "4711:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4786:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4786:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1850,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "4798:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1851,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1834,
                        "src": "4808:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1847,
                      "name": "verifyClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1880,
                      "src": "4774:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4774:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:44:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1855,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "4918:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1856,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "4929:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1857,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1834,
                        "src": "4939:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1854,
                      "name": "_transferTokensOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2142,
                      "src": "4895:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "4895:54:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1861,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5048:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5048:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1863,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "5060:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1864,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "5071:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1865,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1834,
                        "src": "5081:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1860,
                      "name": "TokensClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33125,
                      "src": "5034:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5034:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "EmitStatement",
                  "src": "5029:62:3"
                }
              ]
            },
            "baseFunctions": [
              33135
            ],
            "documentation": {
              "id": 1828,
              "nodeType": "StructuredDocumentation",
              "src": "3588:971:3",
              "text": "  @notice          Lets an address claim multiple lazy minted NFTs at once to a recipient.\n                   This function prevents any reentrant calls, and is not allowed to be overridden.\n                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`\n                   functions to create custom logic for verification and claiming,\n                   for e.g. price collection, allowlist, max quantity, etc.\n  @dev             The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.\n                   The logic in `transferTokensOnClaim` does actual minting of tokens,\n                   can also be used to apply other state changes.\n  @param _receiver  The recipient of the tokens to mint.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of tokens to mint."
            },
            "functionSelector": "2bc43fd9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1836,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47046,
                  "src": "4688:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4688:12:3"
              }
            ],
            "name": "claim",
            "nameLocation": "4573:5:3",
            "parameters": {
              "id": 1835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "4596:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "4588:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4623:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "4615:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4615:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4649:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "4641:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4578:86:3"
            },
            "returnParameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4701:0:3"
            },
            "scope": 2306,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1880,
            "nodeType": "FunctionDefinition",
            "src": "5578:128:3",
            "nodes": [],
            "body": {
              "id": 1879,
              "nodeType": "Block",
              "src": "5704:2:3",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              33145
            ],
            "documentation": {
              "id": 1870,
              "nodeType": "StructuredDocumentation",
              "src": "5104:469:3",
              "text": "  @notice          Override this function to add logic for claim verification, based on conditions\n                   such as allowlist, price, max quantity etc.\n  @dev             Checks a request to claim NFTs against a custom condition.\n  @param _claimer   Caller of the claim function.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of NFTs being claimed."
            },
            "functionSelector": "4bbb1abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "5587:11:3",
            "parameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "5616:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "5608:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5608:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5642:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "5634:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "5668:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "5660:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5598:85:3"
            },
            "returnParameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5704:0:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1926,
            "nodeType": "FunctionDefinition",
            "src": "5991:376:3",
            "nodes": [],
            "body": {
              "id": 1925,
              "nodeType": "Block",
              "src": "6103:264:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1891,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6121:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1925,
                      "src": "6113:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1890,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6113:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1894,
                  "initialValue": {
                    "expression": {
                      "id": 1892,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6130:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6130:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6113:27:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1896,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "6159:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1897,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1883,
                            "src": "6169:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6159:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1899,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7639,
                              "src": "6179:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 1901,
                            "indexExpression": {
                              "id": 1900,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1883,
                              "src": "6196:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6179:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1903,
                          "indexExpression": {
                            "id": 1902,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "6204:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6179:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6159:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617070726f7665642063616c6c6572",
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6213:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        },
                        "value": "Unapproved caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        }
                      ],
                      "id": 1895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6151:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:82:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1907,
                  "nodeType": "ExpressionStatement",
                  "src": "6151:82:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1909,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7633,
                              "src": "6251:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1911,
                            "indexExpression": {
                              "id": 1910,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1883,
                              "src": "6261:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6251:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1913,
                          "indexExpression": {
                            "id": 1912,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1885,
                            "src": "6269:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6251:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1914,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1887,
                          "src": "6282:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6251:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73206f776e6564",
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6291:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                          "typeString": "literal_string \"Not enough tokens owned\""
                        },
                        "value": "Not enough tokens owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                          "typeString": "literal_string \"Not enough tokens owned\""
                        }
                      ],
                      "id": 1908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6243:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6243:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "6243:74:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1920,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "6334:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1921,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "6342:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1922,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "6352:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1919,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8351,
                      "src": "6328:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6328:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1924,
                  "nodeType": "ExpressionStatement",
                  "src": "6328:32:3"
                }
              ]
            },
            "documentation": {
              "id": 1881,
              "nodeType": "StructuredDocumentation",
              "src": "5712:274:3",
              "text": "  @notice         Lets an owner or approved operator burn NFTs of the given tokenId.\n  @param _owner   The owner of the NFT to burn.\n  @param _tokenId The tokenId of the NFT to burn.\n  @param _amount  The amount of the NFT to burn."
            },
            "functionSelector": "f5298aca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "6000:4:3",
            "parameters": {
              "id": 1888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6022:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "6014:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1885,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6046:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "6038:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1887,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6072:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "6064:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6064:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:81:3"
            },
            "returnParameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6103:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2001,
            "nodeType": "FunctionDefinition",
            "src": "6661:564:3",
            "nodes": [],
            "body": {
              "id": 2000,
              "nodeType": "Block",
              "src": "6798:427:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1939,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6816:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2000,
                      "src": "6808:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1938,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6808:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1942,
                  "initialValue": {
                    "expression": {
                      "id": 1940,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6825:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6825:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6808:27:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1944,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1939,
                            "src": "6854:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1945,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1929,
                            "src": "6864:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6854:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1947,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7639,
                              "src": "6874:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 1949,
                            "indexExpression": {
                              "id": 1948,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1929,
                              "src": "6891:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6874:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1951,
                          "indexExpression": {
                            "id": 1950,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1939,
                            "src": "6899:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6874:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6854:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617070726f7665642063616c6c6572",
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6908:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        },
                        "value": "Unapproved caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        }
                      ],
                      "id": 1943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6846:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6846:82:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1955,
                  "nodeType": "ExpressionStatement",
                  "src": "6846:82:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1957,
                            "name": "_tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "6946:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6946:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1959,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1935,
                            "src": "6966:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6966:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6946:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206d69736d61746368",
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6983:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
                          "typeString": "literal_string \"Length mismatch\""
                        },
                        "value": "Length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
                          "typeString": "literal_string \"Length mismatch\""
                        }
                      ],
                      "id": 1956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6938:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6938:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:63:3"
                },
                {
                  "body": {
                    "id": 1992,
                    "nodeType": "Block",
                    "src": "7062:107:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1978,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7633,
                                    "src": "7084:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => uint256))"
                                    }
                                  },
                                  "id": 1980,
                                  "indexExpression": {
                                    "id": 1979,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1929,
                                    "src": "7094:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7084:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 1984,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 1981,
                                    "name": "_tokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1932,
                                    "src": "7102:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1983,
                                  "indexExpression": {
                                    "id": 1982,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1966,
                                    "src": "7112:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7102:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7084:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1985,
                                  "name": "_amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1935,
                                  "src": "7119:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1987,
                                "indexExpression": {
                                  "id": 1986,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1966,
                                  "src": "7128:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7119:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7084:46:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73206f776e6564",
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7132:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                                "typeString": "literal_string \"Not enough tokens owned\""
                              },
                              "value": "Not enough tokens owned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                                "typeString": "literal_string \"Not enough tokens owned\""
                              }
                            ],
                            "id": 1977,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7076:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7076:82:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1991,
                        "nodeType": "ExpressionStatement",
                        "src": "7076:82:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1969,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1966,
                      "src": "7032:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1970,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "7036:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7036:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7032:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1993,
                  "initializationExpression": {
                    "assignments": [
                      1966
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7025:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1993,
                        "src": "7017:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7017:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1968,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7029:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7017:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1973,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "7054:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7059:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7054:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1976,
                    "nodeType": "ExpressionStatement",
                    "src": "7054:6:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "7012:157:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1995,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "7190:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1996,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "7198:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 1997,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1935,
                        "src": "7209:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 1994,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8461,
                      "src": "7179:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1999,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1927,
              "nodeType": "StructuredDocumentation",
              "src": "6373:283:3",
              "text": "  @notice         Lets an owner or approved operator burn NFTs of the given tokenIds.\n  @param _owner    The owner of the NFTs to burn.\n  @param _tokenIds The tokenIds of the NFTs to burn.\n  @param _amounts  The amounts of the NFTs to burn."
            },
            "functionSelector": "6b20c454",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnBatch",
            "nameLocation": "6670:9:3",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1929,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6697:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "6689:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6689:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "6730:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "6713:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1930,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6713:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1931,
                    "nodeType": "ArrayTypeName",
                    "src": "6713:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "6766:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "6749:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1933,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6749:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1934,
                    "nodeType": "ArrayTypeName",
                    "src": "6749:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6679:101:3"
            },
            "returnParameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2032,
            "nodeType": "FunctionDefinition",
            "src": "7487:449:3",
            "nodes": [],
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "7596:340:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2012,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2004,
                            "src": "7625:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783031666663396137",
                            "id": 2013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7640:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33540519_by_1",
                              "typeString": "int_const 33540519"
                            },
                            "value": "0x01ffc9a7"
                          },
                          "src": "7625:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2015,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2004,
                            "src": "7700:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30786439623637613236",
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7715:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3652614694_by_1",
                              "typeString": "int_const 3652614694"
                            },
                            "value": "0xd9b67a26"
                          },
                          "src": "7700:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7625:100:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2019,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2004,
                          "src": "7776:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783065383933343163",
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7791:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_243872796_by_1",
                            "typeString": "int_const 243872796"
                          },
                          "value": "0x0e89341c"
                        },
                        "src": "7776:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7625:176:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2023,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2004,
                        "src": "7863:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2025,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14831,
                              "src": "7883:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 2024,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7878:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7878:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$14831",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 2027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "7878:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "7863:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7625:279:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2011,
                  "id": 2030,
                  "nodeType": "Return",
                  "src": "7606:298:3"
                }
              ]
            },
            "baseFunctions": [
              7679,
              14686
            ],
            "documentation": {
              "id": 2002,
              "nodeType": "StructuredDocumentation",
              "src": "7411:71:3",
              "text": "@notice Returns whether this contract supports the given interface."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "7496:17:3",
            "overrides": {
              "id": 2008,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2006,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8640,
                  "src": "7563:7:3"
                },
                {
                  "id": 2007,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "7572:7:3"
                }
              ],
              "src": "7554:26:3"
            },
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "7521:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "7514:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7514:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7513:20:3"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "7590:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7589:6:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 2041,
            "nodeType": "FunctionDefinition",
            "src": "8200:112:3",
            "nodes": [],
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "8267:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2038,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21013,
                    "src": "8284:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2037,
                  "id": 2039,
                  "nodeType": "Return",
                  "src": "8277:28:3"
                }
              ]
            },
            "documentation": {
              "id": 2033,
              "nodeType": "StructuredDocumentation",
              "src": "8124:71:3",
              "text": "@notice The tokenId assigned to the next new NFT to be lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8209:17:3",
            "parameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8226:2:3"
            },
            "returnParameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "8258:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8257:9:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 2062,
            "nodeType": "FunctionDefinition",
            "src": "8545:227:3",
            "nodes": [],
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "8712:60:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2057,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "8746:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2058,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "8756:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8722:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$2306_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7791,
                      "src": "8722:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8722:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "8722:43:3"
                }
              ]
            },
            "baseFunctions": [
              7791
            ],
            "documentation": {
              "id": 2042,
              "nodeType": "StructuredDocumentation",
              "src": "8500:40:3",
              "text": "@dev See {ERC1155-setApprovalForAll}"
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2051,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2044,
                    "src": "8698:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2050,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21592,
                  "src": "8670:27:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8670:37:3"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "8554:17:3",
            "overrides": {
              "id": 2049,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2048,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8640,
                  "src": "8653:7:3"
                }
              ],
              "src": "8644:17:3"
            },
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8580:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "8572:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8572:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "8595:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "8590:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8590:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8571:33:3"
            },
            "returnParameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8712:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 2092,
            "nodeType": "FunctionDefinition",
            "src": "8839:271:3",
            "nodes": [],
            "body": {
              "id": 2091,
              "nodeType": "Block",
              "src": "9043:67:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2084,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2065,
                        "src": "9076:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2085,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2067,
                        "src": "9082:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2086,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "9086:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2087,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2071,
                        "src": "9090:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2088,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "9098:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2081,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9053:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$2306_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 2083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7829,
                      "src": "9053:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9053:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2090,
                  "nodeType": "ExpressionStatement",
                  "src": "9053:50:3"
                }
              ]
            },
            "baseFunctions": [
              7829
            ],
            "documentation": {
              "id": 2063,
              "nodeType": "StructuredDocumentation",
              "src": "8778:56:3",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2078,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2065,
                    "src": "9037:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2079,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2077,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21582,
                  "src": "9017:19:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "9017:25:3"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8848:16:3",
            "overrides": {
              "id": 2076,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2075,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8640,
                  "src": "9008:7:3"
                }
              ],
              "src": "8999:17:3"
            },
            "parameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8882:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "8874:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8874:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8904:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "8896:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8896:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8924:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "8916:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8916:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8944:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "8936:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8936:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8973:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "8960:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8864:119:3"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9043:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 2124,
            "nodeType": "FunctionDefinition",
            "src": "9182:303:3",
            "nodes": [],
            "body": {
              "id": 2123,
              "nodeType": "Block",
              "src": "9411:74:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2116,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2095,
                        "src": "9449:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2117,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2097,
                        "src": "9455:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2118,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "9459:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2119,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "9464:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2120,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2105,
                        "src": "9473:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2113,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9421:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$2306_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7869,
                      "src": "9421:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2122,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:57:3"
                }
              ]
            },
            "baseFunctions": [
              7869
            ],
            "documentation": {
              "id": 2093,
              "nodeType": "StructuredDocumentation",
              "src": "9116:61:3",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2110,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2095,
                    "src": "9405:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2109,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21582,
                  "src": "9385:19:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "9385:25:3"
              }
            ],
            "name": "safeBatchTransferFrom",
            "nameLocation": "9191:21:3",
            "overrides": {
              "id": 2108,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2107,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8640,
                  "src": "9376:7:3"
                }
              ],
              "src": "9367:17:3"
            },
            "parameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9230:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2124,
                  "src": "9222:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9222:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9252:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2124,
                  "src": "9244:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9244:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9281:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2124,
                  "src": "9264:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2098,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9264:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2099,
                    "nodeType": "ArrayTypeName",
                    "src": "9264:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9311:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2124,
                  "src": "9294:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2101,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9294:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2102,
                    "nodeType": "ArrayTypeName",
                    "src": "9294:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9341:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2124,
                  "src": "9328:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9328:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9212:139:3"
            },
            "returnParameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9411:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 2142,
            "nodeType": "FunctionDefinition",
            "src": "10056:193:3",
            "nodes": [],
            "body": {
              "id": 2141,
              "nodeType": "Block",
              "src": "10191:58:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2135,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2127,
                        "src": "10207:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2136,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "10218:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2137,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "10228:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10239:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2134,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8175,
                      "src": "10201:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10201:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "10201:41:3"
                }
              ]
            },
            "documentation": {
              "id": 2125,
              "nodeType": "StructuredDocumentation",
              "src": "9673:378:3",
              "text": "  @notice          Mints tokens to receiver on claim.\n                   Any state changes related to `claim` must be applied\n                   here by overriding this function.\n  @dev             Override this function to add logic for state updation.\n                   When overriding, apply any state changes before `_mint`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10065:22:3",
            "parameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2127,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10105:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2142,
                  "src": "10097:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10097:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10132:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2142,
                  "src": "10124:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10124:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "10158:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2142,
                  "src": "10150:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10150:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10087:86:3"
            },
            "returnParameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10191:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2156,
            "nodeType": "FunctionDefinition",
            "src": "10341:115:3",
            "nodes": [],
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "10411:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2149,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10428:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10428:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2151,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "10442:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10442:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10428:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2148,
                  "id": 2154,
                  "nodeType": "Return",
                  "src": "10421:28:3"
                }
              ]
            },
            "baseFunctions": [
              21078
            ],
            "documentation": {
              "id": 2143,
              "nodeType": "StructuredDocumentation",
              "src": "10255:81:3",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "10350:12:3",
            "overrides": {
              "id": 2145,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10387:8:3"
            },
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10362:2:3"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "10405:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10405:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10404:6:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2170,
            "nodeType": "FunctionDefinition",
            "src": "10552:121:3",
            "nodes": [],
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "10628:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2163,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10645:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10645:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2165,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "10659:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10659:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10645:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2162,
                  "id": 2168,
                  "nodeType": "Return",
                  "src": "10638:28:3"
                }
              ]
            },
            "baseFunctions": [
              18263
            ],
            "documentation": {
              "id": 2157,
              "nodeType": "StructuredDocumentation",
              "src": "10462:85:3",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10561:18:3",
            "overrides": {
              "id": 2159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10604:8:3"
            },
            "parameters": {
              "id": 2158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10579:2:3"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "10622:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10622:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10621:6:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2184,
            "nodeType": "FunctionDefinition",
            "src": "10757:115:3",
            "nodes": [],
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "10827:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2177,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10844:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10844:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2179,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "10858:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10858:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10844:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2176,
                  "id": 2182,
                  "nodeType": "Return",
                  "src": "10837:28:3"
                }
              ]
            },
            "baseFunctions": [
              21940
            ],
            "documentation": {
              "id": 2171,
              "nodeType": "StructuredDocumentation",
              "src": "10679:73:3",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10766:12:3",
            "overrides": {
              "id": 2173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10803:8:3"
            },
            "parameters": {
              "id": 2172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10778:2:3"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "10821:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10821:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10820:6:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2198,
            "nodeType": "FunctionDefinition",
            "src": "10963:121:3",
            "nodes": [],
            "body": {
              "id": 2197,
              "nodeType": "Block",
              "src": "11039:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2191,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11056:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11056:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2193,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "11070:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11070:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11056:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2190,
                  "id": 2196,
                  "nodeType": "Return",
                  "src": "11049:28:3"
                }
              ]
            },
            "baseFunctions": [
              23182
            ],
            "documentation": {
              "id": 2185,
              "nodeType": "StructuredDocumentation",
              "src": "10878:80:3",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10972:18:3",
            "overrides": {
              "id": 2187,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11015:8:3"
            },
            "parameters": {
              "id": 2186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10990:2:3"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2198,
                  "src": "11033:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11033:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11032:6:3"
            },
            "scope": 2306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2212,
            "nodeType": "FunctionDefinition",
            "src": "11183:124:3",
            "nodes": [],
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "11262:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2205,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11279:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11279:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2207,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "11293:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11293:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11279:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2204,
                  "id": 2210,
                  "nodeType": "Return",
                  "src": "11272:28:3"
                }
              ]
            },
            "baseFunctions": [
              21534
            ],
            "documentation": {
              "id": 2199,
              "nodeType": "StructuredDocumentation",
              "src": "11090:88:3",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "11192:26:3",
            "overrides": {
              "id": 2201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11238:8:3"
            },
            "parameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11218:2:3"
            },
            "returnParameters": {
              "id": 2204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "11256:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11256:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11255:6:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2305,
            "nodeType": "FunctionDefinition",
            "src": "11374:632:3",
            "nodes": [],
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "11595:411:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2234,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2215,
                        "src": "11632:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2235,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2217,
                        "src": "11642:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2236,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2219,
                        "src": "11648:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2237,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "11652:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2238,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "11657:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2239,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2227,
                        "src": "11666:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2231,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11605:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$2306_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8479,
                      "src": "11605:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11605:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2241,
                  "nodeType": "ExpressionStatement",
                  "src": "11605:66:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2242,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2217,
                      "src": "11686:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11702:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11694:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11694:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11694:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11686:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2272,
                  "nodeType": "IfStatement",
                  "src": "11682:155:3",
                  "trueBody": {
                    "id": 2271,
                    "nodeType": "Block",
                    "src": "11706:131:3",
                    "statements": [
                      {
                        "body": {
                          "id": 2269,
                          "nodeType": "Block",
                          "src": "11761:66:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2259,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1769,
                                    "src": "11779:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 2263,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2260,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2222,
                                      "src": "11791:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2262,
                                    "indexExpression": {
                                      "id": 2261,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2249,
                                      "src": "11795:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11791:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11779:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2264,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2225,
                                    "src": "11802:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2266,
                                  "indexExpression": {
                                    "id": 2265,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2249,
                                    "src": "11810:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11802:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11779:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2268,
                              "nodeType": "ExpressionStatement",
                              "src": "11779:33:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2252,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "11740:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2253,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "11744:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11744:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11740:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2270,
                        "initializationExpression": {
                          "assignments": [
                            2249
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2249,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11733:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2270,
                              "src": "11725:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2248,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11725:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2251,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11737:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11725:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "11756:3:3",
                            "subExpression": {
                              "id": 2256,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2249,
                              "src": "11758:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2258,
                          "nodeType": "ExpressionStatement",
                          "src": "11756:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "11720:107:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2273,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "11851:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11865:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11857:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11857:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11857:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11851:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2303,
                  "nodeType": "IfStatement",
                  "src": "11847:153:3",
                  "trueBody": {
                    "id": 2302,
                    "nodeType": "Block",
                    "src": "11869:131:3",
                    "statements": [
                      {
                        "body": {
                          "id": 2300,
                          "nodeType": "Block",
                          "src": "11924:66:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2290,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1769,
                                    "src": "11942:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 2294,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2291,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2222,
                                      "src": "11954:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2293,
                                    "indexExpression": {
                                      "id": 2292,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2280,
                                      "src": "11958:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11954:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11942:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2295,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2225,
                                    "src": "11965:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2297,
                                  "indexExpression": {
                                    "id": 2296,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2280,
                                    "src": "11973:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11965:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11942:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2299,
                              "nodeType": "ExpressionStatement",
                              "src": "11942:33:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2283,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "11903:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2284,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "11907:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11907:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11903:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2301,
                        "initializationExpression": {
                          "assignments": [
                            2280
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2280,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11896:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2301,
                              "src": "11888:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2279,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11888:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2282,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11900:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11888:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "11919:3:3",
                            "subExpression": {
                              "id": 2287,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "11921:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2289,
                          "nodeType": "ExpressionStatement",
                          "src": "11919:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "11883:107:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              8479
            ],
            "documentation": {
              "id": 2213,
              "nodeType": "StructuredDocumentation",
              "src": "11313:56:3",
              "text": "@dev Runs before every token transfer / mint / burn."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11383:20:3",
            "overrides": {
              "id": 2229,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11586:8:3"
            },
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11421:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11413:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11413:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2217,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11447:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11439:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2219,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11469:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11461:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11461:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2222,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11498:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11481:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2220,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11481:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2221,
                    "nodeType": "ArrayTypeName",
                    "src": "11481:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11528:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11511:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2223,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11511:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2224,
                    "nodeType": "ArrayTypeName",
                    "src": "11511:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11558:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "11545:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11545:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11403:165:3"
            },
            "returnParameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11595:0:3"
            },
            "scope": 2306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1742,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8640,
              "src": "1789:7:3"
            },
            "id": 1743,
            "nodeType": "InheritanceSpecifier",
            "src": "1789:7:3"
          },
          {
            "baseName": {
              "id": 1744,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18264,
              "src": "1802:16:3"
            },
            "id": 1745,
            "nodeType": "InheritanceSpecifier",
            "src": "1802:16:3"
          },
          {
            "baseName": {
              "id": 1746,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21941,
              "src": "1824:7:3"
            },
            "id": 1747,
            "nodeType": "InheritanceSpecifier",
            "src": "1824:7:3"
          },
          {
            "baseName": {
              "id": 1748,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23183,
              "src": "1837:7:3"
            },
            "id": 1749,
            "nodeType": "InheritanceSpecifier",
            "src": "1837:7:3"
          },
          {
            "baseName": {
              "id": 1750,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21413,
              "src": "1850:9:3"
            },
            "id": 1751,
            "nodeType": "InheritanceSpecifier",
            "src": "1850:9:3"
          },
          {
            "baseName": {
              "id": 1752,
              "name": "BatchMintMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18037,
              "src": "1865:17:3"
            },
            "id": 1753,
            "nodeType": "InheritanceSpecifier",
            "src": "1865:17:3"
          },
          {
            "baseName": {
              "id": 1754,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21079,
              "src": "1888:8:3"
            },
            "id": 1755,
            "nodeType": "InheritanceSpecifier",
            "src": "1888:8:3"
          },
          {
            "baseName": {
              "id": 1756,
              "name": "IClaimableERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33146,
              "src": "1902:17:3"
            },
            "id": 1757,
            "nodeType": "InheritanceSpecifier",
            "src": "1902:17:3"
          },
          {
            "baseName": {
              "id": 1758,
              "name": "DefaultOperatorFilterer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18303,
              "src": "1925:23:3"
            },
            "id": 1759,
            "nodeType": "InheritanceSpecifier",
            "src": "1925:23:3"
          },
          {
            "baseName": {
              "id": 1760,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47047,
              "src": "1954:15:3"
            },
            "id": 1761,
            "nodeType": "InheritanceSpecifier",
            "src": "1954:15:3"
          }
        ],
        "canonicalName": "ERC1155LazyMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1741,
          "nodeType": "StructuredDocumentation",
          "src": "573:1182:3",
          "text": "      BASE:      ERC1155Base\n      EXTENSION: LazyMint\n  The `ERC1155LazyMint` smart contract implements the ERC1155 NFT standard.\n  It includes the following additions to standard ERC1155 logic:\n      - Lazy minting\n      - Ability to mint NFTs via the provided `mintTo` and `batchMintTo` functions.\n      - Contract metadata for royalty support on platforms such as OpenSea that use\n        off-chain information to distribute roaylties.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - EIP 2981 compliance for royalty support on NFT marketplaces.\n  The `ERC1155LazyMint` contract uses the `LazyMint` extension.\n  'Lazy minting' means defining the metadata of NFTs without minting it to an address. Regular 'minting'\n  of  NFTs means actually assigning an owner to an NFT.\n  As a contract admin, this lets you prepare the metadata for NFTs that will be minted by an external party,\n  without paying the gas cost for actually minting the NFTs."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2306,
          47047,
          18303,
          21689,
          21535,
          33932,
          33146,
          21079,
          18037,
          33591,
          21413,
          33705,
          23183,
          34181,
          14831,
          14687,
          21941,
          33955,
          18264,
          33216,
          8640,
          14622,
          14600
        ],
        "name": "ERC1155LazyMint",
        "nameLocation": "1766:15:3",
        "scope": 2307,
        "usedErrors": [
          21546
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 3
}